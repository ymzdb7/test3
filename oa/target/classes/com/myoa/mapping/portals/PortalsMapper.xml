<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myoa.dao.portals.PortalsMapper" >
  <resultMap id="BaseResultMap" type="com.myoa.model.portals.Portals" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="portals_id" property="portalsId" javaType="Integer" />
    <result column="portals_no" property="portalsNo" javaType="Integer" />
    <result column="portal_name" property="portalName" javaType="String" />
    <result column="portal_type" property="portalType" javaType="Integer" />
    <result column="portal_link" property="portalLink" javaType="String" />
    <result column="module_id" property="moduleId" javaType="String" />
    <result column="use_flag" property="useFlag" javaType="Integer" />
    <result column="access_priv_dept" property="accessPrivDept" javaType="String" />
    <result column="access_priv_priv" property="accessPrivPriv" javaType="String" />
    <result column="access_priv_user" property="accessPrivUser" javaType="String" />
    <result column="access_Priv" property="accessPriv" javaType="Integer" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    portals_id, portals_no, portal_name, portal_type, portal_link, module_id, use_flag, 
    access_priv_dept, access_priv_priv, access_priv_user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myoa.model.portals.PortalsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from portals
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from portals
    where portals_id = #{portalsId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from portals
    where portals_id = #{portalsId}
  </delete>
  <delete id="deleteByExample" parameterType="com.myoa.model.portals.PortalsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from portals
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myoa.model.portals.Portals" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into portals (portals_id, portals_no, portal_name, 
      portal_type, portal_link, module_id, 
      use_flag, access_priv_dept, access_priv_priv, 
      access_priv_user,access_Priv)
    values (#{portalsId}, #{portalsNo}, #{portalName},
      #{portalType}, #{portalLink}, #{moduleId},
      #{useFlag}, #{accessPrivDept}, #{accessPrivPriv},
      #{accessPrivUser} ,#{accessPriv})
  </insert>
  <insert id="insertSelective" parameterType="com.myoa.model.portals.Portals" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into portals
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="portalsId != null" >
        portals_id,
      </if>
      <if test="portalsNo != null" >
        portals_no,
      </if>
      <if test="portalName != null" >
        portal_name,
      </if>
      <if test="portalType != null" >
        portal_type,
      </if>
      <if test="portalLink != null" >
        portal_link,
      </if>
      <if test="moduleId != null" >
        module_id,
      </if>
      <if test="useFlag != null" >
        use_flag,
      </if>
      <if test="accessPrivDept != null" >
        access_priv_dept,
      </if>
      <if test="accessPrivPriv != null" >
        access_priv_priv,
      </if>
      <if test="accessPrivUser != null" >
        access_priv_user,
      </if>
      <if test="accessPriv !=null">
        access_Priv,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="portalsId != null" >
        #{portalsId},
      </if>
      <if test="portalsNo != null" >
        #{portalsNo},
      </if>
      <if test="portalName != null" >
        #{portalName},
      </if>
      <if test="portalType != null" >
        #{portalType},
      </if>
      <if test="portalLink != null" >
        #{portalLink},
      </if>
      <if test="moduleId != null" >
        #{moduleId},
      </if>
      <if test="useFlag != null" >
        #{useFlag},
      </if>
      <if test="accessPrivDept != null" >
        #{accessPrivDept},
      </if>
      <if test="accessPrivPriv != null" >
        #{accessPrivPriv},
      </if>
      <if test="accessPrivUser != null" >
        #{accessPrivUser},
      </if>
      <if test="accessPriv !=null">
        #{accessPriv},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myoa.model.portals.PortalsExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from portals
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update portals
    <set >
      <if test="record.portalsId != null" >
        portals_id = #{record.portalsId},
      </if>
      <if test="record.portalsNo != null" >
        portals_no = #{record.portalsNo},
      </if>
      <if test="record.portalName != null" >
        portal_name = #{record.portalName},
      </if>
      <if test="record.portalType != null" >
        portal_type = #{record.portalType},
      </if>
      <if test="record.portalLink != null" >
        portal_link = #{record.portalLink},
      </if>
      <if test="record.moduleId != null" >
        module_id = #{record.moduleId},
      </if>
      <if test="record.useFlag != null" >
        use_flag = #{record.useFlag},
      </if>
      <if test="record.accessPrivDept != null" >
        access_priv_dept = #{record.accessPrivDept},
      </if>
      <if test="record.accessPrivPriv != null" >
        access_priv_priv = #{record.accessPrivPriv},
      </if>
      <if test="record.accessPrivUser != null" >
        access_priv_user = #{record.accessPrivUser},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update portals
    set portals_id = #{record.portalsId},
      portals_no = #{record.portalsNo},
      portal_name = #{record.portalName},
      portal_type = #{record.portalType},
      portal_link = #{record.portalLink},
      module_id = #{record.moduleId},
      use_flag = #{record.useFlag},
      access_priv_dept = #{record.accessPrivDept},
      access_priv_priv = #{record.accessPrivPriv},
      access_priv_user = #{record.accessPrivUser}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myoa.model.portals.Portals" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update portals
    <set >
      <if test="portalsNo != null" >
        portals_no = #{portalsNo},
      </if>
      <if test="portalName != null" >
        portal_name = #{portalName},
      </if>
      <if test="portalType != null" >
        portal_type = #{portalType},
      </if>
      <if test="portalLink != null" >
        portal_link = #{portalLink},
      </if>
      <if test="moduleId != null" >
        module_id = #{moduleId},
      </if>
      <if test="useFlag != null" >
        use_flag = #{useFlag},
      </if>
      <if test="accessPrivDept != null" >
        access_priv_dept = #{accessPrivDept},
      </if>
      <if test="accessPrivPriv != null" >
        access_priv_priv = #{accessPrivPriv},
      </if>
      <if test="accessPrivUser != null" >
        access_priv_user = #{accessPrivUser},
      </if>
      <if test="accessPriv !=null">
        access_Priv = #{accessPriv},
      </if>
    </set>
    where portals_id = #{portalsId}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myoa.model.portals.Portals" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update portals
    set portals_no = #{portalsNo},
      portal_name = #{portalName},
      portal_type = #{portalType},
      portal_link = #{portalLink},
      module_id = #{moduleId},
      use_flag = #{useFlag},
      access_priv_dept = #{accessPrivDept},
      access_priv_priv = #{accessPrivPriv},
      access_priv_user = #{accessPrivUser}
    where portals_id = #{portalsId}
  </update>


  <select id="selPortals" parameterType="map" resultMap="BaseResultMap">
    SELECT * from portals
    <where>
      <if test="accessPrivDept!=null and accessPrivDept!=''">
        AND (access_priv_dept like CONCAT('%,',CONCAT(#{accessPrivDept},',%'))
          OR access_priv_dept like CONCAT(#{accessPrivDept},',%')
          OR access_priv_dept is NULL
          OR access_priv_dept = ''
          OR access_priv = 0
          )
      </if>

      <if test="accessPrivPriv!=null and accessPrivPriv!=''">
        AND (access_priv_priv like CONCAT('%,',CONCAT(#{accessPrivPriv},',%'))
          OR access_priv_priv like CONCAT(#{accessPrivPriv},',%')
          OR access_priv_priv is NULL
          OR access_priv_priv = ''
          OR access_priv = 0
          )
      </if>

      <if test="accessPrivUser!=null and accessPrivUser!=''">
        AND (access_priv_user like CONCAT('%,',CONCAT(#{accessPrivUser},',%'))
          OR access_priv_user like CONCAT(#{accessPrivUser},',%')
          OR access_priv_user is NULL
          OR access_priv_user = ''
          OR access_priv = 0
          )
      </if>

    </where>
    ORDER BY portals_no
  </select>

  <select id="selPortals" parameterType="map" resultMap="BaseResultMap" databaseId="oracle">
    SELECT * from portals
    <where>
      1=1
      <if test="accessPrivDept!=null and accessPrivDept!=''">
        AND (dbms_lob.substr(access_priv_dept) LIKE CONCAT('%,',CONCAT(#{accessPrivDept},',%'))
        OR dbms_lob.substr(access_priv_dept) LIKE CONCAT(#{accessPrivDept},',%')
        OR dbms_lob.substr(access_priv_dept) IS NULL
        OR dbms_lob.substr(access_priv_dept) = ''
        OR access_priv = 0

        )
      </if>

      <if test="accessPrivPriv!=null and accessPrivPriv!=''">
        AND (
        dbms_lob.substr(access_priv_priv) LIKE CONCAT('%,',CONCAT(#{accessPrivPriv},',%'))
        OR dbms_lob.substr(access_priv_priv) LIKE CONCAT(#{accessPrivPriv},',%')
        OR dbms_lob.substr(access_priv_priv) IS NULL
        OR dbms_lob.substr(access_priv_priv) = ''
        OR access_priv = 0
        )
      </if>

      <if test="accessPrivUser!=null and accessPrivUser!=''">
        AND (
        dbms_lob.substr(access_priv_user) LIKE CONCAT('%,',CONCAT(#{accessPrivUser},',%'))
        OR dbms_lob.substr(access_priv_user) LIKE CONCAT(#{accessPrivUser},',%')
        OR dbms_lob.substr(access_priv_user) IS NULL
        OR dbms_lob.substr(access_priv_user) = ''
        OR access_priv = 0
        )
      </if>
    </where>
    ORDER BY portals_no
  </select>

  <select id="selPortals" parameterType="map" resultMap="BaseResultMap" databaseId="dm">
    SELECT * from portals
    <where>
      1=1
      <if test="accessPrivDept!=null and accessPrivDept!=''">
        AND (dbms_lob.substr(access_priv_dept) LIKE CONCAT('%,',CONCAT(#{accessPrivDept},',%'))
        OR dbms_lob.substr(access_priv_dept) LIKE CONCAT(#{accessPrivDept},',%')
        OR dbms_lob.substr(access_priv_dept) IS NULL
        OR dbms_lob.substr(access_priv_dept) = ''
        OR access_priv = 0

        )
      </if>

      <if test="accessPrivPriv!=null and accessPrivPriv!=''">
        AND (
        dbms_lob.substr(access_priv_priv) LIKE CONCAT('%,',CONCAT(#{accessPrivPriv},',%'))
        OR dbms_lob.substr(access_priv_priv) LIKE CONCAT(#{accessPrivPriv},',%')
        OR dbms_lob.substr(access_priv_priv) IS NULL
        OR dbms_lob.substr(access_priv_priv) = ''
        OR access_priv = 0
        )
      </if>

      <if test="accessPrivUser!=null and accessPrivUser!=''">
        AND (
        dbms_lob.substr(access_priv_user) LIKE CONCAT('%,',CONCAT(#{accessPrivUser},',%'))
        OR dbms_lob.substr(access_priv_user) LIKE CONCAT(#{accessPrivUser},',%')
        OR dbms_lob.substr(access_priv_user) IS NULL
        OR dbms_lob.substr(access_priv_user) = ''
        OR access_priv = 0
        )
      </if>
    </where>
    ORDER BY portals_no
  </select>

  <delete id="deletePortalsByIds" >
    DELETE FROM portals where portals_id in
    <foreach collection="ids" item="id" open="(" close=")" separator="," >
       #{id}
    </foreach>
  </delete>

  <select id="selPortalsById" parameterType="int" resultMap="BaseResultMap" >
    SELECT * from portals where  portals_id = #{portalsId}
  </select>


</mapper>