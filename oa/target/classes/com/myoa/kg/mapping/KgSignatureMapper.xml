<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myoa.dao.kg.KgSignatureMapper">
    <resultMap id="BaseResultMap" type="com.myoa.kg.model.KgSignature">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="SIGNATURE_ID" property="signatureId" jdbcType="INTEGER"/>
        <result column="SIGNATURE_NAME" property="signatureName" jdbcType="VARCHAR"/>
        <result column="SIGNATURE_UNIT" property="signatureUnit" jdbcType="VARCHAR"/>
        <result column="SIGNATURE_KGID" property="signatureKgid" jdbcType="VARCHAR"/>
        <result column="SIGNATURE_STATUS" property="signatureStatus" jdbcType="INTEGER"/>
        <result column="SIGNKEY_KEYSNS" property="signkeyKeysns" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="SignMapWithKey" type="com.myoa.kg.model.KgSignature" extends="BaseResultMap">
        <result column="KEY_ID" property="keyId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SIGNATURE_ID, SIGNATURE_NAME, SIGNATURE_UNIT, SIGNATURE_KGID, SIGNATURE_STATUS
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myoa.kg.model.KgSignatureExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from kg_signature
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from kg_signature
        where SIGNATURE_ID = #{signatureId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from kg_signature
        where SIGNATURE_ID = #{signatureId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.myoa.kg.model.KgSignatureExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from kg_signature
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.myoa.kg.model.KgSignature">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into kg_signature (SIGNATURE_ID, SIGNATURE_NAME, SIGNATURE_UNIT, SIGNATURE_KGID,
        SIGNATURE_STATUS)
        values (#{signatureId,jdbcType=INTEGER}, #{signatureName,jdbcType=VARCHAR}, #{signatureKgid,jdbcType=VARCHAR},
        #{signatureStatus,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.myoa.kg.model.KgSignature" useGeneratedKeys="true" keyProperty="signatureId">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into kg_signature
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="signatureId != null">
                SIGNATURE_ID,
            </if>
            <if test="signatureName != null">
                SIGNATURE_NAME,
            </if>
            <if test="signatureUnit != null">
                SIGNATURE_UNIT,
            </if>
            <if test="signatureKgid != null">
                SIGNATURE_KGID,
            </if>
            <if test="signatureStatus != null">
                SIGNATURE_STATUS,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="signatureId != null">
                #{signatureId,jdbcType=INTEGER},
            </if>
            <if test="signatureName != null">
                #{signatureName,jdbcType=VARCHAR},
            </if>
            <if test="signatureUnit != null">
                #{signatureUnit,jdbcType=VARCHAR},
            </if>
            <if test="signatureKgid != null">
                #{signatureKgid,jdbcType=VARCHAR},
            </if>
            <if test="signatureStatus != null">
                #{signatureStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.myoa.kg.model.KgSignatureExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from kg_signature
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update kg_signature
        <set>
            <if test="record.signatureId != null">
                SIGNATURE_ID = #{record.signatureId,jdbcType=INTEGER},
            </if>
            <if test="record.signatureName != null">
                SIGNATURE_NAME = #{record.signatureName,jdbcType=VARCHAR},
            </if>
            <if test="record.signatureUnit != null">
                SIGNATURE_UNIT = #{record.signatureUnit,jdbcType=VARCHAR},
            </if>
            <if test="record.signatureKgid != null">
                SIGNATURE_KGID = #{record.signatureKgid,jdbcType=VARCHAR},
            </if>
            <if test="record.signatureStatus != null">
                SIGNATURE_STATUS = #{record.signatureStatus,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update kg_signature
        set SIGNATURE_ID = #{record.signatureId,jdbcType=INTEGER},
        SIGNATURE_NAME = #{record.signatureName,jdbcType=VARCHAR},
        SIGNATURE_UNIT = #{record.signatureUnit,jdbcType=VARCHAR},
        SIGNATURE_KGID = #{record.signatureKgid,jdbcType=VARCHAR},
        SIGNATURE_STATUS = #{record.signatureStatus,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.myoa.kg.model.KgSignature">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update kg_signature
        <set>
            <if test="signatureName != null">
                SIGNATURE_NAME = #{signatureName,jdbcType=VARCHAR},
            </if>
            <if test="signatureUnit != null">
                SIGNATURE_UNIT = #{signatureUnit,jdbcType=VARCHAR},
            </if>
            <if test="signatureKgid != null">
                SIGNATURE_KGID = #{signatureKgid,jdbcType=VARCHAR},
            </if>
            <if test="signatureStatus != null">
                SIGNATURE_STATUS = #{signatureStatus,jdbcType=INTEGER},
            </if>
        </set>
        where SIGNATURE_ID = #{signatureId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.myoa.kg.model.KgSignature">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update kg_signature
        set SIGNATURE_NAME = #{signatureName,jdbcType=VARCHAR},
        SIGNATURE_UNIT = #{signatureUnit,jdbcType=VARCHAR},
        SIGNATURE_KGID = #{signatureKgid,jdbcType=VARCHAR},
        SIGNATURE_STATUS = #{signatureStatus,jdbcType=INTEGER}
        where SIGNATURE_ID = #{signatureId,jdbcType=INTEGER}
    </update>

    <select id="selectUserSign" parameterType="Integer" resultMap="SignMapWithKey">
    SELECT ks.*,krs.KEY_ID FROM kg_relation_keyuser kru
INNER JOIN kg_signkey ksk ON ksk.SIGNKEY_ID =kru.KEY_ID
LEFT JOIN kg_relation_keysign krs ON krs.KEY_ID =kru.KEY_ID
LEFT JOIN kg_signature ks ON ks.SIGNATURE_ID = krs.SIGN_ID
WHERE kru.USER_ID=#{userId}
  </select>

    <select id="getKgSignatureList" resultMap="BaseResultMap">
        SELECT
	ks.*, GROUP_CONCAT(ksk.SIGNKEY_KEYSN) SIGNKEY_KEYSNS
FROM
	kg_relation_keysign krs
INNER JOIN kg_signkey ksk ON ksk.SIGNKEY_ID = krs.KEY_ID
LEFT JOIN kg_signature ks ON ks.SIGNATURE_ID = krs.SIGN_ID
GROUP BY ks.SIGNATURE_ID
    </select>
</mapper>