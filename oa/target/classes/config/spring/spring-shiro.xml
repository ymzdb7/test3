<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd" default-lazy-init="true">

    <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:config/spring/ehcache-shiro.xml"></property>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="cn.trt.base.shiro.RetryLimitHashedCredentialsMatcher">
    <constructor-arg ref="cacheManager"/>
    <property name="hashAlgorithmName" value="md5"/>
    <!--<property name="hashIterations" value="2"/>-->
    <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>
    <!-- 項目自定义的Realm -->
    <bean id="shiroRealm" class="cn.trt.base.shiro.ShiroRealm"/>

    <!-- shiro配置 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="shiroRealm"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器-->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <!--<property name="rememberMeParam" value="rememberMe"/>-->
        <property name="loginUrl" value="/login"/>
    </bean>

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <property name="loginUrl" value="/login"/>
        <!-- 登录成功后要跳转的连接(本例中此属性用不到,因为登录成功后的处理逻辑在LoginController里硬编码为main.jsp了) -->
        <property name="successUrl" value="/mainemp"/>
        <!-- 用户访问未对其授权的资源时,所显示的连接 -->
        <!-- 若想更明显的测试此属性可以修改它的值,如unauthor.jsp,然后用[玄玉]登录后访问/admin/listUser.jsp就看见浏览器会显示unauthor.jsp -->
        <property name="unauthorizedUrl" value="/error/error"/>
        <!-- Shiro连接约束配置,即过滤链的定义 -->
        <!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->
        <!-- anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->
        <!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
        <property name="filterChainDefinitions">
            <value>
                /login=anon
                /js/**=anon
                /css/**=anon
                /images/**=anon
                /My97DatePicker/**=anon
                /**=authc
            </value>
        </property>
    </bean>
    <bean
            class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查,开启Shiro的注解(如@RequiresRoles,@RequiresPermissions),需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- 会话ID生成器 -->
    <!--<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>-->

    <!-- 会话DAO -->
    <!--<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">-->
    <!--<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>-->
    <!--<property name="sessionIdGenerator" ref="sessionIdGenerator"/>-->
    <!--</bean>-->

    <!-- 会话验证调度器 -->
    <!--<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">-->
    <!--<property name="sessionValidationInterval" value="1800000"/>-->
    <!--<property name="sessionManager" ref="sessionManager"/>-->
    <!--</bean>-->

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <!--<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">-->
    <!--<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>-->
    <!--<property name="arguments" ref="securityManager"/>-->
    <!--</bean>-->
    <!-- 支持Shiro对Controller的方法级AOP安全控制 begin-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"-->
    <!--depends-on="lifecycleBeanPostProcessor">-->
    <!--<property name="proxyTargetClass" value="true"/>-->
    <!--</bean>-->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
    <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->

    <!-- 会话Cookie模板 -->
    <!--<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
    <!--<constructor-arg value="sid"/>-->
    <!--<property name="httpOnly" value="true"/>-->
    <!--<property name="maxAge" value="180000"/>-->
    <!--</bean>-->
    <!--<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
    <!--<constructor-arg value="rememberMe"/>-->
    <!--<property name="httpOnly" value="true"/>-->
    <!--<property name="maxAge" value="2592000"/>-->
    <!--30天 -->
    <!--</bean>-->
    <!-- 	rememberMe管理器 -->
    <!--<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">-->
    <!--<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>-->
    <!--<property name="cookie" ref="rememberMeCookie"/>-->
    <!--</bean>-->
    <!-- 会话管理器 -->
    <!--<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">-->
    <!--<property name="globalSessionTimeout" value="1800000"/>-->
    <!--<property name="deleteInvalidSessions" value="true"/>-->
    <!--<property name="sessionValidationSchedulerEnabled" value="true"/>-->
    <!--<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>-->
    <!--<property name="sessionDAO" ref="sessionDAO"/>-->
    <!--<property name="sessionIdCookieEnabled" value="true"/>-->
    <!--<property name="sessionIdCookie" ref="sessionIdCookie"/>-->
    <!--</bean>-->

    <!-- 安全管理器 -->
    <!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
    <!--<property name="realm" ref="shiroRealm"/>-->
    <!--<property name="sessionManager" ref="sessionManager"/>-->
    <!--<property name="rememberMeManager" ref="rememberMeManager"/>-->
    <!--</bean>-->

    <!-- Shiro 的Web过滤器-->
    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
    <!--&lt;!&ndash; shiro的核心安全接口 &ndash;&gt;-->
    <!--<property name="securityManager" ref="securityManager"/>-->
    <!--&lt;!&ndash; 要求登录时的链接 &ndash;&gt;-->
    <!--<property name="loginUrl" value="/login"/>-->
    <!--&lt;!&ndash; 登陆成功后要跳转的连接 &ndash;&gt;-->
    <!--<property name="successUrl" value="/mainemp"/>-->
    <!--&lt;!&ndash; 未授权时要跳转的连接 &ndash;&gt;-->
    <!--<property name="unauthorizedUrl" value="/unauthorized.html"/>-->
    <!--<property name="filterChainDefinitions">-->
    <!--<value>-->
    <!--/login=anon-->
    <!--/js/**=anon-->
    <!--/css/**=anon-->
    <!--/images/**=anon-->
    <!--/My97DatePicker/**=anon-->
    <!--/**=authc-->
    <!--</value>-->
    <!--</property>-->
    <!--</bean>-->
</beans>