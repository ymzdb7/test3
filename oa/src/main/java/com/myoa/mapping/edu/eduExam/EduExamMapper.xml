<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myoa.dao.edu.EduExamMapper" >
  <resultMap id="BaseResultMap" type="com.myoa.model.edu.eduExam.EduExam" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="SCHOOL_YEAR" property="schoolYear" jdbcType="VARCHAR" />
    <result column="SEMESTER" property="semester" jdbcType="VARCHAR" />
    <result column="EXAM_TYPE" property="examType" jdbcType="VARCHAR" />
    <result column="RELEASE_TIME" property="releaseTime" jdbcType="TIMESTAMP" />
    <result column="EXAM_NAME" property="examName" jdbcType="VARCHAR" />
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="GRADE_ID" property="gradeId" jdbcType="LONGVARCHAR" />
    <result column="GRADE_NAME" property="gradeName" jdbcType="LONGVARCHAR" />
    <result column="EXAM_ARRANGE" property="examArrange" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_ID" property="attachmentId" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="LONGVARCHAR" />
    <result column="CLASS_ID" property="classId" jdbcType="LONGVARCHAR" />
    <result column="CLASS_NAME" property="className" jdbcType="LONGVARCHAR" />
    <result column="EXAM_USER_ID" property="examUserId" jdbcType="LONGVARCHAR" />
    <result column="EXAM_USER_NAME" property="examUserName" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, SCHOOL_YEAR, SEMESTER, EXAM_TYPE, RELEASE_TIME, EXAM_NAME
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    GRADE_ID, GRADE_NAME, EXAM_ARRANGE, ATTACHMENT_ID, ATTACHMENT_NAME, CLASS_ID, CLASS_NAME, 
    EXAM_USER_ID, EXAM_USER_NAME
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="BaseResultMap" parameterType="com.myoa.model.edu.eduExam.EduExamExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from edu_exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
   *
    from edu_exam
      order by ID DESC

  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
        *
    from edu_exam
    where ID = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from edu_exam
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myoa.model.edu.eduExam.EduExamExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from edu_exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myoa.model.edu.eduExam.EduExamWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into edu_exam (ID, SCHOOL_YEAR, SEMESTER, 
      EXAM_TYPE, RELEASE_TIME, EXAM_NAME, 
      GRADE_ID, GRADE_NAME, EXAM_ARRANGE, 
      ATTACHMENT_ID, ATTACHMENT_NAME, CLASS_ID, 
      CLASS_NAME, EXAM_USER_ID, EXAM_USER_NAME
      )
    values (#{id,jdbcType=INTEGER}, #{schoolYear,jdbcType=VARCHAR}, #{semester,jdbcType=VARCHAR}, 
      #{examType,jdbcType=VARCHAR}, #{releaseTime,jdbcType=TIMESTAMP}, #{examName,jdbcType=VARCHAR}, 
      #{gradeId,jdbcType=LONGVARCHAR}, #{gradeName,jdbcType=LONGVARCHAR}, #{examArrange,jdbcType=LONGVARCHAR}, 
      #{attachmentId,jdbcType=LONGVARCHAR}, #{attachmentName,jdbcType=LONGVARCHAR}, #{classId,jdbcType=LONGVARCHAR}, 
      #{className,jdbcType=LONGVARCHAR}, #{examUserId,jdbcType=LONGVARCHAR}, #{examUserName,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myoa.model.edu.eduExam.EduExam" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey order="AFTER" keyProperty="id" resultType="int">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into edu_exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="schoolYear != null" >
        SCHOOL_YEAR,
      </if>
      <if test="semester != null" >
        SEMESTER,
      </if>
      <if test="examType != null" >
        EXAM_TYPE,
      </if>
      <if test="releaseTime != null" >
        RELEASE_TIME,
      </if>
      <if test="examName != null" >
        EXAM_NAME,
      </if>
      <if test="gradeId != null" >
        GRADE_ID,
      </if>
      <if test="gradeName != null" >
        GRADE_NAME,
      </if>
      <if test="examArrange != null" >
        EXAM_ARRANGE,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
      <if test="classId != null" >
        CLASS_ID,
      </if>
      <if test="className != null" >
        CLASS_NAME,
      </if>
      <if test="examUserId != null" >
        EXAM_USER_ID,
      </if>
      <if test="examUserName != null" >
        EXAM_USER_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="schoolYear != null" >
        #{schoolYear},
      </if>
      <if test="semester != null" >
        #{semester},
      </if>
      <if test="examType != null" >
        #{examType},
      </if>
      <if test="releaseTime != null" >
        #{releaseTime},
      </if>
      <if test="examName != null" >
        #{examName},
      </if>
      <if test="gradeId != null" >
        #{gradeId},
      </if>
      <if test="gradeName != null" >
        #{gradeName},
      </if>
      <if test="examArrange != null" >
        #{examArrange},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName},
      </if>
      <if test="classId != null" >
        #{classId},
      </if>
      <if test="className != null" >
        #{className},
      </if>
      <if test="examUserId != null" >
        #{examUserId},
      </if>
      <if test="examUserName != null" >
        #{examUserName},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myoa.model.edu.eduExam.EduExamExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from edu_exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_exam
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolYear != null" >
        SCHOOL_YEAR = #{record.schoolYear,jdbcType=VARCHAR},
      </if>
      <if test="record.semester != null" >
        SEMESTER = #{record.semester,jdbcType=VARCHAR},
      </if>
      <if test="record.examType != null" >
        EXAM_TYPE = #{record.examType,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseTime != null" >
        RELEASE_TIME = #{record.releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.examName != null" >
        EXAM_NAME = #{record.examName,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeId != null" >
        GRADE_ID = #{record.gradeId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.gradeName != null" >
        GRADE_NAME = #{record.gradeName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.examArrange != null" >
        EXAM_ARRANGE = #{record.examArrange,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentId != null" >
        ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentName != null" >
        ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.classId != null" >
        CLASS_ID = #{record.classId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.className != null" >
        CLASS_NAME = #{record.className,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.examUserId != null" >
        EXAM_USER_ID = #{record.examUserId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.examUserName != null" >
        EXAM_USER_NAME = #{record.examUserName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_exam
    set ID = #{record.id,jdbcType=INTEGER},
      SCHOOL_YEAR = #{record.schoolYear,jdbcType=VARCHAR},
      SEMESTER = #{record.semester,jdbcType=VARCHAR},
      EXAM_TYPE = #{record.examType,jdbcType=VARCHAR},
      RELEASE_TIME = #{record.releaseTime,jdbcType=TIMESTAMP},
      EXAM_NAME = #{record.examName,jdbcType=VARCHAR},
      GRADE_ID = #{record.gradeId,jdbcType=LONGVARCHAR},
      GRADE_NAME = #{record.gradeName,jdbcType=LONGVARCHAR},
      EXAM_ARRANGE = #{record.examArrange,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR},
      CLASS_ID = #{record.classId,jdbcType=LONGVARCHAR},
      CLASS_NAME = #{record.className,jdbcType=LONGVARCHAR},
      EXAM_USER_ID = #{record.examUserId,jdbcType=LONGVARCHAR},
      EXAM_USER_NAME = #{record.examUserName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_exam
    set ID = #{record.id,jdbcType=INTEGER},
      SCHOOL_YEAR = #{record.schoolYear,jdbcType=VARCHAR},
      SEMESTER = #{record.semester,jdbcType=VARCHAR},
      EXAM_TYPE = #{record.examType,jdbcType=VARCHAR},
      RELEASE_TIME = #{record.releaseTime,jdbcType=TIMESTAMP},
      EXAM_NAME = #{record.examName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myoa.model.edu.eduExam.EduExam" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_exam
    <set >
      <if test="schoolYear != null" >
        SCHOOL_YEAR = #{schoolYear},
      </if>
      <if test="semester != null" >
        SEMESTER = #{semester},
      </if>
      <if test="examType != null" >
        EXAM_TYPE = #{examType},
      </if>
      <if test="releaseTime != null" >
        RELEASE_TIME = #{releaseTime},
      </if>
      <if test="examName != null" >
        EXAM_NAME = #{examName},
      </if>
      <if test="gradeId != null" >
        GRADE_ID = #{gradeId},
      </if>
      <if test="gradeName != null" >
        GRADE_NAME = #{gradeName},
      </if>
      <if test="examArrange != null" >
        EXAM_ARRANGE = #{examArrange},
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID = #{attachmentId},
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME = #{attachmentName},
      </if>
      <if test="classId != null" >
        CLASS_ID = #{classId},
      </if>
      <if test="className != null" >
        CLASS_NAME = #{className},
      </if>
      <if test="examUserId != null" >
        EXAM_USER_ID = #{examUserId},
      </if>
      <if test="examUserName != null" >
        EXAM_USER_NAME = #{examUserName},
      </if>
    </set>
    where ID = #{id}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myoa.model.edu.eduExam.EduExamWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_exam
    set SCHOOL_YEAR = #{schoolYear,jdbcType=VARCHAR},
      SEMESTER = #{semester,jdbcType=VARCHAR},
      EXAM_TYPE = #{examType,jdbcType=VARCHAR},
      RELEASE_TIME = #{releaseTime,jdbcType=TIMESTAMP},
      EXAM_NAME = #{examName,jdbcType=VARCHAR},
      GRADE_ID = #{gradeId,jdbcType=LONGVARCHAR},
      GRADE_NAME = #{gradeName,jdbcType=LONGVARCHAR},
      EXAM_ARRANGE = #{examArrange,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR},
      CLASS_ID = #{classId,jdbcType=LONGVARCHAR},
      CLASS_NAME = #{className,jdbcType=LONGVARCHAR},
      EXAM_USER_ID = #{examUserId,jdbcType=LONGVARCHAR},
      EXAM_USER_NAME = #{examUserName,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myoa.model.edu.eduExam.EduExam" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_exam
    set SCHOOL_YEAR = #{schoolYear,jdbcType=VARCHAR},
      SEMESTER = #{semester,jdbcType=VARCHAR},
      EXAM_TYPE = #{examType,jdbcType=VARCHAR},
      RELEASE_TIME = #{releaseTime,jdbcType=TIMESTAMP},
      EXAM_NAME = #{examName,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectEduExam" resultMap="BaseResultMap" parameterType="com.myoa.model.edu.eduExam.EduExamWithBLOBs">
    SELECT  * FROM edu_exam WHERE 1=1
    <if test="eduExamWithBLOBs.schoolYear != null and eduExamWithBLOBs.schoolYear!=''" >
      AND  SCHOOL_YEAR = #{eduExamWithBLOBs.schoolYear,jdbcType=VARCHAR}
    </if>
    <if test="eduExamWithBLOBs.semester != null and eduExamWithBLOBs.semester!=''" >
      AND SEMESTER = #{eduExamWithBLOBs.semester,jdbcType=VARCHAR}
    </if>
    <if test="eduExamWithBLOBs.examType != null and eduExamWithBLOBs.examType!=''" >
      AND EXAM_TYPE = #{eduExamWithBLOBs.examType,jdbcType=VARCHAR}
    </if>
    <if test="eduExamWithBLOBs.examArrange != null and eduExamWithBLOBs.examArrange!=''" >
      AND EXAM_ARRANGE = #{eduExamWithBLOBs.examArrange,jdbcType=LONGVARCHAR}
    </if>
    order by ID DESC
  </select>

  <insert id="insertEduExam" parameterType="com.myoa.model.edu.eduExam.EduExamWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into edu_exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="schoolYear != null" >
        SCHOOL_YEAR,
      </if>
      <if test="semester != null" >
        SEMESTER,
      </if>
      <if test="examType != null" >
        EXAM_TYPE,
      </if>
      <if test="releaseTime != null" >
        RELEASE_TIME,
      </if>
      <if test="examName != null" >
        EXAM_NAME,
      </if>
      <if test="gradeId != null" >
        GRADE_ID,
      </if>
      <if test="gradeName != null" >
        GRADE_NAME,
      </if>
      <if test="examArrange != null" >
        EXAM_ARRANGE,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
      <if test="classId != null" >
        CLASS_ID,
      </if>
      <if test="className != null" >
        CLASS_NAME,
      </if>
      <if test="examUserId != null" >
        EXAM_USER_ID,
      </if>
      <if test="examUserName != null" >
        EXAM_USER_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="schoolYear != null" >
        #{schoolYear,jdbcType=VARCHAR},
      </if>
      <if test="semester != null" >
        #{semester,jdbcType=VARCHAR},
      </if>
      <if test="examType != null" >
        #{examType,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null" >
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examName != null" >
        #{examName,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=LONGVARCHAR},
      </if>
      <if test="gradeName != null" >
        #{gradeName,jdbcType=LONGVARCHAR},
      </if>
      <if test="examArrange != null" >
        #{examArrange,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=LONGVARCHAR},
      </if>
      <if test="className != null" >
        #{className,jdbcType=LONGVARCHAR},
      </if>
      <if test="examUserId != null" >
        #{examUserId,jdbcType=LONGVARCHAR},
      </if>
      <if test="examUserName != null" >
        #{examUserName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="queryExamByExamName"  resultMap="BaseResultMap" parameterType="com.myoa.model.edu.eduExam.EduExam">
     SELECT * FROM edu_exam WHERE EXAM_NAME = #{examName}
  </select>
</mapper>