<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myoa.dao.officesupplies.OfficeTranshistoryMapper" >
  <resultMap id="BaseResultMap" type="com.myoa.model.officesupplies.OfficeTranshistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="TRANS_ID" property="transId" jdbcType="INTEGER" />
    <result column="PRO_ID" property="proId" jdbcType="INTEGER" />
    <result column="BORROWER" property="borrower" jdbcType="VARCHAR" />
    <result column="TRANS_FLAG" property="transFlag" jdbcType="VARCHAR" />
    <result column="TRANS_QTY" property="transQty" jdbcType="INTEGER" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="TRANS_DATE" property="transDate" jdbcType="DATE" />
    <result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
    <result column="TRANS_STATE" property="transState" jdbcType="VARCHAR" />
    <result column="FACT_QTY" property="factQty" jdbcType="INTEGER" />
    <result column="COMPANY" property="company" jdbcType="VARCHAR" />
    <result column="BAND" property="bandStr" jdbcType="VARCHAR" />
    <result column="CYCLE_NO" property="cycleNo" jdbcType="INTEGER" />
    <result column="CYCLE" property="cycle" jdbcType="CHAR" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="PRO_KEEPER" property="proKeeper" jdbcType="VARCHAR" />
    <result column="GRANTOR" property="grantor" jdbcType="VARCHAR" />
    <result column="GRANT_STATUS" property="grantStatus" jdbcType="CHAR" />
    <result column="DEPT_MANAGER" property="deptManager" jdbcType="VARCHAR" />
    <result column="DEPT_STATUS" property="deptStatus" jdbcType="INTEGER" />
    <result column="RETURN_STATUS" property="returnStatus" jdbcType="INTEGER" />
    <result column="RETURN_DATE" property="returnDate" jdbcType="DATE" />
    <result column="PRO_NAME" property="proName" jdbcType="VARCHAR" />
    <result column="ID" property="typeId" jdbcType="INTEGER" />
    <result column="TYPE_DEPOSITORY" property="depositoryId" jdbcType="INTEGER" />
    <result column="PRO_LOWSTOCK" property="proLowstock" jdbcType="INTEGER" />
    <result column="PRO_MAXSTOCK" property="proMaxstock" jdbcType="INTEGER" />
    <result column="PRO_PRICE" property="proPrice" javaType="Double" />
    <result column="DEPOSITORY_NAME" property="depositoryName" jdbcType="VARCHAR" />
    <result column="TYPE_NAME" property="typeName" jdbcType="VARCHAR" />
    <result column="PRO_STOCK" property="proStock" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="REMARK" property="remark" jdbcType="LONGVARCHAR" />
    <result column="REASON" property="reason" jdbcType="LONGVARCHAR" />
    <result column="RETURN_REASON" property="returnReason" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    TRANS_ID, PRO_ID, BORROWER, TRANS_FLAG, TRANS_QTY, PRICE, TRANS_DATE, OPERATOR, TRANS_STATE,
    FACT_QTY, COMPANY, BAND, CYCLE_NO, CYCLE, DEPT_ID, PRO_KEEPER, GRANTOR, GRANT_STATUS,
    DEPT_MANAGER, DEPT_STATUS, RETURN_STATUS, RETURN_DATE
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    REMARK, REASON, RETURN_REASON
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from office_transhistory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from office_transhistory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    SELECT t.*,p.PRO_NAME,type.ID,type.TYPE_DEPOSITORY,p.PRO_LOWSTOCK,p.PRO_MAXSTOCK,p.PRO_PRICE
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    WHERE t.TRANS_ID=#{transId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from office_transhistory
    where TRANS_ID = #{transId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from office_transhistory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into office_transhistory (TRANS_ID, PRO_ID, BORROWER,
    TRANS_FLAG, TRANS_QTY, PRICE,
    TRANS_DATE, OPERATOR, TRANS_STATE,
    FACT_QTY, COMPANY, BAND,
    CYCLE_NO, CYCLE, DEPT_ID,
    PRO_KEEPER, GRANTOR, GRANT_STATUS,
    DEPT_MANAGER, DEPT_STATUS, RETURN_STATUS,
    RETURN_DATE, REMARK, REASON,
    RETURN_REASON)
    values (#{transId,jdbcType=INTEGER}, #{proId,jdbcType=INTEGER}, #{borrower,jdbcType=VARCHAR},
    #{transFlag,jdbcType=VARCHAR}, #{transQty,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL},
    #{transDate,jdbcType=DATE}, #{operator,jdbcType=VARCHAR}, #{transState,jdbcType=VARCHAR},
    #{factQty,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR}, #{bandStr,jdbcType=VARCHAR},
    #{cycleNo,jdbcType=INTEGER}, #{cycle,jdbcType=CHAR}, #{deptId,jdbcType=INTEGER},
    #{proKeeper,jdbcType=VARCHAR}, #{grantor,jdbcType=VARCHAR}, #{grantStatus,jdbcType=CHAR},
    #{deptManager,jdbcType=VARCHAR}, #{deptStatus,jdbcType=INTEGER}, #{returnStatus,jdbcType=INTEGER},
    #{returnDate,jdbcType=DATE}, #{remark,jdbcType=LONGVARCHAR}, #{reason,jdbcType=LONGVARCHAR},
    #{returnReason,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" >
    insert into office_transhistory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="transId != null" >
        TRANS_ID,
      </if>
      <if test="proId != null" >
        PRO_ID,
      </if>
      <if test="borrower != null" >
        BORROWER,
      </if>
      <if test="transFlag != null" >
        TRANS_FLAG,
      </if>
      <if test="transQty != null" >
        TRANS_QTY,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="transDate != null" >
        TRANS_DATE,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
      <if test="transState != null" >
        TRANS_STATE,
      </if>
      <if test="factQty != null" >
        FACT_QTY,
      </if>
      <if test="company != null" >
        COMPANY,
      </if>
      <if test="bandStr != null" >
        BAND,
      </if>
      <if test="cycleNo != null" >
        CYCLE_NO,
      </if>
      <if test="cycle != null" >
        CYCLE,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="proKeeper != null" >
        PRO_KEEPER,
      </if>
      <if test="grantor != null" >
        GRANTOR,
      </if>
      <if test="grantStatus != null" >
        GRANT_STATUS,
      </if>
      <if test="deptManager != null" >
        DEPT_MANAGER,
      </if>
      <if test="deptStatus != null" >
        DEPT_STATUS,
      </if>
      <if test="returnStatus != null" >
        RETURN_STATUS,
      </if>
      <if test="returnDate != null" >
        RETURN_DATE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="reason != null" >
        REASON,
      </if>
      <if test="returnReason != null" >
        RETURN_REASON,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="transId != null" >
        #{transId,jdbcType=INTEGER},
      </if>
      <if test="proId != null" >
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="borrower != null" >
        #{borrower,jdbcType=VARCHAR},
      </if>
      <if test="transFlag != null" >
        #{transFlag,jdbcType=VARCHAR},
      </if>
      <if test="transQty != null" >
        #{transQty,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="transDate != null" >
        #{transDate,jdbcType=DATE},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="transState != null" >
        #{transState,jdbcType=VARCHAR},
      </if>
      <if test="factQty != null" >
        #{factQty,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="bandStr != null" >
        #{bandStr},
      </if>
      <if test="cycleNo != null" >
        #{cycleNo,jdbcType=INTEGER},
      </if>
      <if test="cycle != null" >
        #{cycle,jdbcType=CHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="proKeeper != null" >
        #{proKeeper,jdbcType=VARCHAR},
      </if>
      <if test="grantor != null" >
        #{grantor,jdbcType=VARCHAR},
      </if>
      <if test="grantStatus != null" >
        #{grantStatus,jdbcType=CHAR},
      </if>
      <if test="deptManager != null" >
        #{deptManager,jdbcType=VARCHAR},
      </if>
      <if test="deptStatus != null" >
        #{deptStatus,jdbcType=INTEGER},
      </if>
      <if test="returnStatus != null" >
        #{returnStatus,jdbcType=INTEGER},
      </if>
      <if test="returnDate != null" >
        #{returnDate,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="returnReason != null" >
        #{returnReason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="transId" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" databaseId="oracle">
    <selectKey order="BEFORE" keyProperty="transId" resultType="int">
      select OFFICE_TRANSHISTORY_ID_SEQ.nextval as transId from dual
    </selectKey>
    insert into office_transhistory
    <trim prefix="(" suffix=")" suffixOverrides="," >
        TRANS_ID,
      <if test="proId != null" >
        PRO_ID,
      </if>
      <if test="borrower != null" >
        BORROWER,
      </if>
      <if test="transFlag != null" >
        TRANS_FLAG,
      </if>
      <if test="transQty != null" >
        TRANS_QTY,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="transDate != null" >
        TRANS_DATE,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
      <if test="transState != null" >
        TRANS_STATE,
      </if>
      <if test="factQty != null" >
        FACT_QTY,
      </if>
      <if test="company != null" >
        COMPANY,
      </if>
      <if test="bandStr != null" >
        BAND,
      </if>
      <if test="cycleNo != null" >
        CYCLE_NO,
      </if>
      <if test="cycle != null" >
        CYCLE,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="proKeeper != null" >
        PRO_KEEPER,
      </if>
      <if test="grantor != null" >
        GRANTOR,
      </if>
      <if test="grantStatus != null" >
        GRANT_STATUS,
      </if>
      <if test="deptManager != null" >
        DEPT_MANAGER,
      </if>
      <if test="deptStatus != null" >
        DEPT_STATUS,
      </if>
      <if test="returnStatus != null" >
        RETURN_STATUS,
      </if>
      <if test="returnDate != null" >
        RETURN_DATE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="reason != null" >
        REASON,
      </if>
      <if test="returnReason != null" >
        RETURN_REASON,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{transId,jdbcType=INTEGER},
      <if test="proId != null" >
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="borrower != null" >
        #{borrower,jdbcType=VARCHAR},
      </if>
      <if test="transFlag != null" >
        #{transFlag,jdbcType=VARCHAR},
      </if>
      <if test="transQty != null" >
        #{transQty,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="transDate != null" >
        #{transDate,jdbcType=DATE},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="transState != null" >
        #{transState,jdbcType=VARCHAR},
      </if>
      <if test="factQty != null" >
        #{factQty,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="bandStr != null" >
        #{bandStr},
      </if>
      <if test="cycleNo != null" >
        #{cycleNo,jdbcType=INTEGER},
      </if>
      <if test="cycle != null" >
        #{cycle,jdbcType=CHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="proKeeper != null" >
        #{proKeeper,jdbcType=VARCHAR},
      </if>
      <if test="grantor != null" >
        #{grantor,jdbcType=VARCHAR},
      </if>
      <if test="grantStatus != null" >
        #{grantStatus,jdbcType=CHAR},
      </if>
      <if test="deptManager != null" >
        #{deptManager,jdbcType=VARCHAR},
      </if>
      <if test="deptStatus != null" >
        #{deptStatus,jdbcType=INTEGER},
      </if>
      <if test="returnStatus != null" >
        #{returnStatus,jdbcType=INTEGER},
      </if>
      <if test="returnDate != null" >
        #{returnDate,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="returnReason != null" >
        #{returnReason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="transId" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" databaseId="dm">
    <selectKey order="BEFORE" keyProperty="transId" resultType="int">
      select OFFICE_TRANSHISTORY_ID_SEQ.nextval as transId from dual
    </selectKey>
    insert into office_transhistory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      TRANS_ID,
      <if test="proId != null" >
        PRO_ID,
      </if>
      <if test="borrower != null" >
        BORROWER,
      </if>
      <if test="transFlag != null" >
        TRANS_FLAG,
      </if>
      <if test="transQty != null" >
        TRANS_QTY,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="transDate != null" >
        TRANS_DATE,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
      <if test="transState != null" >
        TRANS_STATE,
      </if>
      <if test="factQty != null" >
        FACT_QTY,
      </if>
      <if test="company != null" >
        COMPANY,
      </if>
      <if test="bandStr != null" >
        BAND,
      </if>
      <if test="cycleNo != null" >
        CYCLE_NO,
      </if>
      <if test="cycle != null" >
        CYCLE,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="proKeeper != null" >
        PRO_KEEPER,
      </if>
      <if test="grantor != null" >
        GRANTOR,
      </if>
      <if test="grantStatus != null" >
        GRANT_STATUS,
      </if>
      <if test="deptManager != null" >
        DEPT_MANAGER,
      </if>
      <if test="deptStatus != null" >
        DEPT_STATUS,
      </if>
      <if test="returnStatus != null" >
        RETURN_STATUS,
      </if>
      <if test="returnDate != null" >
        RETURN_DATE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="reason != null" >
        REASON,
      </if>
      <if test="returnReason != null" >
        RETURN_REASON,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{transId,jdbcType=INTEGER},
      <if test="proId != null" >
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="borrower != null" >
        #{borrower,jdbcType=VARCHAR},
      </if>
      <if test="transFlag != null" >
        #{transFlag,jdbcType=VARCHAR},
      </if>
      <if test="transQty != null" >
        #{transQty,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="transDate != null" >
        #{transDate,jdbcType=DATE},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="transState != null" >
        #{transState,jdbcType=VARCHAR},
      </if>
      <if test="factQty != null" >
        #{factQty,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="bandStr != null" >
        #{bandStr},
      </if>
      <if test="cycleNo != null" >
        #{cycleNo,jdbcType=INTEGER},
      </if>
      <if test="cycle != null" >
        #{cycle,jdbcType=CHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="proKeeper != null" >
        #{proKeeper,jdbcType=VARCHAR},
      </if>
      <if test="grantor != null" >
        #{grantor,jdbcType=VARCHAR},
      </if>
      <if test="grantStatus != null" >
        #{grantStatus,jdbcType=CHAR},
      </if>
      <if test="deptManager != null" >
        #{deptManager,jdbcType=VARCHAR},
      </if>
      <if test="deptStatus != null" >
        #{deptStatus,jdbcType=INTEGER},
      </if>
      <if test="returnStatus != null" >
        #{returnStatus,jdbcType=INTEGER},
      </if>
      <if test="returnDate != null" >
        #{returnDate,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="returnReason != null" >
        #{returnReason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from office_transhistory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update office_transhistory
    <set >
      <if test="record.transId != null" >
        TRANS_ID = #{record.transId,jdbcType=INTEGER},
      </if>
      <if test="record.proId != null" >
        PRO_ID = #{record.proId,jdbcType=INTEGER},
      </if>
      <if test="record.borrower != null" >
        BORROWER = #{record.borrower,jdbcType=VARCHAR},
      </if>
      <if test="record.transFlag != null" >
        TRANS_FLAG = #{record.transFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.transQty != null" >
        TRANS_QTY = #{record.transQty,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        PRICE = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.transDate != null" >
        TRANS_DATE = #{record.transDate,jdbcType=DATE},
      </if>
      <if test="record.operator != null" >
        OPERATOR = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.transState != null" >
        TRANS_STATE = #{record.transState,jdbcType=VARCHAR},
      </if>
      <if test="record.factQty != null" >
        FACT_QTY = #{record.factQty,jdbcType=INTEGER},
      </if>
      <if test="record.company != null" >
        COMPANY = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.bandStr != null" >
        BAND = #{record.bandStr,jdbcType=VARCHAR},
      </if>
      <if test="record.cycleNo != null" >
        CYCLE_NO = #{record.cycleNo,jdbcType=INTEGER},
      </if>
      <if test="record.cycle != null" >
        CYCLE = #{record.cycle,jdbcType=CHAR},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.proKeeper != null" >
        PRO_KEEPER = #{record.proKeeper,jdbcType=VARCHAR},
      </if>
      <if test="record.grantor != null" >
        GRANTOR = #{record.grantor,jdbcType=VARCHAR},
      </if>
      <if test="record.grantStatus != null" >
        GRANT_STATUS = #{record.grantStatus,jdbcType=CHAR},
      </if>
      <if test="record.deptManager != null" >
        DEPT_MANAGER = #{record.deptManager,jdbcType=VARCHAR},
      </if>
      <if test="record.deptStatus != null" >
        DEPT_STATUS = #{record.deptStatus,jdbcType=INTEGER},
      </if>
      <if test="record.returnStatus != null" >
        RETURN_STATUS = #{record.returnStatus,jdbcType=INTEGER},
      </if>
      <if test="record.returnDate != null" >
        RETURN_DATE = #{record.returnDate,jdbcType=DATE},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.reason != null" >
        REASON = #{record.reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.returnReason != null" >
        RETURN_REASON = #{record.returnReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update office_transhistory
    set TRANS_ID = #{record.transId,jdbcType=INTEGER},
    PRO_ID = #{record.proId,jdbcType=INTEGER},
    BORROWER = #{record.borrower,jdbcType=VARCHAR},
    TRANS_FLAG = #{record.transFlag,jdbcType=VARCHAR},
    TRANS_QTY = #{record.transQty,jdbcType=INTEGER},
    PRICE = #{record.price,jdbcType=DECIMAL},
    TRANS_DATE = #{record.transDate,jdbcType=DATE},
    OPERATOR = #{record.operator,jdbcType=VARCHAR},
    TRANS_STATE = #{record.transState,jdbcType=VARCHAR},
    FACT_QTY = #{record.factQty,jdbcType=INTEGER},
    COMPANY = #{record.company,jdbcType=VARCHAR},
    BAND = #{record.bandStr,jdbcType=VARCHAR},
    CYCLE_NO = #{record.cycleNo,jdbcType=INTEGER},
    CYCLE = #{record.cycle,jdbcType=CHAR},
    DEPT_ID = #{record.deptId,jdbcType=INTEGER},
    PRO_KEEPER = #{record.proKeeper,jdbcType=VARCHAR},
    GRANTOR = #{record.grantor,jdbcType=VARCHAR},
    GRANT_STATUS = #{record.grantStatus,jdbcType=CHAR},
    DEPT_MANAGER = #{record.deptManager,jdbcType=VARCHAR},
    DEPT_STATUS = #{record.deptStatus,jdbcType=INTEGER},
    RETURN_STATUS = #{record.returnStatus,jdbcType=INTEGER},
    RETURN_DATE = #{record.returnDate,jdbcType=DATE},
    REMARK = #{record.remark,jdbcType=LONGVARCHAR},
    REASON = #{record.reason,jdbcType=LONGVARCHAR},
    RETURN_REASON = #{record.returnReason,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update office_transhistory
    set TRANS_ID = #{record.transId,jdbcType=INTEGER},
    PRO_ID = #{record.proId,jdbcType=INTEGER},
    BORROWER = #{record.borrower,jdbcType=VARCHAR},
    TRANS_FLAG = #{record.transFlag,jdbcType=VARCHAR},
    TRANS_QTY = #{record.transQty,jdbcType=INTEGER},
    PRICE = #{record.price,jdbcType=DECIMAL},
    TRANS_DATE = #{record.transDate,jdbcType=DATE},
    OPERATOR = #{record.operator,jdbcType=VARCHAR},
    TRANS_STATE = #{record.transState,jdbcType=VARCHAR},
    FACT_QTY = #{record.factQty,jdbcType=INTEGER},
    COMPANY = #{record.company,jdbcType=VARCHAR},
    BAND = #{record.bandStr,jdbcType=VARCHAR},
    CYCLE_NO = #{record.cycleNo,jdbcType=INTEGER},
    CYCLE = #{record.cycle,jdbcType=CHAR},
    DEPT_ID = #{record.deptId,jdbcType=INTEGER},
    PRO_KEEPER = #{record.proKeeper,jdbcType=VARCHAR},
    GRANTOR = #{record.grantor,jdbcType=VARCHAR},
    GRANT_STATUS = #{record.grantStatus,jdbcType=CHAR},
    DEPT_MANAGER = #{record.deptManager,jdbcType=VARCHAR},
    DEPT_STATUS = #{record.deptStatus,jdbcType=INTEGER},
    RETURN_STATUS = #{record.returnStatus,jdbcType=INTEGER},
    RETURN_DATE = #{record.returnDate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update office_transhistory
    <set >
      <if test="proId != null" >
        PRO_ID = #{proId,jdbcType=INTEGER},
      </if>
      <if test="borrower != null" >
        BORROWER = #{borrower,jdbcType=VARCHAR},
      </if>
      <if test="transFlag != null" >
        TRANS_FLAG = #{transFlag,jdbcType=VARCHAR},
      </if>
      <if test="transQty != null" >
        TRANS_QTY = #{transQty,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="transDate != null" >
        TRANS_DATE = #{transDate,jdbcType=DATE},
      </if>
      <if test="operator != null" >
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="transState != null" >
        TRANS_STATE = #{transState,jdbcType=VARCHAR},
      </if>
      <if test="factQty != null" >
        FACT_QTY = #{factQty,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        COMPANY = #{company,jdbcType=VARCHAR},
      </if>
      <if test="bandStr != null" >
        BAND = #{bandStr,jdbcType=VARCHAR},
      </if>
      <if test="cycleNo != null" >
        CYCLE_NO = #{cycleNo,jdbcType=INTEGER},
      </if>
      <if test="cycle != null" >
        CYCLE = #{cycle,jdbcType=CHAR},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="proKeeper != null" >
        PRO_KEEPER = #{proKeeper,jdbcType=VARCHAR},
      </if>
      <if test="grantor != null" >
        GRANTOR = #{grantor,jdbcType=VARCHAR},
      </if>
      <if test="grantStatus != null" >
        GRANT_STATUS = #{grantStatus,jdbcType=CHAR},
      </if>
      <if test="deptManager != null" >
        DEPT_MANAGER = #{deptManager,jdbcType=VARCHAR},
      </if>
      <if test="deptStatus != null" >
        DEPT_STATUS = #{deptStatus,jdbcType=INTEGER},
      </if>
      <if test="returnStatus != null" >
        RETURN_STATUS = #{returnStatus,jdbcType=INTEGER},
      </if>
      <if test="returnDate != null" >
        RETURN_DATE = #{returnDate,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null" >
        REASON = #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="returnReason != null" >
        RETURN_REASON = #{returnReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where TRANS_ID = #{transId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update office_transhistory
    set PRO_ID = #{proId,jdbcType=INTEGER},
    BORROWER = #{borrower,jdbcType=VARCHAR},
    TRANS_FLAG = #{transFlag,jdbcType=VARCHAR},
    TRANS_QTY = #{transQty,jdbcType=INTEGER},
    PRICE = #{price,jdbcType=DECIMAL},
    TRANS_DATE = #{transDate,jdbcType=DATE},
    OPERATOR = #{operator,jdbcType=VARCHAR},
    TRANS_STATE = #{transState,jdbcType=VARCHAR},
    FACT_QTY = #{factQty,jdbcType=INTEGER},
    COMPANY = #{company,jdbcType=VARCHAR},
    BAND = #{bandStr,jdbcType=VARCHAR},
    CYCLE_NO = #{cycleNo,jdbcType=INTEGER},
    CYCLE = #{cycle,jdbcType=CHAR},
    DEPT_ID = #{deptId,jdbcType=INTEGER},
    PRO_KEEPER = #{proKeeper,jdbcType=VARCHAR},
    GRANTOR = #{grantor,jdbcType=VARCHAR},
    GRANT_STATUS = #{grantStatus,jdbcType=CHAR},
    DEPT_MANAGER = #{deptManager,jdbcType=VARCHAR},
    DEPT_STATUS = #{deptStatus,jdbcType=INTEGER},
    RETURN_STATUS = #{returnStatus,jdbcType=INTEGER},
    RETURN_DATE = #{returnDate,jdbcType=DATE},
    REMARK = #{remark,jdbcType=LONGVARCHAR},
    REASON = #{reason,jdbcType=LONGVARCHAR},
    RETURN_REASON = #{returnReason,jdbcType=LONGVARCHAR}
    where TRANS_ID = #{transId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myoa.model.officesupplies.OfficeTranshistory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update office_transhistory
    set PRO_ID = #{proId,jdbcType=INTEGER},
    BORROWER = #{borrower,jdbcType=VARCHAR},
    TRANS_FLAG = #{transFlag,jdbcType=VARCHAR},
    TRANS_QTY = #{transQty,jdbcType=INTEGER},
    PRICE = #{price,jdbcType=DECIMAL},
    TRANS_DATE = #{transDate,jdbcType=DATE},
    OPERATOR = #{operator,jdbcType=VARCHAR},
    TRANS_STATE = #{transState,jdbcType=VARCHAR},
    FACT_QTY = #{factQty,jdbcType=INTEGER},
    COMPANY = #{company,jdbcType=VARCHAR},
    BAND = #{bandStr,jdbcType=VARCHAR},
    CYCLE_NO = #{cycleNo,jdbcType=INTEGER},
    CYCLE = #{cycle,jdbcType=CHAR},
    DEPT_ID = #{deptId,jdbcType=INTEGER},
    PRO_KEEPER = #{proKeeper,jdbcType=VARCHAR},
    GRANTOR = #{grantor,jdbcType=VARCHAR},
    GRANT_STATUS = #{grantStatus,jdbcType=CHAR},
    DEPT_MANAGER = #{deptManager,jdbcType=VARCHAR},
    DEPT_STATUS = #{deptStatus,jdbcType=INTEGER},
    RETURN_STATUS = #{returnStatus,jdbcType=INTEGER},
    RETURN_DATE = #{returnDate,jdbcType=DATE}
    where TRANS_ID = #{transId,jdbcType=INTEGER}
  </update>
  <select id="getMyHistory" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultMap="ResultMapWithBLOBs">
    SELECT * FROM office_transhistory WHERE
    <if test="borrower!=null">
      BORROWER=#{borrower}
    </if>
    AND
    (
    TRANS_FLAG=1
    or
    TRANS_FLAG=2
    )
  </select>

  <select id="selTranshistoryByState" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    SELECT t.*,p.PRO_NAME
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    WHERE
    (
      (t.DEPT_MANAGER=#{currentUser} and t.TRANS_STATE='01')
      OR
      ((d.MANAGER LIKE concat(#{currentUser},',%') OR d.MANAGER LIKE concat('%,',#{currentUser},',%')) and t.TRANS_STATE='02')
      OR
      (
        (
        d.PRIV_ID like concat((select USER_PRIV from user WHERE USER_ID=#{currentUser}),',%')
        or
        d.PRIV_ID like concat('%,',(select USER_PRIV from user WHERE USER_ID=#{currentUser}),',%')
        )
        and t.TRANS_STATE='02'
      )
    )
      AND
      (
       t.TRANS_FLAG=1
       or
       t.TRANS_FLAG=2
      )
  </select>


  <select id="selTranshistoryByState" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs" databaseId="oracle">
    SELECT t.*,p.PRO_NAME
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    WHERE
    (
    (t.DEPT_MANAGER=#{currentUser} and t.TRANS_STATE='01')
    OR
    ((d.MANAGER LIKE concat(#{currentUser},',%') OR d.MANAGER LIKE concat(concat('%,',#{currentUser}),',%')) and t.TRANS_STATE='02')
    OR
    (
    (
    d.PRIV_ID like concat((select USER_PRIV from "USER" WHERE USER_ID=#{currentUser}),',%')
    or
    d.PRIV_ID like concat(concat('%,',(select USER_PRIV from "USER" WHERE USER_ID=#{currentUser})),',%')
    )
    and t.TRANS_STATE='02'
    )
    )
    AND
    (
    t.TRANS_FLAG=1
    or
    t.TRANS_FLAG=2
    )
  </select>
  <update id="upTransHistoryState" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs">
    UPDATE office_transhistory set TRANS_STATE=#{transState} WHERE TRANS_ID=#{transId}
  </update>

  <select id="selGrantByCond" parameterType="map" resultMap="ResultMapWithBLOBs">
    select t.*,p.PRO_NAME from office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      <if test="OfficeTranshistory.borrower != null and OfficeTranshistory.borrower!=''" >
        and t.BORROWER = #{OfficeTranshistory.borrower}
      </if>
      <if test="OfficeTranshistory.transBeginDate != null and OfficeTranshistory.transBeginDate != ''" >
        and t.TRANS_DATE &gt;= #{OfficeTranshistory.transBeginDate}
      </if>
      <if test="OfficeTranshistory.transEndDate != null and OfficeTranshistory.transEndDate != ''" >
        and t.TRANS_DATE &lt;=#{OfficeTranshistory.transEndDate}
      </if>
      <if test="OfficeTranshistory.grantStatus != null and OfficeTranshistory.grantStatus !=''" >
        and t.GRANT_STATUS =#{OfficeTranshistory.grantStatus}
      </if>
      and
      t.TRANS_STATE='1'
      and
      (
        d.PRO_KEEPER like concat('%,',#{OfficeTranshistory.currentUser},',%')
        or
        d.PRO_KEEPER like concat(#{OfficeTranshistory.currentUser},',%')
      )
      AND
      (
      t.TRANS_FLAG=1
      or
      t.TRANS_FLAG=2
      )
    </where>
  </select>

  <select id="selGrantByCond" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="oracle">
    select t.*,p.PRO_NAME from office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      <if test="OfficeTranshistory.borrower != null and OfficeTranshistory.borrower!=''" >
        and t.BORROWER = #{OfficeTranshistory.borrower}
      </if>
      <if test="OfficeTranshistory.transBeginDate != null and OfficeTranshistory.transBeginDate != ''" >
        and t.TRANS_DATE &gt;= to_date(#{OfficeTranshistory.transBeginDate},'yyyy-MM-dd')
      </if>
      <if test="OfficeTranshistory.transEndDate != null and OfficeTranshistory.transEndDate != ''" >
        and t.TRANS_DATE &lt;=to_date(#{OfficeTranshistory.transEndDate},'yyyy-MM-dd')
      </if>
      <if test="OfficeTranshistory.grantStatus != null and OfficeTranshistory.grantStatus !=''" >
        and t.GRANT_STATUS =#{OfficeTranshistory.grantStatus}
      </if>
      and
      t.TRANS_STATE='1'
      and
      (
      d.PRO_KEEPER like concat(concat('%,',#{OfficeTranshistory.currentUser}),',%')
      or
      d.PRO_KEEPER like concat(#{OfficeTranshistory.currentUser},',%')
      )
      AND
      (
      t.TRANS_FLAG=1
      or
      t.TRANS_FLAG=2
      )
    </where>
  </select>
  <select id="selGrantByCond" parameterType="map" resultMap="ResultMapWithBLOBs" databaseId="dm">
    select t.*,p.PRO_NAME from office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      <if test="OfficeTranshistory.borrower != null and OfficeTranshistory.borrower!=''" >
        and t.BORROWER = #{OfficeTranshistory.borrower}
      </if>
      <if test="OfficeTranshistory.transBeginDate != null and OfficeTranshistory.transBeginDate != ''" >
        and t.TRANS_DATE &gt;= #{OfficeTranshistory.transBeginDate}
      </if>
      <if test="OfficeTranshistory.transEndDate != null and OfficeTranshistory.transEndDate != ''" >
        and t.TRANS_DATE &lt;=#{OfficeTranshistory.transEndDate}
      </if>
      <if test="OfficeTranshistory.grantStatus != null and OfficeTranshistory.grantStatus !=''" >
        and t.GRANT_STATUS =#{OfficeTranshistory.grantStatus}
      </if>
      and
      t.TRANS_STATE='1'
      and
      (
      d.PRO_KEEPER like concat(concat('%,',#{OfficeTranshistory.currentUser}),',%')
      or
      d.PRO_KEEPER like concat(#{OfficeTranshistory.currentUser},',%')
      )
      AND
      (
      t.TRANS_FLAG=1
      or
      t.TRANS_FLAG=2
      )
    </where>
  </select>

  <select id="selGrantCountByCond" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultType="java.lang.Integer">
    select count(*) from office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      <if test="borrower != null and borrower !=''" >
        and t.BORROWER =#{borrower}
      </if>
      <if test="transBeginDate != null and transBeginDate != ''" >
        and t.TRANS_DATE &gt;= #{transBeginDate}
      </if>
      <if test="transEndDate != null and transEndDate != ''" >
        and t.TRANS_DATE &lt;=#{transEndDate}
      </if>
      <if test="grantStatus != null and grantStatus !=''" >
        and t.GRANT_STATUS =#{grantStatus}
      </if>
      and
      t.TRANS_STATE='1'
      and
      (
      d.PRO_KEEPER like concat('%,',#{currentUser},',%')
      or
      d.PRO_KEEPER like concat(#{currentUser},',%')
      )
      AND
      (
      t.TRANS_FLAG=1
      or
      t.TRANS_FLAG=2
      )
    </where>
  </select>

  <select id="selGrantCountByCond" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultType="java.lang.Integer" databaseId="oracle">
    select count(*) from office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      <if test="borrower != null and borrower !=''" >
        and t.BORROWER =#{borrower}
      </if>
      <if test="transBeginDate != null and transBeginDate != ''" >
        and t.TRANS_DATE &gt;= #{transBeginDate}
      </if>
      <if test="transEndDate != null and transEndDate != ''" >
        and t.TRANS_DATE &lt;=#{transEndDate}
      </if>
      <if test="grantStatus != null and grantStatus !=''" >
        and t.GRANT_STATUS =#{grantStatus}
      </if>
      and
      t.TRANS_STATE='1'
      and
      (
      d.PRO_KEEPER like concat(concat('%,',#{currentUser}),',%')
      or
      d.PRO_KEEPER like concat(#{currentUser},',%')
      )
      AND
      (
      t.TRANS_FLAG=1
      or
      t.TRANS_FLAG=2
      )
    </where>
  </select>

  <update id="upGrantStatus" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs">
    UPDATE office_transhistory set GRANT_STATUS=#{grantStatus} WHERE TRANS_ID=#{transId}
  </update>

  <select id="selTranshistoryByCond" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultMap="ResultMapWithBLOBs">
    SELECT t.*,p.PRO_NAME,d.DEPOSITORY_NAME,type.TYPE_NAME
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      <if test="borrower != null and borrower != ''" >
        and t.BORROWER = #{borrower,jdbcType=VARCHAR}
      </if>
      <if test="transFlag != null and transFlag != ''" >
        and t.TRANS_FLAG = #{transFlag,jdbcType=VARCHAR}
      </if>
      <if test="depositoryId != null and depositoryId != ''" >
        and d.ID = #{depositoryId,jdbcType=INTEGER}
      </if>
      <if test="typeId != null and typeId != ''" >
        and type.ID = #{typeId,jdbcType=INTEGER}
      </if>
      <if test="proId != null and proId != ''" >
        and t.PRO_ID = #{proId,jdbcType=INTEGER}
      </if>
      <if test="grantStatus != null and grantStatus != ''" >
        and t.GRANT_STATUS = #{grantStatus,jdbcType=CHAR}
      </if>
      <if test="transBeginDate != null and transBeginDate != ''" >
        and t.TRANS_DATE &gt;= #{transBeginDate,jdbcType=DATE}
      </if>
      <if test="transEndDate != null and transEndDate != ''" >
        and t.TRANS_DATE &lt;= #{transEndDate,jdbcType=DATE}
      </if>
      <if test="flag ==1">
        AND
        (
        t.TRANS_FLAG=1
        or
        t.TRANS_FLAG=2
        )
      </if>
    </where>
  </select>

  <select id="selTranshistoryByCond" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultMap="ResultMapWithBLOBs" databaseId="oracle">
    SELECT t.*,p.PRO_NAME,d.DEPOSITORY_NAME,type.TYPE_NAME
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      <if test="borrower != null and borrower != ''" >
        and t.BORROWER = #{borrower,jdbcType=VARCHAR}
      </if>
      <if test="transFlag != null and transFlag != ''" >
        and t.TRANS_FLAG = #{transFlag,jdbcType=VARCHAR}
      </if>
      <if test="depositoryId != null and depositoryId != ''" >
        and d.ID = #{depositoryId,jdbcType=INTEGER}
      </if>
      <if test="typeId != null and typeId != ''" >
        and type.ID = #{typeId,jdbcType=INTEGER}
      </if>
      <if test="proId != null and proId != ''" >
        and t.PRO_ID = #{proId,jdbcType=INTEGER}
      </if>
      <if test="grantStatus != null and grantStatus != ''" >
        and t.GRANT_STATUS = #{grantStatus,jdbcType=CHAR}
      </if>
      <if test="transBeginDate != null and transBeginDate != ''" >
        and t.TRANS_DATE &gt;=to_date(#{transBeginDate,jdbcType=DATE},'yyyy-MM-dd')
      </if>
      <if test="transEndDate != null and transEndDate != ''" >
        and t.TRANS_DATE &lt;= to_date(#{transEndDate,jdbcType=DATE},'yyyy-MM-dd')
      </if>
      <if test="flag ==1">
        AND
        (
        t.TRANS_FLAG=1
        or
        t.TRANS_FLAG=2
        )
      </if>
    </where>
  </select>

  <select id="selTranshistoryByCond" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultMap="ResultMapWithBLOBs" databaseId="dm">
    SELECT t.*,p.PRO_NAME,d.DEPOSITORY_NAME,type.TYPE_NAME
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      <if test="borrower != null and borrower != ''" >
        and t.BORROWER = #{borrower,jdbcType=VARCHAR}
      </if>
      <if test="transFlag != null and transFlag != ''" >
        and t.TRANS_FLAG = #{transFlag,jdbcType=VARCHAR}
      </if>
      <if test="depositoryId != null and depositoryId != ''" >
        and d.ID = #{depositoryId,jdbcType=INTEGER}
      </if>
      <if test="typeId != null and typeId != ''" >
        and type.ID = #{typeId,jdbcType=INTEGER}
      </if>
      <if test="proId != null and proId != ''" >
        and t.PRO_ID = #{proId,jdbcType=INTEGER}
      </if>
      <if test="grantStatus != null and grantStatus != ''" >
        and t.GRANT_STATUS = #{grantStatus,jdbcType=CHAR}
      </if>
      <if test="transBeginDate != null and transBeginDate != ''" >
        and t.TRANS_DATE &gt;=to_date(#{transBeginDate,jdbcType=DATE},'yyyy-MM-dd')
      </if>
      <if test="transEndDate != null and transEndDate != ''" >
        and t.TRANS_DATE &lt;= to_date(#{transEndDate,jdbcType=DATE},'yyyy-MM-dd')
      </if>
      <if test="flag ==1">
        AND
        (
        t.TRANS_FLAG=1
        or
        t.TRANS_FLAG=2
        )
      </if>
    </where>
  </select>
  <select id="selMaintain" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultMap="ResultMapWithBLOBs">
    SELECT t.*,p.PRO_NAME,p.PRO_STOCK
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      and
      (BORROWER IS NULL or BORROWER='')
      AND
      OPERATOR=#{currentUser}
      AND
      (
      t.TRANS_FLAG=3
      or
      t.TRANS_FLAG=4
      or
      t.TRANS_FLAG=5
      )
      AND
      t.TRANS_DATE=#{currentTime}
    </where>
  </select>
  <select id="selMaintain" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultMap="ResultMapWithBLOBs" databaseId="oracle">
    SELECT t.*,p.PRO_NAME,p.PRO_STOCK
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      and
      (BORROWER IS NULL or BORROWER='')
      AND
      OPERATOR=#{currentUser}
      AND
      (
      t.TRANS_FLAG=3
      or
      t.TRANS_FLAG=4
      or
      t.TRANS_FLAG=5
      )
      AND
      t.TRANS_DATE=to_date(#{currentTime},'yyyy-MM-dd')
    </where>
  </select>

  <select id="selMaintain" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultMap="ResultMapWithBLOBs" databaseId="dm">
    SELECT t.*,p.PRO_NAME,p.PRO_STOCK
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      and
      (BORROWER IS NULL or BORROWER='')
      AND
      OPERATOR=#{currentUser}
      AND
      (
      t.TRANS_FLAG=3
      or
      t.TRANS_FLAG=4
      or
      t.TRANS_FLAG=5
      )
      AND
      t.TRANS_DATE=to_date(#{currentTime},'yyyy-MM-dd')
    </where>
  </select>
  <select id="selInstead" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultMap="ResultMapWithBLOBs">
    SELECT t.*,p.PRO_NAME,p.PRO_STOCK
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    <where>
      and BORROWER IS NOT NULL
      AND
      BORROWER != OPERATOR
      AND
      OPERATOR=#{currentUser}
      AND
      (
      t.TRANS_FLAG=1
      or
      t.TRANS_FLAG=2
      )
      AND
      t.TRANS_DATE=#{currentTime}
    </where>
  </select>

  <select id="isApproval" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultType="java.lang.Integer">
    SELECT count(*)
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    WHERE
    (
        (t.DEPT_MANAGER=#{currentUser} and t.TRANS_STATE='01')
        OR
        ((d.MANAGER LIKE concat(#{currentUser},',%') OR d.MANAGER LIKE concat('%,',#{currentUser},',%')) and t.TRANS_STATE='02')
        OR
        (
        (
        d.PRIV_ID like concat((select USER_PRIV from user WHERE USER_ID=#{currentUser}),',%')
        or
        d.PRIV_ID like concat('%,',(select USER_PRIV from user WHERE USER_ID=#{currentUser}),',%')
        )
        and t.TRANS_STATE='02'
        )
    )
    AND
    (
    t.TRANS_FLAG=1
    or
    t.TRANS_FLAG=2
    )
    AND
    TRANS_ID=#{transId}
  </select>
  <select id="isApproval" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultType="java.lang.Integer" databaseId="oracle">
    SELECT count(*)
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    WHERE
    (
    (t.DEPT_MANAGER=#{currentUser} and t.TRANS_STATE='01')
    OR
    ((d.MANAGER LIKE concat(#{currentUser},',%') OR d.MANAGER LIKE concat(concat('%,',#{currentUser}),',%')) and t.TRANS_STATE='02')
    OR
    (
    (
    d.PRIV_ID like concat((select USER_PRIV from "USER" WHERE USER_ID=#{currentUser}),',%')
    or
    d.PRIV_ID like concat(concat('%,',(select USER_PRIV from "USER" WHERE USER_ID=#{currentUser})),',%')
    )
    and t.TRANS_STATE='02'
    )
    )
    AND
    (
    t.TRANS_FLAG=1
    or
    t.TRANS_FLAG=2
    )
    AND
    TRANS_ID=#{transId}
  </select>

  <select id="isApproval" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultType="java.lang.Integer" databaseId="dm">
    SELECT count(*)
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    WHERE
    (
    (t.DEPT_MANAGER=#{currentUser} and t.TRANS_STATE='01')
    OR
    ((d.MANAGER LIKE concat(#{currentUser},',%') OR d.MANAGER LIKE concat(concat('%,',#{currentUser}),',%')) and t.TRANS_STATE='02')
    OR
    (
    (
    d.PRIV_ID like concat((select USER_PRIV from "USER" WHERE USER_ID=#{currentUser}),',%')
    or
    d.PRIV_ID like concat(concat('%,',(select USER_PRIV from "USER" WHERE USER_ID=#{currentUser})),',%')
    )
    and t.TRANS_STATE='02'
    )
    )
    AND
    (
    t.TRANS_FLAG=1
    or
    t.TRANS_FLAG=2
    )
    AND
    TRANS_ID=#{transId}
  </select>

  <select id="isGrant" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultType="java.lang.Integer">
    SELECT count(*)
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    WHERE
      (
         d.PRO_KEEPER like concat('%,',#{currentUser},',%')
        or
         d.PRO_KEEPER like concat(#{currentUser},',%')
      )
    AND
    (
    t.TRANS_FLAG=1
    or
    t.TRANS_FLAG=2
    )
    AND
    TRANS_ID=#{transId}
    and
     TRANS_STATE='1'
     AND
      GRANT_STATUS='0'
  </select>

  <select id="isGrant" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultType="java.lang.Integer" databaseId="oracle">
    SELECT count(*)
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    WHERE
    (
    d.PRO_KEEPER like concat(concat('%,',#{currentUser}),',%')
    or
    d.PRO_KEEPER like concat(#{currentUser},',%')
    )
    AND
    (
    t.TRANS_FLAG=1
    or
    t.TRANS_FLAG=2
    )
    AND
    TRANS_ID=#{transId}
    and
    TRANS_STATE='1'
    AND
    GRANT_STATUS='0'
  </select>

  <select id="isGrant" parameterType="com.myoa.model.officesupplies.OfficeTranshistoryWithBLOBs" resultType="java.lang.Integer" databaseId="dm">
    SELECT count(*)
    FROM office_transhistory t
    JOIN  office_products p ON t.PRO_ID=p.PRO_ID
    JOIN office_type type on p.OFFICE_PROTYPE=type.ID
    JOIN office_depository d on type.TYPE_DEPOSITORY=d.ID
    WHERE
    (
    d.PRO_KEEPER like concat(concat('%,',#{currentUser}),',%')
    or
    d.PRO_KEEPER like concat(#{currentUser},',%')
    )
    AND
    (
    t.TRANS_FLAG=1
    or
    t.TRANS_FLAG=2
    )
    AND
    TRANS_ID=#{transId}
    and
    TRANS_STATE='1'
    AND
    GRANT_STATUS='0'
  </select>
</mapper>