<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myoa.dao.event.TimeLineMapper" >
  <resultMap id="BaseResultMap" type="com.myoa.model.event.TimeLine" >
    <id column="UUID" property="uuid" jdbcType="CHAR" />
    <result column="CR_TIME" property="crTime" jdbcType="TIMESTAMP" />
    <result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
    <result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
    <result column="TITLE_" property="title" jdbcType="VARCHAR" />
    <result column="TYPE_" property="type" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="CR_USER_ID" property="crUserId" jdbcType="INTEGER" />
    <result column="UPDATE_USER_ID" property="updateUserId" jdbcType="INTEGER" />
    <result column="TAG_" property="tag" jdbcType="VARCHAR" />
    <result column="CONTENT_" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.myoa.model.event.TimeLine" extends="BaseResultMap" >
  </resultMap>
  <resultMap id="SysCodeResultMap" type="com.myoa.model.event.TimeLine" extends="BaseResultMap" >
    <result column="CODE_NAME" property="codeName" jdbcType="VARCHAR" />
    <result column="CODE_NO" property="codeNo" jdbcType="INTEGER" />
    <result column="post_User_Id" property="postUserId" jdbcType="INTEGER" />
    <result column="view_User_Id" property="viewUserId" jdbcType="INTEGER" />
    <result column="post_Dept_Id" property="postDeptId" jdbcType="INTEGER" />
    <result column="view_Dept_Id" property="viewDeptId" jdbcType="INTEGER" />
    <result column="post_Role_Id" property="postRoleId" jdbcType="INTEGER" />
    <result column="view_Role_Id" property="viewRoleId" jdbcType="INTEGER" />
    <result column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
    <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="post_User_Name" property="postUserName" jdbcType="VARCHAR" />
    <result column="post_Role_Name" property="postRoleName" jdbcType="VARCHAR" />
    <result column="post_Dept_Name" property="postDeptName" jdbcType="VARCHAR" />
    <result column="view_Dept_Name" property="viewDeptName" jdbcType="VARCHAR" />
    <result column="view_User_Name" property="viewUserName" jdbcType="VARCHAR" />
    <result column="view_Role_Name" property="viewRoleName" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="TimeLineMap" type="com.myoa.model.event.TimeLine" >
    <id column="UUID" property="uuid" jdbcType="CHAR" />
    <result column="CR_TIME" property="crTime" jdbcType="TIMESTAMP" />
    <result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
    <result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
    <result column="TITLE_" property="title" jdbcType="VARCHAR" />
    <result column="TYPE_" property="type" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="CR_USER_ID" property="crUserId" jdbcType="INTEGER" />
    <result column="UPDATE_USER_ID" property="updateUserId" jdbcType="INTEGER" />
    <result column="TAG_" property="tag" jdbcType="VARCHAR" />
    <result column="CONTENT_" property="content" jdbcType="LONGVARCHAR" />
    <result column="CODE_NAME" property="codeName" jdbcType="VARCHAR" />
    <result column="CODE_NO" property="codeNo" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >getInforList
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    UUID, CR_TIME, END_TIME, START_TIME, TITLE_, TYPE_, UPDATE_TIME, CR_USER_ID, UPDATE_USER_ID,
    TAG_
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CONTENT_
  </sql>
  <sql id="Blob_Column_List_oracle" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    to_char(CONTENT_) as content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.myoa.model.event.TimeLineExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from timeline
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myoa.model.event.TimeLineExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from timeline
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="SysCodeResultMap" parameterType="String" >
    SELECT distinct
    t.UUID,
    t.TITLE_,
    t.TYPE_,
    t.START_TIME,
    t.END_TIME,
    t.CONTENT_,
    t.TAG_,
    sc.CODE_NAME,
    sc.CODE_NO,
    u_l.USER_NAME as post_User_Name,
    u_t.USER_PRIV_NAME as post_Role_Name,
    d_l.DEPT_NAME as post_Dept_Name,
    d_c.DEPT_NAME as view_Dept_Name,
    u_c.USER_NAME as view_User_Name,
    u_r.USER_PRIV_NAME as view_Role_Name

    FROM
    timeline t INNER JOIN sys_code sc ON 	t.TYPE_ = sc.CODE_NO
    INNER JOIN
    timeline_post_user tpu ON t.UUID=tpu.TIMELINE_ID
    INNER JOIN `user` u_l ON tpu.USER_ID=u_l.USER_ID
    INNER JOIN
    timeline_view_user tvu on t.UUID=tvu.TIMELINE_ID
    INNER JOIN `user` u_c ON tvu.USER_ID=u_c.USER_ID
    INNER JOIN
    timeline_post_dept tpd on t.UUID=tpd.TIMELINE_ID
    INNER JOIN department d_l ON tpd.DEPT_ID=d_l.DEPT_ID
    INNER JOIN
    timeline_view_dept tvd on t.UUID=tvd.TIMELINE_ID
    INNER JOIN department d_C ON tvd.DEPT_ID=d_c.DEPT_ID
    INNER JOIN
    timeline_post_role tpr ON t.UUID=tpr.TIMELINE_ID
    INNER JOIN `user` u_t ON tpr.ROLE_ID=u_t.USER_PRIV
    INNER JOIN
    timeline_view_role tvr on t.UUID=tvr.TIMELINE_ID
    INNER JOIN `user` u_r ON tvr.ROLE_ID=u_r.USER_PRIV
    WHERE
    t.TYPE_ = sc.CODE_NO
    AND sc.PARENT_NO = 'TIMELINE_TYPE'
    AND UUID = #{uuid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from timeline
    where UUID = #{uuid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.myoa.model.event.TimeLineExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from timeline
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myoa.model.event.TimeLine" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into timeline (UUID, CR_TIME, END_TIME,
      START_TIME, TITLE_, TYPE_,
      UPDATE_TIME, CR_USER_ID, UPDATE_USER_ID,
      TAG_, CONTENT_)
    values (#{uuid,jdbcType=CHAR}, #{crTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
      #{startTime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP}, #{crUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER},
      #{tag,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myoa.model.event.TimeLine" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into timeline
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        UUID,
      </if>
      <if test="crTime != null" >
        CR_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="title != null" >
        TITLE_,
      </if>
      <if test="type != null" >
        TYPE_,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="crUserId != null" >
        CR_USER_ID,
      </if>
      <if test="updateUserId != null" >
        UPDATE_USER_ID,
      </if>
      <if test="tag != null" >
        TAG_,
      </if>
      <if test="content != null" >
        CONTENT_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="crTime != null" >
        #{crTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="crUserId != null" >
        #{crUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myoa.model.event.TimeLineExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from timeline
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline
    <set >
      <if test="record.uuid != null" >
        UUID = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.crTime != null" >
        CR_TIME = #{record.crTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null" >
        START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.title != null" >
        TITLE_ = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        TYPE_ = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.crUserId != null" >
        CR_USER_ID = #{record.crUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null" >
        UPDATE_USER_ID = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.tag != null" >
        TAG_ = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        CONTENT_ = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline
    set UUID = #{record.uuid,jdbcType=CHAR},
      CR_TIME = #{record.crTime,jdbcType=TIMESTAMP},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      TITLE_ = #{record.title,jdbcType=VARCHAR},
      TYPE_ = #{record.type,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CR_USER_ID = #{record.crUserId,jdbcType=INTEGER},
      UPDATE_USER_ID = #{record.updateUserId,jdbcType=INTEGER},
      TAG_ = #{record.tag,jdbcType=VARCHAR},
      CONTENT_ = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline
    set UUID = #{record.uuid,jdbcType=CHAR},
      CR_TIME = #{record.crTime,jdbcType=TIMESTAMP},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      TITLE_ = #{record.title,jdbcType=VARCHAR},
      TYPE_ = #{record.type,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CR_USER_ID = #{record.crUserId,jdbcType=INTEGER},
      UPDATE_USER_ID = #{record.updateUserId,jdbcType=INTEGER},
      TAG_ = #{record.tag,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myoa.model.event.TimeLine" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline
    <set >
      <if test="crTime != null" >
        CR_TIME = #{crTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        TITLE_ = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE_ = #{type,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="crUserId != null" >
        CR_USER_ID = #{crUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        UPDATE_USER_ID = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        TAG_ = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT_ = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where UUID = #{uuid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myoa.model.event.TimeLine" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline
    set CR_TIME = #{crTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
      TITLE_ = #{title,jdbcType=VARCHAR},
      TYPE_ = #{type,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CR_USER_ID = #{crUserId,jdbcType=INTEGER},
      UPDATE_USER_ID = #{updateUserId,jdbcType=INTEGER},
      TAG_ = #{tag,jdbcType=VARCHAR},
      CONTENT_ = #{content,jdbcType=LONGVARCHAR}
    where UUID = #{uuid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myoa.model.event.TimeLine" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline
    set CR_TIME = #{crTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
      TITLE_ = #{title,jdbcType=VARCHAR},
      TYPE_ = #{type,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CR_USER_ID = #{crUserId,jdbcType=INTEGER},
      UPDATE_USER_ID = #{updateUserId,jdbcType=INTEGER},
      TAG_ = #{tag,jdbcType=VARCHAR}
    where UUID = #{uuid,jdbcType=CHAR}
  </update>


  <select id="getDetailByUuid" parameterType="String" resultMap="SysCodeResultMap">
    SELECT distinct
	t.UUID,
	t.TITLE_,
	t.TYPE_,
	t.START_TIME,
	t.END_TIME,
	t.CONTENT_,
	t.TAG_,
	sc.CODE_NAME,
	sc.CODE_NO,
    u_l.USER_NAME as post_User_Name,
    u_t.USER_PRIV_NAME as post_Role_Name,
    d_l.DEPT_NAME as post_Dept_Name,
    d_c.DEPT_NAME as view_Dept_Name,
    u_c.USER_NAME as view_User_Name,
    u_r.USER_PRIV_NAME as view_Role_Name,
    tpu.USER_ID as post_User_Id,
    tvu.USER_ID as view_User_Id,
    tpd.DEPT_ID as post_Dept_Id,
    tvd.DEPT_ID as view_Dept_Id,
    tpr.ROLE_ID as post_Role_Id,
    tvr.ROLE_ID as view_Role_Id

FROM
	timeline t INNER JOIN sys_code sc ON 	t.TYPE_ = sc.CODE_NO
INNER JOIN
timeline_post_user tpu ON t.UUID=tpu.TIMELINE_ID
INNER JOIN `user` u_l ON tpu.USER_ID=u_l.USER_ID
INNER JOIN
timeline_view_user tvu on t.UUID=tvu.TIMELINE_ID
INNER JOIN `user` u_c ON tvu.USER_ID=u_c.USER_ID
INNER JOIN
	timeline_post_dept tpd on t.UUID=tpd.TIMELINE_ID
INNER JOIN department d_l ON tpd.DEPT_ID=d_l.DEPT_ID
INNER JOIN
	timeline_view_dept tvd on t.UUID=tvd.TIMELINE_ID
INNER JOIN department d_C ON tvd.DEPT_ID=d_c.DEPT_ID
INNER JOIN
	timeline_post_role tpr ON t.UUID=tpr.TIMELINE_ID
INNER JOIN `user` u_t ON tpr.ROLE_ID=u_t.USER_PRIV
INNER JOIN
	timeline_view_role tvr on t.UUID=tvr.TIMELINE_ID
INNER JOIN `user` u_r ON tvr.ROLE_ID=u_r.USER_PRIV
WHERE
	t.TYPE_ = sc.CODE_NO
AND sc.PARENT_NO = 'TIMELINE_TYPE'
 AND UUID = #{uuid}
</select>
  <select id="getInforList1" parameterType="com.myoa.model.event.TimeLine" resultMap="SysCodeResultMap">
      SELECT
      t.UUID,
      t.TITLE_,
      t.TYPE_,
      t.CR_TIME,
      t.CONTENT_,
      t.TAG_,
      sc.CODE_NAME,
      sc.CODE_NO
      FROM
      timeline t,
      sys_code sc
      <where>
        t.TYPE_ = sc.CODE_NO
        AND sc.PARENT_NO = 'TIMELINE_TYPE'
        <if test="title!=null and title!=''">
          and TITLE_=#{title}
        </if>
        <if test="type!=null and type!=''">
          and TYPE_=#{type}
        </if>
        <if test="tag!=null and tag!=''">
          and TAG_=#{tag}
        </if>
      </where>
    </select>
  <select id="getInforList" parameterType="Map" resultMap="SysCodeResultMap">
    SELECT
    t.UUID,
    t.TITLE_,
    t.TYPE_,
    t.CR_TIME,
    t.CONTENT_,
    t.TAG_,
    sc.CODE_NAME,
    sc.CODE_NO
    FROM
    timeline t,
    sys_code sc,
    timeline_post_dept tpd,
    timeline_post_role tpr,
    timeline_post_user tpu,
    timeline_view_dept tvd,
    timeline_view_role tvr,
    timeline_view_user tvu
    <where>
      ((
      t.UUID = tpu.TIMELINE_ID
     <!-- <if test="postUserId!=null and postUserId!=''">-->
        and tpu.USER_ID  = #{userId}
      <!--</if>-->)
      OR
      (t.UUID = tpr.TIMELINE_ID
     <!-- <if test="postRoleId!=null and postRoleId!=''">-->
        and tpr.ROLE_ID = #{roleId}
      <!--</if>-->)
      OR
      (t.UUID = tpd.TIMELINE_ID
      <!--<if test="postDeptId!=null and postDeptId!=''">-->
        and tpd.DEPT_ID = #{deptId}
      <!--</if>-->))
      AND
      ((t.UUID = tvd.TIMELINE_ID
      <!--<if test="viewDeptId!=null and viewDeptId!=''">-->
        and tvd.DEPT_ID = #{deptId}
      <!--</if>-->)
      (t.UUID = tvu.TIMELINE_ID
     <!-- <if test="viewUserId!=null and viewUserId!=''">-->
        and tvu.USER_ID = #{userId}
      <!--</if>-->)
      OR
      (t.UUID = tvr.TIMELINE_ID
      <!--<if test="viewRoleId!=null and viewRoleId!=''">-->
        and tvr.ROLE_ID = #{roleId}
      <!--</if>-->))
      AND
    t.TYPE_ = sc.CODE_NO
    AND sc.PARENT_NO = 'TIMELINE_TYPE'
      <if test="title!=null and title!=''">
        and TITLE_=#{title}
      </if>
      <if test="type!=null and type!=''">
        and TYPE_=#{type}
      </if>
      <if test="tag!=null and tag!=''">
        and TAG_=#{tag}
      </if>
    </where>
  </select>

  <!--
     * 杨超 2017-09-25
     * 获取具有查看权限的大事记
   -->
  <select id="getTimelines" parameterType="Map" resultMap="SysCodeResultMap">
    SELECT
    t.UUID,
    t.TITLE_,
    t.TYPE_,
    t.CR_TIME,
    t.CONTENT_,
    t.TAG_,
    sc.CODE_NAME,
    sc.CODE_NO,
    t.*
    FROM
    timeline t,
    sys_code sc
    <where>
      t.TYPE_ = sc.CODE_NO
      AND sc.PARENT_NO = 'TIMELINE_TYPE'
      AND (
        t.CR_USER_ID = #{id}
        OR EXISTS (
          SELECT
            1
          FROM
            timeline_view_dept
          WHERE
            t.UUID=timeline_view_dept.TIMELINE_ID and DEPT_ID = #{deptId}
        )
        OR EXISTS (
          SELECT
            1
          FROM
            timeline_view_role
          WHERE
            t.UUID=timeline_view_role.TIMELINE_ID and ROLE_ID = #{roleId}
        )
        OR EXISTS (
          SELECT
            1
          FROM
            timeline_view_user
          WHERE
            t.UUID=timeline_view_user.TIMELINE_ID and USER_ID = #{userID}
        )
        OR EXISTS (
          SELECT
            1
          FROM
            timeline_post_dept
          WHERE
            t.UUID = timeline_post_dept.TIMELINE_ID
          AND timeline_post_dept.DEPT_ID = #{deptId}
        )
        OR EXISTS (
          SELECT
            1
          FROM
            timeline_post_role
          WHERE
            t.UUID = timeline_post_role.TIMELINE_ID
          AND timeline_post_role.ROLE_ID = #{roleId}
        )
        OR EXISTS (
          SELECT
            1
          FROM
            timeline_post_user
          WHERE
            t.UUID = timeline_post_user.TIMELINE_ID
          AND timeline_post_user.USER_ID = #{userID}
        )
      )
    </where>
    <if test="title!= null">
      AND t.TITLE_ like CONCAT('%',#{title},'%')
    </if>
    <if test="tag!= null">
      AND t.TAG_ like CONCAT('%',#{tag},'%')
    </if>
    ORDER BY t.CR_TIME DESC
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>
  <select id="getTimelines" parameterType="Map" resultMap="SysCodeResultMap" databaseId="oracle">
    SELECT
    t.UUID,
    t.TITLE_,
    t.TYPE_,
    t.CR_TIME,
    t.CONTENT_,
    t.TAG_,
    sc.CODE_NAME,
    sc.CODE_NO,
    t.*
    FROM
    TIMELINE t,
    SYS_CODE sc
    <where>
      t.TYPE_ = sc.CODE_NO
      AND sc.PARENT_NO = 'TIMELINE_TYPE'
      AND (
      t.CR_USER_ID = #{id}
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_VIEW_DEPT
      WHERE
      t.UUID=TIMELINE_VIEW_DEPT.TIMELINE_ID and DEPT_ID = #{deptId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_VIEW_ROLE
      WHERE
      t.UUID=TIMELINE_VIEW_ROLE.TIMELINE_ID and ROLE_ID = #{roleId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_VIEW_USER
      WHERE
      t.UUID=TIMELINE_VIEW_USER.TIMELINE_ID and USER_ID = #{userID}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_DEPT
      WHERE
      t.UUID = TIMELINE_POST_DEPT.TIMELINE_ID
      AND TIMELINE_POST_DEPT.DEPT_ID = #{deptId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_ROLE
      WHERE
      t.UUID = TIMELINE_POST_ROLE.TIMELINE_ID
      AND TIMELINE_POST_ROLE.ROLE_ID = #{roleId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_USER
      WHERE
      t.UUID = TIMELINE_POST_USER.TIMELINE_ID
      AND TIMELINE_POST_USER.USER_ID = #{userID}
      )
      )
    </where>
    <if test="title!= null and title!=''">
      AND t.TITLE_ like CONCAT(CONCAT('%', #{title}), '%')
    </if>
    <if test="tag!= null and tag!=''">
      AND t.TAG_ like CONCAT(CONCAT('%', #{tag}), '%')
    </if>
    <if test="start!=null and size!=null">
      AND rownum &gt;(#{start}*#{size})  and rownum &lt;=((#{start}*#{size})+#{size})
    </if>
    ORDER BY t.CR_TIME DESC

  </select>
  <select id="getTimelines" parameterType="Map" resultMap="SysCodeResultMap" databaseId="dm">
    SELECT
    t.UUID,
    t.TITLE_,
    t.TYPE_,
    t.CR_TIME,
    t.CONTENT_,
    t.TAG_,
    sc.CODE_NAME,
    sc.CODE_NO,
    t.*
    FROM
    TIMELINE t,
    SYS_CODE sc
    <where>
      t.TYPE_ = sc.CODE_NO
      AND sc.PARENT_NO = 'TIMELINE_TYPE'
      AND (
      t.CR_USER_ID = #{id}
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_VIEW_DEPT
      WHERE
      t.UUID=TIMELINE_VIEW_DEPT.TIMELINE_ID and DEPT_ID = #{deptId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_VIEW_ROLE
      WHERE
      t.UUID=TIMELINE_VIEW_ROLE.TIMELINE_ID and ROLE_ID = #{roleId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_VIEW_USER
      WHERE
      t.UUID=TIMELINE_VIEW_USER.TIMELINE_ID and USER_ID = #{userID}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_DEPT
      WHERE
      t.UUID = TIMELINE_POST_DEPT.TIMELINE_ID
      AND TIMELINE_POST_DEPT.DEPT_ID = #{deptId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_ROLE
      WHERE
      t.UUID = TIMELINE_POST_ROLE.TIMELINE_ID
      AND TIMELINE_POST_ROLE.ROLE_ID = #{roleId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_USER
      WHERE
      t.UUID = TIMELINE_POST_USER.TIMELINE_ID
      AND TIMELINE_POST_USER.USER_ID = #{userID}
      )
      )
    </where>
    <if test="title!= null and title!=''">
      AND t.TITLE_ like CONCAT(CONCAT('%', #{title}), '%')
    </if>
    <if test="tag!= null and tag!=''">
      AND t.TAG_ like CONCAT(CONCAT('%', #{tag}), '%')
    </if>
    <if test="start!=null and size!=null">
      AND rownum &gt;(#{start}*#{size})  and rownum &lt;=((#{start}*#{size})+#{size})
    </if>
    ORDER BY t.CR_TIME DESC

  </select>

  <!--
     * 杨超 2017-09-25
     * 获取具有管理权限的大事记
   -->

  <select id="postTimelines" parameterType="Map" resultMap="SysCodeResultMap">
    SELECT
    t.UUID,
    t.TITLE_,
    t.TYPE_,
    t.CR_TIME,
    t.CONTENT_,
    t.TAG_,
    sc.CODE_NAME,
    sc.CODE_NO,
    t.*
    FROM
    timeline t,
    sys_code sc
    <where>
      t.TYPE_ = sc.CODE_NO
      AND sc.PARENT_NO = 'TIMELINE_TYPE'
      AND (
      t.CR_USER_ID = #{id}
      OR EXISTS (
      SELECT
      1
      FROM
      timeline_post_dept
      WHERE
      t.UUID=timeline_post_dept.TIMELINE_ID and DEPT_ID = #{deptId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      timeline_post_role
      WHERE
      t.UUID=timeline_post_role.TIMELINE_ID and ROLE_ID = #{roleId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      timeline_post_user
      WHERE
      t.UUID=timeline_post_user.TIMELINE_ID and USER_ID = #{userID}
      )
      )
    </where>
    <if test="uuid!=null">
      AND t.UUID = #{uuid}
    </if>
    <if test="title!= null">
      AND t.TITLE_ like CONCAT('%',#{title},'%')
    </if>
    <if test="tag!= null">
      AND t.TAG_ like CONCAT('%',#{tag},'%')
    </if>
    ORDER BY t.CR_TIME DESC
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>
  <select id="postTimelines" parameterType="Map" resultMap="SysCodeResultMap" databaseId="oracle">
    SELECT
    t.UUID,
    t.TITLE_,
    t.TYPE_,
    t.CR_TIME,
    t.CONTENT_,
    t.TAG_,
    sc.CODE_NAME,
    sc.CODE_NO,
    t.*
    FROM
    TIMELINE t,
    sys_code sc
    <where>
      t.TYPE_ = sc.CODE_NO
      AND sc.PARENT_NO = 'TIMELINE_TYPE'
      AND (
      t.CR_USER_ID = #{id}
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_DEPT
      WHERE
      t.UUID=TIMELINE_POST_DEPT.TIMELINE_ID and DEPT_ID = #{deptId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_ROLE
      WHERE
      t.UUID=TIMELINE_POST_ROLE.TIMELINE_ID and ROLE_ID = #{roleId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_USER
      WHERE
      t.UUID=TIMELINE_POST_USER.TIMELINE_ID and USER_ID = #{userID}
      )
      )
    </where>
    <if test="uuid!=null">
      AND t.UUID = #{uuid}
    </if>
    <if test="title!= null">
      AND t.TITLE_ like CONCAT(CONCAT('%', #{title}), '%')
    </if>
    <if test="tag!= null">
      AND t.TAG_ like CONCAT(CONCAT('%', #{tag}), '%')
    </if>
    <if test="start!=null and size!=null">
      AND rownum &gt;(#{start}*#{size})  and rownum &lt;=((#{start}*#{size})+#{size})
    </if>


    ORDER BY t.CR_TIME DESC

  </select>
  <select id="postTimelines" parameterType="Map" resultMap="SysCodeResultMap" databaseId="dm">
    SELECT
    t.UUID,
    t.TITLE_,
    t.TYPE_,
    t.CR_TIME,
    t.CONTENT_,
    t.TAG_,
    sc.CODE_NAME,
    sc.CODE_NO,
    t.*
    FROM
    TIMELINE t,
    sys_code sc
    <where>
      t.TYPE_ = sc.CODE_NO
      AND sc.PARENT_NO = 'TIMELINE_TYPE'
      AND (
      t.CR_USER_ID = #{id}
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_DEPT
      WHERE
      t.UUID=TIMELINE_POST_DEPT.TIMELINE_ID and DEPT_ID = #{deptId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_ROLE
      WHERE
      t.UUID=TIMELINE_POST_ROLE.TIMELINE_ID and ROLE_ID = #{roleId}
      )
      OR EXISTS (
      SELECT
      1
      FROM
      TIMELINE_POST_USER
      WHERE
      t.UUID=TIMELINE_POST_USER.TIMELINE_ID and USER_ID = #{userID}
      )
      )
    </where>
    <if test="uuid!=null">
      AND t.UUID = #{uuid}
    </if>
    <if test="title!= null">
      AND t.TITLE_ like CONCAT(CONCAT('%', #{title}), '%')
    </if>
    <if test="tag!= null">
      AND t.TAG_ like CONCAT(CONCAT('%', #{tag}), '%')
    </if>
    <if test="start!=null and size!=null">
      AND rownum &gt;(#{start}*#{size})  and rownum &lt;=((#{start}*#{size})+#{size})
    </if>


    ORDER BY t.CR_TIME DESC

  </select>


  <update id="updateData" parameterType="com.myoa.model.event.TimeLine">
    update timeline
    <set >
      <if test="crTime != null" >
        CR_TIME = #{crTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        TITLE_ = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE_ = #{type,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="crUserId != null" >
        CR_USER_ID = #{crUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        UPDATE_USER_ID = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        TAG_ = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT_ = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    WHERE UUID = #{uuid}
  </update>
  <update id="updateData" parameterType="com.myoa.model.event.TimeLine" databaseId="oracle">
    update timeline
    <set >
      <if test="crTime != null" >
        CR_TIME = to_date(#{crTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="endTime != null" >
        END_TIME = to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="startTime != null" >
        START_TIME = to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="title != null" >
        TITLE_ = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE_ = #{type,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="crUserId != null" >
        CR_USER_ID = #{crUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        UPDATE_USER_ID = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        TAG_ = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT_ = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    WHERE UUID = #{uuid}
  </update>
  <update id="updateData" parameterType="com.myoa.model.event.TimeLine" databaseId="dm">
    update timeline
    <set >
      <if test="crTime != null" >
        CR_TIME = to_date(#{crTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="endTime != null" >
        END_TIME = to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="startTime != null" >
        START_TIME = to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="title != null" >
        TITLE_ = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE_ = #{type,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="crUserId != null" >
        CR_USER_ID = #{crUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        UPDATE_USER_ID = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        TAG_ = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT_ = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    WHERE UUID = #{uuid}
  </update>

  <insert id="addData" parameterType="com.myoa.model.event.TimeLine">
    INSERT INTO timeline(
      UUID,
    <if test="crTime != null" >
      CR_TIME ,
    </if>
    <if test="endTime != null" >
      END_TIME ,
    </if>
    <if test="startTime != null" >
      START_TIME ,
    </if>
    <if test="title != null" >
      TITLE_ ,
    </if>
    <if test="type != null" >
      TYPE_ ,
    </if>
    <if test="updateTime != null" >
      UPDATE_TIME ,
    </if>
    <if test="crUserId != null" >
      CR_USER_ID ,
    </if>
    <if test="updateUserId != null" >
      UPDATE_USER_ID ,
    </if>
    <if test="tag != null" >
      TAG_ ,
    </if>
    <if test="content != null" >
      CONTENT_
    </if>
    )
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
       #{uuid},
      </if>
      <if test="crTime != null" >
         #{crTime},
      </if>
      <if test="endTime != null" >
         #{endTime},
      </if>
      <if test="startTime != null" >
         #{startTime},
      </if>
      <if test="title != null" >
         #{title},
      </if>
      <if test="type != null" >
         #{type},
      </if>
      <if test="updateTime != null" >
         #{updateTime},
      </if>
      <if test="crUserId != null" >
         #{crUserId},
      </if>
      <if test="updateUserId != null" >
         #{updateUserId},
      </if>
      <if test="tag != null" >
         #{tag},
      </if>
      <if test="content != null" >
         #{content}
      </if>
    </trim>

  </insert>
  <insert id="addData" parameterType="com.myoa.model.event.TimeLine" databaseId="oracle">
    INSERT INTO TIMELINE(
    UUID,
    <if test="crTime != null" >
      CR_TIME ,
    </if>
    <if test="endTime != null" >
      END_TIME ,
    </if>
    <if test="startTime != null" >
      START_TIME ,
    </if>
    <if test="title != null" >
      TITLE_ ,
    </if>
    <if test="type != null" >
      TYPE_ ,
    </if>
    <if test="updateTime != null" >
      UPDATE_TIME ,
    </if>
    <if test="crUserId != null" >
      CR_USER_ID ,
    </if>
    <if test="updateUserId != null" >
      UPDATE_USER_ID ,
    </if>
    <if test="tag != null" >
      TAG_ ,
    </if>
    <if test="content != null" >
      CONTENT_
    </if>
    )
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid},
      </if>
      <if test="crTime != null" >
        to_date(#{crTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="endTime != null" >
        to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="startTime != null" >
        to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="title != null" >
        #{title},
      </if>
      <if test="type != null" >
        #{type},
      </if>
      <if test="updateTime != null" >
        #{updateTime},
      </if>
      <if test="crUserId != null" >
        #{crUserId},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId},
      </if>
      <if test="tag != null" >
        #{tag},
      </if>
      <if test="content != null" >
        #{content}
      </if>
    </trim>

  </insert>
  <insert id="addData" parameterType="com.myoa.model.event.TimeLine" databaseId="dm">
    INSERT INTO TIMELINE(
    UUID,
    <if test="crTime != null" >
      CR_TIME ,
    </if>
    <if test="endTime != null" >
      END_TIME ,
    </if>
    <if test="startTime != null" >
      START_TIME ,
    </if>
    <if test="title != null" >
      TITLE_ ,
    </if>
    <if test="type != null" >
      TYPE_ ,
    </if>
    <if test="updateTime != null" >
      UPDATE_TIME ,
    </if>
    <if test="crUserId != null" >
      CR_USER_ID ,
    </if>
    <if test="updateUserId != null" >
      UPDATE_USER_ID ,
    </if>
    <if test="tag != null" >
      TAG_ ,
    </if>
    <if test="content != null" >
      CONTENT_
    </if>
    )
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid},
      </if>
      <if test="crTime != null" >
        to_date(#{crTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="endTime != null" >
        to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="startTime != null" >
        to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="title != null" >
        #{title},
      </if>
      <if test="type != null" >
        #{type},
      </if>
      <if test="updateTime != null" >
        #{updateTime},
      </if>
      <if test="crUserId != null" >
        #{crUserId},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId},
      </if>
      <if test="tag != null" >
        #{tag},
      </if>
      <if test="content != null" >
        #{content}
      </if>
    </trim>

  </insert>

  <delete id="deleteByUuid" parameterType="String">
    DELETE FROM timeline WHERE UUID = #{uuid}
  </delete>

  <select id="selectTimeLineByUuid" resultMap="TimeLineMap" parameterType="String" >
    SELECT distinct
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />,
    sc.CODE_NAME,
    sc.CODE_NO
    FROM
     timeline t
    INNER JOIN sys_code sc ON 	t.TYPE_ = sc.CODE_NO
    WHERE
     UUID = #{uuid}
  </select>
  <select id="selectTimeLineByUuid" resultMap="TimeLineMap" parameterType="String" databaseId="oracle">
    SELECT distinct
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List_oracle" />,
    sc.CODE_NAME,
    sc.CODE_NO
    FROM
    TIMELINE t
    INNER JOIN SYS_CODE sc ON 	t.TYPE_ = sc.CODE_NO
    WHERE
    UUID = #{uuid}
  </select>
  <select id="selectTimeLineByUuid" resultMap="TimeLineMap" parameterType="String" databaseId="dm">
    SELECT distinct
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List_oracle" />,
    sc.CODE_NAME,
    sc.CODE_NO
    FROM
    timeline t
    INNER JOIN sys_code sc ON 	t.TYPE_ = sc.CODE_NO
    WHERE
    UUID = #{uuid}
  </select>

</mapper>