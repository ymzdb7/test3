/*     */ package com.xoa.controller.workflow;
/*     */ 
/*     */ import com.xoa.model.workflow.FlowRule;
/*     */ import com.xoa.service.workflow.flowRule.FlowRuleService;
/*     */ import com.xoa.util.ToJson;
/*     */ import javax.annotation.Resource;
/*     */ import javax.servlet.http.HttpServletRequest;
/*     */ import org.slf4j.Logger;
/*     */ import org.slf4j.LoggerFactory;
/*     */ import org.springframework.stereotype.Controller;
/*     */ import org.springframework.web.bind.annotation.RequestMapping;
/*     */ import org.springframework.web.bind.annotation.ResponseBody;
/*     */ 
/*     */ @Controller
/*     */ @RequestMapping({"/flowRule"})
/*     */ public class FlowRuleController
/*     */ {
/*  27 */   private Logger loger = LoggerFactory.getLogger(FlowRuleController.class);
/*     */ 
/*     */   @Resource
/*     */   private FlowRuleService flowRuleService;
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/queryFlowRule"})
/*     */   public ToJson<FlowRule> queryFlowRule(Integer page, Integer pageSize, boolean useFlag)
/*     */   {
/*  43 */     return this.flowRuleService.queryFlowRule(page, pageSize, useFlag);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping(value={"insertFlowRule"}, produces={"application/json;charset=UTF-8"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
/*     */   public ToJson<FlowRule> insertFlowRule(FlowRule flowRule, HttpServletRequest request)
/*     */   {
/*  57 */     return this.flowRuleService.insertFlowRule(flowRule);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping(value={"updateStatusToStart"}, produces={"application/json;charset=UTF-8"})
/*     */   public ToJson<FlowRule> updateStatusToStart(FlowRule flowRule, HttpServletRequest request)
/*     */   {
/*  69 */     return this.flowRuleService.updateStatusToStart(flowRule);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping(value={"updateStatusToEnd"}, produces={"application/json;charset=UTF-8"})
/*     */   public ToJson<FlowRule> updateStatusToEnd(FlowRule flowRule, HttpServletRequest request)
/*     */   {
/*  82 */     return this.flowRuleService.updateStatusToEnd(flowRule);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping(value={"deleteFlowRule"}, produces={"application/json;charset=UTF-8"})
/*     */   public ToJson<FlowRule> deleteFlowRule(FlowRule flowRule)
/*     */   {
/*  98 */     return this.flowRuleService.deleteFlowRule(flowRule);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/selectFlowRule"})
/*     */   public ToJson<FlowRule> selectFlowRule(String flowName, String userName, String toUserName)
/*     */   {
/* 111 */     return this.flowRuleService.selectFlowRule(flowName, userName, toUserName);
/*     */   }
/*     */ }

/* Location:           D:\xoa\webapps\ROOT\WEB-INF\classes\
 * Qualified Name:     com.xoa.controller.workflow.FlowRuleController
 * JD-Core Version:    0.6.0
 */