<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.template.TemplateModuleMapper">
    <resultMap id="BaseResultMap" type="com.xoa.model.template.TemplateModule">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="priv_user" property="privUser" jdbcType="VARCHAR"/>
        <result column="priv_org" property="privOrg" jdbcType="VARCHAR"/>
        <result column="priv_role" property="privRole" jdbcType="VARCHAR"/>
        <result column="category_id" property="categoryId" jdbcType="CHAR"/>
        <result column="create_time" property="createTime" jdbcType="INTEGER"/>
        <result column="create_user" property="createUser" jdbcType="INTEGER"/>
        <result column="att_url" property="attUrl" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, type, priv_user, priv_org, priv_role, category_id, create_time, create_user,
        att_url
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.template.TemplateModuleExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from template
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from template
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from template
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.xoa.model.template.TemplateModuleExample">
        delete from template
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xoa.model.template.TemplateModule">
        insert into template ( name, type,
        priv_user, priv_org, priv_role,
        category_id, create_time, create_user,
        att_url)
        values ( #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
        #{privUser,jdbcType=VARCHAR}, #{privOrg,jdbcType=VARCHAR}, #{privRole,jdbcType=VARCHAR},
        #{categoryId,jdbcType=CHAR}, #{createTime,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER},
        #{attUrl,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.xoa.model.template.TemplateModule">
        insert into template
        <trim prefix="(" suffix=")" suffixOverrides=",">

            <if test="name != null">
                name,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="privUser != null">
                priv_user,
            </if>
            <if test="privOrg != null">
                priv_org,
            </if>
            <if test="privRole != null">
                priv_role,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="attUrl != null">
                att_url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">

            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="privUser != null">
                #{privUser,jdbcType=VARCHAR},
            </if>
            <if test="privOrg != null">
                #{privOrg,jdbcType=VARCHAR},
            </if>
            <if test="privRole != null">
                #{privRole,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="attUrl != null">
                #{attUrl,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xoa.model.template.TemplateModuleExample"
            resultType="java.lang.Integer">
        select count(*) from template
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update template
        <set>

            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.privUser != null">
                priv_user = #{record.privUser,jdbcType=VARCHAR},
            </if>
            <if test="record.privOrg != null">
                priv_org = #{record.privOrg,jdbcType=VARCHAR},
            </if>
            <if test="record.privRole != null">
                priv_role = #{record.privRole,jdbcType=VARCHAR},
            </if>
            <if test="record.categoryId != null">
                category_id = #{record.categoryId,jdbcType=CHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=INTEGER},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=INTEGER},
            </if>
            <if test="record.attUrl != null">
                att_url = #{record.attUrl,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update template
        set  name = #{record.name,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        priv_user = #{record.privUser,jdbcType=VARCHAR},
        priv_org = #{record.privOrg,jdbcType=VARCHAR},
        priv_role = #{record.privRole,jdbcType=VARCHAR},
        category_id = #{record.categoryId,jdbcType=CHAR},
        create_time = #{record.createTime,jdbcType=INTEGER},
        create_user = #{record.createUser,jdbcType=INTEGER},
        att_url = #{record.attUrl,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.template.TemplateModule">
        update template
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="privUser != null">
                priv_user = #{privUser,jdbcType=VARCHAR},
            </if>
            <if test="privOrg != null">
                priv_org = #{privOrg,jdbcType=VARCHAR},
            </if>
            <if test="privRole != null">
                priv_role = #{privRole,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="attUrl != null">
                att_url = #{attUrl,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xoa.model.template.TemplateModule">
        update template
        set name = #{name,jdbcType=VARCHAR},
        type = #{type,jdbcType=VARCHAR},
        priv_user = #{privUser,jdbcType=VARCHAR},
        priv_org = #{privOrg,jdbcType=VARCHAR},
        priv_role = #{privRole,jdbcType=VARCHAR},
        category_id = #{categoryId,jdbcType=CHAR},
        create_time = #{createTime,jdbcType=INTEGER},
        create_user = #{createUser,jdbcType=INTEGER},
        att_url = #{attUrl,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="query" parameterType="map" resultMap="BaseResultMap" >
        SELECT * from template where
        <if test="type!=null and type !='' ">
            type = #{type}
        </if>
        <if test="categoryId!=null and categoryId !='' ">
           and  category_id = #{categoryId}
        </if>

    </select>

    <select id="queryCount" parameterType="map" resultType="Integer" >
        SELECT count(id) from template where
        <if test="type!=null and type !='' ">
            type = #{type}
        </if>
        <if test="categoryId!=null and categoryId !='' ">
            and  category_id = #{categoryId}
        </if>

    </select>


    <select id="queryByPriv" parameterType="map" resultMap="BaseResultMap" >
        SELECT * from template where

        priv_user is NULL  or  priv_user =''  or priv_user like concat("%,",#{userId},",%") or priv_user like concat(#{userId},",%")

        and  priv_org is null or priv_org  = '' or   priv_org like concat("%,",#{deptId},",%") or priv_org like concat(#{deptId},",%")

        and  priv_role is NULL  or priv_role  = '' or priv_role like concat("%,",#{userPriv},",%") or priv_role like concat(#{userPriv},",%")

        <if test="type!=null and type !='' ">
            and type = #{type}
        </if>
        <if test="categoryId!=null and categoryId !='' ">
            and  category_id = #{categoryId}
        </if>
    </select>

    <select id="queryCountByPriv" parameterType="map" resultType="Integer" >
        SELECT count(id) from template  where

        priv_user is NULL  or  priv_user =''  or priv_user like concat("%,",#{userId},",%") or priv_user like concat(#{userId},",%")

        and  priv_org is null or priv_org  = '' or   priv_org like concat("%,",#{deptId},",%") or priv_org like concat(#{deptId},",%")

        and  priv_role is NULL  or priv_role  = '' or priv_role like concat("%,",#{userPriv},",%") or priv_role like concat(#{userPriv},",%")

        <if test="type!=null and type !='' ">
            and type = #{type}
        </if>
        <if test="categoryId!=null and categoryId !='' ">
            and  category_id = #{categoryId}
        </if>

    </select>

</mapper>