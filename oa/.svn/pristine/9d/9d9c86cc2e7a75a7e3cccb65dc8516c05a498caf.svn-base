/*     */ package com.xoa.service.edu.eduYear;
/*     */ 
/*     */ import com.xoa.dao.edu.eduYear.EduYearMapper;
/*     */ import com.xoa.model.edu.eduYear.EduYear;
/*     */ import com.xoa.model.users.Users;
/*     */ import com.xoa.util.ExcelUtil;
/*     */ import com.xoa.util.ToJson;
/*     */ import com.xoa.util.common.log.FileUtils;
/*     */ import com.xoa.util.common.session.SessionUtils;
/*     */ import com.xoa.util.page.PageParams;
/*     */ import java.io.File;
/*     */ import java.io.FileInputStream;
/*     */ import java.io.InputStream;
/*     */ import java.io.OutputStream;
/*     */ import java.text.SimpleDateFormat;
/*     */ import java.util.Date;
/*     */ import java.util.HashMap;
/*     */ import java.util.List;
/*     */ import java.util.Map;
/*     */ import java.util.ResourceBundle;
/*     */ import java.util.UUID;
/*     */ import javax.annotation.Resource;
/*     */ import javax.servlet.http.HttpServletRequest;
/*     */ import javax.servlet.http.HttpServletResponse;
/*     */ import org.apache.poi.hssf.usermodel.HSSFSheet;
/*     */ import org.apache.poi.hssf.usermodel.HSSFWorkbook;
/*     */ import org.apache.poi.ss.usermodel.Cell;
/*     */ import org.apache.poi.ss.usermodel.Row;
/*     */ import org.springframework.stereotype.Service;
/*     */ import org.springframework.web.multipart.MultipartFile;
/*     */ 
/*     */ @Service
/*     */ public class EduYearService
/*     */ {
/*     */ 
/*     */   @Resource
/*     */   private EduYearMapper eduYearMapper;
/*     */ 
/*     */   public ToJson<EduYear> addEduYear(HttpServletRequest request, EduYear eduYear)
/*     */   {
/*  49 */     ToJson json = new ToJson();
/*     */     try {
/*  51 */       Map map = new HashMap();
/*  52 */       EduYear year = new EduYear();
/*  53 */       if ((eduYear.getYearCode() != null) && (!"".equals(eduYear.getYearCode()))) {
/*  54 */         year.setYearCode(eduYear.getYearCode());
/*  55 */         map.put("eduYear", year);
/*  56 */         List eduYearList = this.eduYearMapper.selectList(map);
/*  57 */         if ((eduYearList != null) && (eduYearList.size() > 0)) {
/*  58 */           json.setFlag(1);
/*  59 */           json.setMsg("编号重复");
/*  60 */           return json;
/*     */         }
/*     */       }
/*  63 */       Users user = (Users)SessionUtils.getSessionInfo(request.getSession(), Users.class, new Users());
/*  64 */       eduYear.setCreateUser(user.getUserId());
/*  65 */       SimpleDateFormat sdf = new SimpleDateFormat("yyyy-mm-dd HH:mm:ss");
/*  66 */       Date date = new Date();
/*  67 */       String dateStr = sdf.format(date);
/*  68 */       Date mydate = sdf.parse(dateStr);
/*  69 */       eduYear.setCreateTime(mydate);
/*  70 */       int count = this.eduYearMapper.insertSelective(eduYear);
/*  71 */       if (count > 0) {
/*  72 */         json.setMsg("ok");
/*  73 */         json.setFlag(0);
/*     */       }
/*     */     } catch (Exception e) {
/*  76 */       e.printStackTrace();
/*  77 */       json.setMsg(e.getMessage());
/*  78 */       json.setFlag(1);
/*     */     }
/*  80 */     return json;
/*     */   }
/*     */ 
/*     */   public ToJson<EduYear> deleteEduYear(Integer yearId)
/*     */   {
/*  90 */     ToJson json = new ToJson();
/*     */     try {
/*  92 */       int count = this.eduYearMapper.deleteByPrimaryKey(yearId);
/*  93 */       if (count > 0) {
/*  94 */         json.setMsg("ok");
/*  95 */         json.setFlag(0);
/*     */       }
/*     */     } catch (Exception e) {
/*  98 */       e.printStackTrace();
/*  99 */       json.setMsg(e.getMessage());
/* 100 */       json.setFlag(1);
/*     */     }
/* 102 */     return json;
/*     */   }
/*     */ 
/*     */   public ToJson<EduYear> selectEduYear(Integer yearId)
/*     */   {
/* 113 */     ToJson json = new ToJson();
/*     */     try {
/* 115 */       EduYear eduYear = this.eduYearMapper.selectByPrimaryKey(yearId);
/* 116 */       json.setObject(eduYear);
/* 117 */       json.setMsg("ok");
/* 118 */       json.setFlag(0);
/*     */     } catch (Exception e) {
/* 120 */       e.printStackTrace();
/* 121 */       json.setMsg(e.getMessage());
/* 122 */       json.setFlag(1);
/*     */     }
/* 124 */     return json;
/*     */   }
/*     */ 
/*     */   public ToJson<EduYear> updateEduYear(HttpServletRequest request, EduYear eduYear)
/*     */   {
/* 134 */     ToJson json = new ToJson();
/*     */     try {
/* 136 */       Map map = new HashMap();
/* 137 */       EduYear year = new EduYear();
/* 138 */       if ((eduYear.getYearCode() != null) && (!"".equals(eduYear.getYearCode()))) {
/* 139 */         year.setYearCode(eduYear.getYearCode());
/* 140 */         map.put("eduYear", year);
/* 141 */         List eduYearList = this.eduYearMapper.selectList(map);
/* 142 */         if ((eduYearList != null) && (eduYearList.size() > 0) && 
/* 143 */           (((EduYear)eduYearList.get(0)).getYearId() != eduYear.getYearId())) {
/* 144 */           json.setFlag(1);
/* 145 */           json.setMsg("编号重复");
/* 146 */           return json;
/*     */         }
/*     */ 
/*     */       }
/*     */ 
/* 151 */       SimpleDateFormat sdf = new SimpleDateFormat("yyyy-mm-dd  HH:mm:ss");
/* 152 */       Date date = new Date();
/* 153 */       String dateStr = sdf.format(date);
/* 154 */       Date mydate = sdf.parse(dateStr);
/* 155 */       eduYear.setUpdateTime(mydate);
/* 156 */       int count = this.eduYearMapper.updateByPrimaryKeySelective(eduYear);
/* 157 */       if (count > 0) {
/* 158 */         json.setMsg("ok");
/* 159 */         json.setFlag(0);
/*     */       }
/*     */     }
/*     */     catch (Exception e) {
/* 163 */       e.printStackTrace();
/* 164 */       json.setMsg(e.getMessage());
/* 165 */       json.setFlag(1);
/*     */     }
/* 167 */     return json;
/*     */   }
/*     */ 
/*     */   public ToJson<EduYear> selectAll(Integer page, Integer pageSize, boolean useFlag, EduYear eduYear, String export, HttpServletResponse response, HttpServletRequest request)
/*     */   {
/* 178 */     ToJson json = new ToJson();
/*     */     try {
/* 180 */       Map map = new HashMap();
/* 181 */       PageParams pageParams = new PageParams();
/* 182 */       pageParams.setPage(page);
/* 183 */       pageParams.setPageSize(pageSize);
/* 184 */       pageParams.setUseFlag(Boolean.valueOf(useFlag));
/* 185 */       map.put("page", pageParams);
/* 186 */       map.put("eduYear", eduYear);
/* 187 */       List eduYearList = this.eduYearMapper.selectList(map);
/* 188 */       if (export == null) {
/* 189 */         export = "0";
/*     */       }
/* 191 */       if ("1".equals(export)) {
/* 192 */         HSSFWorkbook workbook1 = ExcelUtil.makeExcelHead("学年信息", 6);
/* 193 */         String[] secondTitles = { "名称", "编号", "入学年份", "默认学年", "激活", "显示位置", "备注" };
/* 194 */         HSSFWorkbook workbook2 = ExcelUtil.makeSecondHead(workbook1, secondTitles);
/* 195 */         String[] beanProperty = { "yearName", "yearCode", "schoolYear", "defaultSchoolYear", "enabled", "position" };
/* 196 */         HSSFWorkbook workbook = null;
/* 197 */         workbook = ExcelUtil.exportExcelData(workbook2, eduYearList, beanProperty);
/* 198 */         OutputStream out = response.getOutputStream();
/* 199 */         String filename = "学年.xls";
/* 200 */         filename = FileUtils.encodeDownloadFilename(filename, request.getHeader("user-agent"));
/* 201 */         response.setContentType("application/vnd.ms-excel;charset=UTF-8");
/* 202 */         response.setHeader("content-disposition", "attachment;filename=" + filename);
/* 203 */         workbook.write(out);
/* 204 */         out.close();
/*     */       }
/* 206 */       json.setObj(eduYearList);
/* 207 */       json.setTotleNum(Integer.valueOf(this.eduYearMapper.selectCount(eduYear)));
/* 208 */       json.setMsg("ok");
/* 209 */       json.setFlag(0);
/*     */     } catch (Exception e) {
/* 211 */       e.printStackTrace();
/* 212 */       json.setMsg(e.getMessage());
/* 213 */       json.setFlag(1);
/*     */     }
/* 215 */     return json;
/*     */   }
/*     */ 
/*     */   public ToJson<EduYear> importEduYear(MultipartFile file, HttpServletRequest request, HttpServletResponse response)
/*     */   {
/* 225 */     ToJson json = new ToJson();
/*     */ 
/* 227 */     Integer successCount = Integer.valueOf(0);
/*     */     try
/*     */     {
/* 231 */       ResourceBundle rb = ResourceBundle.getBundle("upload");
/* 232 */       String osName = System.getProperty("os.name");
/* 233 */       StringBuffer path = new StringBuffer();
/* 234 */       if (osName.toLowerCase().startsWith("win"))
/* 235 */         path = path.append(rb.getString("upload.win"));
/*     */       else {
/* 237 */         path = path.append(rb.getString("upload.linux"));
/*     */       }
/*     */ 
/* 240 */       if (file.isEmpty()) {
/* 241 */         json.setMsg("请上传文件！");
/* 242 */         json.setFlag(1);
/* 243 */         return json;
/*     */       }
/* 245 */       String fileName = file.getOriginalFilename();
/* 246 */       if ((fileName.endsWith(".xls")) || (fileName.endsWith(".xlsx"))) {
/* 247 */         String uuid = UUID.randomUUID().toString().replaceAll("-", "");
/* 248 */         int pos = fileName.indexOf(".");
/* 249 */         String extName = fileName.substring(pos);
/* 250 */         String newFileName = uuid + extName;
/* 251 */         File dest = new File(path.toString(), newFileName);
/* 252 */         file.transferTo(dest);
/*     */ 
/* 255 */         String readPath = path.append(System.getProperty("file.separator")).append(newFileName).toString();
/* 256 */         InputStream in = new FileInputStream(readPath);
/* 257 */         HSSFWorkbook excelObj = new HSSFWorkbook(in);
/* 258 */         HSSFSheet sheetObj = excelObj.getSheetAt(0);
/* 259 */         Row row = sheetObj.getRow(0);
/* 260 */         int colNum = row.getPhysicalNumberOfCells();
/* 261 */         int lastRowNum = sheetObj.getLastRowNum();
/* 262 */         EduYear eduYear = null;
/* 263 */         for (int i = 1; i <= lastRowNum; i++) {
/* 264 */           eduYear = new EduYear();
/* 265 */           row = sheetObj.getRow(i);
/* 266 */           if (row != null) {
/* 267 */             for (int j = 0; j < colNum; j++) {
/* 268 */               Cell cell = row.getCell(j);
/* 269 */               String value = "";
/* 270 */               if (cell != null) {
/* 271 */                 switch (j)
/*     */                 {
/*     */                 case 0:
/* 274 */                   eduYear.setYearName(cell.getStringCellValue());
/* 275 */                   break;
/*     */                 case 1:
/* 278 */                   eduYear.setYearCode(cell.getStringCellValue());
/* 279 */                   break;
/*     */                 case 2:
/* 282 */                   if (cell.getCellType() == 0) {
/* 283 */                     cell.setCellType(1);
/*     */                   }
/* 285 */                   eduYear.setSchoolYear(cell.getStringCellValue());
/* 286 */                   break;
/*     */                 case 3:
/* 289 */                   eduYear.setDefaultSchoolYear(cell.getStringCellValue());
/* 290 */                   break;
/*     */                 case 4:
/* 293 */                   eduYear.setEnabled(cell.getStringCellValue());
/* 294 */                   break;
/*     */                 case 5:
/* 297 */                   if (cell.getCellType() == 0) {
/* 298 */                     cell.setCellType(1);
/*     */                   }
/* 300 */                   eduYear.setPosition(cell.getStringCellValue());
/* 301 */                   break;
/*     */                 case 6:
/* 304 */                   eduYear.setNote(cell.getStringCellValue());
/*     */                 }
/*     */               }
/*     */ 
/*     */             }
/*     */ 
/* 310 */             Users user = (Users)SessionUtils.getSessionInfo(request.getSession(), Users.class, new Users());
/* 311 */             eduYear.setCreateUser(user.getUserId());
/* 312 */             SimpleDateFormat sdf = new SimpleDateFormat("yyyy-mm-dd HH:mm:ss");
/* 313 */             Date date = new Date();
/* 314 */             String dateStr = sdf.format(date);
/* 315 */             Date mydate = sdf.parse(dateStr);
/* 316 */             eduYear.setCreateTime(mydate);
/* 317 */             int count = this.eduYearMapper.insertSelective(eduYear);
/* 318 */             if (count > 0) {
/* 319 */               successCount = Integer.valueOf(successCount.intValue() + count);
/*     */             }
/*     */           }
/*     */         }
/*     */       }
/*     */ 
/* 325 */       if (successCount.intValue() > 0) {
/* 326 */         json.setMsg(successCount + "");
/* 327 */         json.setFlag(0);
/* 328 */         return json;
/*     */       }
/*     */     } catch (Exception e) {
/* 331 */       e.printStackTrace();
/* 332 */       json.setMsg("err");
/*     */     }
/* 334 */     return json;
/*     */   }
/*     */ }

/* Location:           D:\xoa\webapps\ROOT\WEB-INF\classes\
 * Qualified Name:     com.xoa.service.edu.eduYear.EduYearService
 * JD-Core Version:    0.6.0
 */