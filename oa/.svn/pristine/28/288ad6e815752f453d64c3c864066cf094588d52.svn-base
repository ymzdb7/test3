package com.xoa.controller.edu.course;

import com.xoa.model.edu.eduCourse.EduCourse;
import com.xoa.model.edu.eduCourse.EduCourseWithBLOBs;
import com.xoa.service.edu.eduCourse.EduCourseService;
import com.xoa.service.enclosure.EnclosureService;
import com.xoa.util.Constant;
import com.xoa.util.FileUploadUtil;
import com.xoa.util.ToJson;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

@Controller
@RequestMapping({ "/eduCourse" })
public class EduCourseController {

	@Autowired
	private EduCourseService eduService;

	@Autowired
	private EnclosureService enclosureService;

	@RequestMapping(value = { "/selectEdu" }, produces = { "application/json;charset=UTF-8" })
	@ResponseBody
	public ToJson<EduCourseWithBLOBs> selectEdu(EduCourse eduCourse) {
		return this.eduService.selectEdu(eduCourse);
	}

	@RequestMapping(value = { "/insertFujian" }, produces = { "application/json;charset=UTF-8" })
	@ResponseBody
	public ToJson insertFujian(HttpServletRequest request,
			EduCourseWithBLOBs eduCourseWithBLOBs,
			@RequestParam("file") MultipartFile[] files) {
		ToJson json = new ToJson();
		try {
			String sqlType = Constant.MYOA
					+ (String) request.getSession().getAttribute(
							"loginDateSouse");

			String module = "EduCourse";
			List list = this.enclosureService.upload(files, module, sqlType);
			Object[] o = FileUploadUtil.reAttachment(list);
			eduCourseWithBLOBs.setAttachmentName(o[1].toString());
			eduCourseWithBLOBs.setAttachmentId(o[0].toString());
			eduCourseWithBLOBs.setHidden(Integer.valueOf(0));
			if (eduCourseWithBLOBs != null) {
				json.setObject(eduCourseWithBLOBs);
				json.setFlag(0);
				json.setMsg("ok");
				return json;
			}
			json.setMsg("err");
			json.setFlag(0);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return json;
	}

	@RequestMapping(value = { "/insertEdu" }, produces = { "application/json;charset=UTF-8" })
	@ResponseBody
	public ToJson<EduCourseWithBLOBs> insertEdu(
			EduCourseWithBLOBs eduCourseWithBLOBs) {
		return this.eduService.insertEdu(eduCourseWithBLOBs);
	}

	@RequestMapping({ "/deleteByPrimaryKey" })
	@ResponseBody
	public ToJson deleteByPrimaryKey(Integer id) {
		return this.eduService.deleteByPrimaryKey(id);
	}

	@RequestMapping({ "/index" })
	public String inet() {
		return "app/edu/course/courseSelectTi";
	}

	@RequestMapping(value = { "/selectByPrimaryKey" }, produces = { "application/json;charset=UTF-8" })
	@ResponseBody
	public ToJson selectByPrimaryKey(Integer id, HttpServletRequest request) {
		String sqlType = Constant.MYOA
				+ (String) request.getSession().getAttribute("loginDateSouse");

		return this.eduService.selectByPrimaryKey(id);
	}

	@RequestMapping(value = { "/updateByPrimaryKeySelective" }, produces = { "application/json;charset=UTF-8" })
	@ResponseBody
	public ToJson updateByPrimaryKeySelective(
			EduCourseWithBLOBs eduCourseWithBLOBs) {
		return this.eduService.updateByPrimaryKeySelective(eduCourseWithBLOBs);
	}

	@RequestMapping(value = { "/updateKey" }, produces = { "application/json;charset=UTF-8" })
	@ResponseBody
	public ToJson updateKey(EduCourse eduCourse) {
		return this.eduService.updateKey(eduCourse);
	}
}
