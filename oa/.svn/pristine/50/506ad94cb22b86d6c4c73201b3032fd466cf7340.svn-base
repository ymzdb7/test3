<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myoa.dao.address.AddressGroupMapper" >
  <resultMap id="BaseResultMap" type="com.myoa.model.addressGroup.AddressGroup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="GROUP_ID" property="groupId" jdbcType="INTEGER" />
    <result column="GROUP_NAME" property="groupName" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="ORDER_NO" property="orderNo" jdbcType="INTEGER" />
    <result column="SHARE_GROUP_ID" property="shareGroupId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.myoa.model.addressGroup.AddressGroupWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="PRIV_DEPT" property="privDept" jdbcType="LONGVARCHAR" />
    <result column="PRIV_ROLE" property="privRole" jdbcType="LONGVARCHAR" />
    <result column="PRIV_USER" property="privUser" jdbcType="LONGVARCHAR" />
    <result column="SUPPORT_DEPT" property="supportDept" jdbcType="LONGVARCHAR" />
    <result column="SUPPORT_USER" property="supportUser" jdbcType="LONGVARCHAR" />
    <result column="SHARE_USER_ID" property="shareUserId" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <resultMap id="hashMapResult" type="HashMap" >
    <result column="GROUP_ID" property="key" />
    <result column="GROUP_NAME" property="value" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    GROUP_ID, GROUP_NAME, USER_ID, ORDER_NO, SHARE_GROUP_ID
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    PRIV_DEPT, PRIV_ROLE, PRIV_USER, SUPPORT_DEPT, SUPPORT_USER, SHARE_USER_ID
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.myoa.model.addressGroup.AddressGroupExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from address_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myoa.model.addressGroup.AddressGroupExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from address_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from address_group
    where GROUP_ID = #{groupId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from address_group
    where GROUP_ID = #{groupId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myoa.model.addressGroup.AddressGroupExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from address_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myoa.model.addressGroup.AddressGroupWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into address_group (GROUP_ID, GROUP_NAME, USER_ID, 
      ORDER_NO, SHARE_GROUP_ID, PRIV_DEPT, 
      PRIV_ROLE, PRIV_USER, SUPPORT_DEPT, 
      SUPPORT_USER, SHARE_USER_ID)
    values (#{groupId,jdbcType=INTEGER}, #{groupName,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=INTEGER}, #{shareGroupId,jdbcType=INTEGER}, #{privDept,jdbcType=LONGVARCHAR}, 
      #{privRole,jdbcType=LONGVARCHAR}, #{privUser,jdbcType=LONGVARCHAR}, #{supportDept,jdbcType=LONGVARCHAR}, 
      #{supportUser,jdbcType=LONGVARCHAR}, #{shareUserId,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myoa.model.addressGroup.AddressGroupWithBLOBs"  keyProperty="groupId" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into address_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        GROUP_ID,
      </if>
      <if test="groupName != null" >
        GROUP_NAME,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="orderNo != null" >
        ORDER_NO,
      </if>
      <if test="shareGroupId != null" >
        SHARE_GROUP_ID,
      </if>
      <if test="privDept != null" >
        PRIV_DEPT,
      </if>
      <if test="privRole != null" >
        PRIV_ROLE,
      </if>
      <if test="privUser != null" >
        PRIV_USER,
      </if>
      <if test="supportDept != null" >
        SUPPORT_DEPT,
      </if>
      <if test="supportUser != null" >
        SUPPORT_USER,
      </if>
      <if test="shareUserId != null" >
        SHARE_USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="shareGroupId != null" >
        #{shareGroupId,jdbcType=INTEGER},
      </if>
      <if test="privDept != null" >
        #{privDept,jdbcType=LONGVARCHAR},
      </if>
      <if test="privRole != null" >
        #{privRole,jdbcType=LONGVARCHAR},
      </if>
      <if test="privUser != null" >
        #{privUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="supportDept != null" >
        #{supportDept,jdbcType=LONGVARCHAR},
      </if>
      <if test="supportUser != null" >
        #{supportUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="shareUserId != null" >
        #{shareUserId,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="insertSelective" parameterType="com.myoa.model.addressGroup.AddressGroupWithBLOBs"  keyProperty="groupId" useGeneratedKeys="true" databaseId="oracle">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="groupId"  order="BEFORE" resultType="int">
      select ADDRESS_GROUP_GROUP_ID_SEQ.nextval as groupId from  dual
    </selectKey>
    insert into address_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        GROUP_ID,
      </if>
      <if test="groupName != null" >
        GROUP_NAME,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="orderNo != null" >
        ORDER_NO,
      </if>
      <if test="shareGroupId != null" >
        SHARE_GROUP_ID,
      </if>
      <if test="privDept != null" >
        PRIV_DEPT,
      </if>
      <if test="privRole != null" >
        PRIV_ROLE,
      </if>
      <if test="privUser != null" >
        PRIV_USER,
      </if>
      <if test="supportDept != null" >
        SUPPORT_DEPT,
      </if>
      <if test="supportUser != null" >
        SUPPORT_USER,
      </if>
      <if test="shareUserId != null" >
        SHARE_USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="shareGroupId != null" >
        #{shareGroupId,jdbcType=INTEGER},
      </if>
      <if test="privDept != null" >
        #{privDept,jdbcType=LONGVARCHAR},
      </if>
      <if test="privRole != null" >
        #{privRole,jdbcType=LONGVARCHAR},
      </if>
      <if test="privUser != null" >
        #{privUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="supportDept != null" >
        #{supportDept,jdbcType=LONGVARCHAR},
      </if>
      <if test="supportUser != null" >
        #{supportUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="shareUserId != null" >
        #{shareUserId,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="insertSelective" parameterType="com.myoa.model.addressGroup.AddressGroupWithBLOBs"  keyProperty="groupId" useGeneratedKeys="true" databaseId="dm">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="groupId"  order="BEFORE" resultType="int">
      select ADDRESS_GROUP_GROUP_ID_SEQ.nextval as groupId from  dual
    </selectKey>
    insert into address_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        GROUP_ID,
      </if>
      <if test="groupName != null" >
        GROUP_NAME,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="orderNo != null" >
        ORDER_NO,
      </if>
      <if test="shareGroupId != null" >
        SHARE_GROUP_ID,
      </if>
      <if test="privDept != null" >
        PRIV_DEPT,
      </if>
      <if test="privRole != null" >
        PRIV_ROLE,
      </if>
      <if test="privUser != null" >
        PRIV_USER,
      </if>
      <if test="supportDept != null" >
        SUPPORT_DEPT,
      </if>
      <if test="supportUser != null" >
        SUPPORT_USER,
      </if>
      <if test="shareUserId != null" >
        SHARE_USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="shareGroupId != null" >
        #{shareGroupId,jdbcType=INTEGER},
      </if>
      <if test="privDept != null" >
        #{privDept,jdbcType=LONGVARCHAR},
      </if>
      <if test="privRole != null" >
        #{privRole,jdbcType=LONGVARCHAR},
      </if>
      <if test="privUser != null" >
        #{privUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="supportDept != null" >
        #{supportDept,jdbcType=LONGVARCHAR},
      </if>
      <if test="supportUser != null" >
        #{supportUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="shareUserId != null" >
        #{shareUserId,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.myoa.model.addressGroup.AddressGroupExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from address_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update address_group
    <set >
      <if test="record.groupId != null" >
        GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.groupName != null" >
        GROUP_NAME = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null" >
        ORDER_NO = #{record.orderNo,jdbcType=INTEGER},
      </if>
      <if test="record.shareGroupId != null" >
        SHARE_GROUP_ID = #{record.shareGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.privDept != null" >
        PRIV_DEPT = #{record.privDept,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.privRole != null" >
        PRIV_ROLE = #{record.privRole,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.privUser != null" >
        PRIV_USER = #{record.privUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.supportDept != null" >
        SUPPORT_DEPT = #{record.supportDept,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.supportUser != null" >
        SUPPORT_USER = #{record.supportUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.shareUserId != null" >
        SHARE_USER_ID = #{record.shareUserId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update address_group
    set GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      GROUP_NAME = #{record.groupName,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      ORDER_NO = #{record.orderNo,jdbcType=INTEGER},
      SHARE_GROUP_ID = #{record.shareGroupId,jdbcType=INTEGER},
      PRIV_DEPT = #{record.privDept,jdbcType=LONGVARCHAR},
      PRIV_ROLE = #{record.privRole,jdbcType=LONGVARCHAR},
      PRIV_USER = #{record.privUser,jdbcType=LONGVARCHAR},
      SUPPORT_DEPT = #{record.supportDept,jdbcType=LONGVARCHAR},
      SUPPORT_USER = #{record.supportUser,jdbcType=LONGVARCHAR},
      SHARE_USER_ID = #{record.shareUserId,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update address_group
    set GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      GROUP_NAME = #{record.groupName,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      ORDER_NO = #{record.orderNo,jdbcType=INTEGER},
      SHARE_GROUP_ID = #{record.shareGroupId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myoa.model.addressGroup.AddressGroupWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update address_group
    <set >
      <if test="groupName != null" >
        GROUP_NAME = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        ORDER_NO = #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="shareGroupId != null" >
        SHARE_GROUP_ID = #{shareGroupId,jdbcType=INTEGER},
      </if>
      <if test="privDept != null" >
        PRIV_DEPT = #{privDept,jdbcType=LONGVARCHAR},
      </if>
      <if test="privRole != null" >
        PRIV_ROLE = #{privRole,jdbcType=LONGVARCHAR},
      </if>
      <if test="privUser != null" >
        PRIV_USER = #{privUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="supportDept != null" >
        SUPPORT_DEPT = #{supportDept,jdbcType=LONGVARCHAR},
      </if>
      <if test="supportUser != null" >
        SUPPORT_USER = #{supportUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="shareUserId != null" >
        SHARE_USER_ID = #{shareUserId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where GROUP_ID = #{groupId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myoa.model.addressGroup.AddressGroupWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update address_group
    set GROUP_NAME = #{groupName,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      ORDER_NO = #{orderNo,jdbcType=INTEGER},
      SHARE_GROUP_ID = #{shareGroupId,jdbcType=INTEGER},
      PRIV_DEPT = #{privDept,jdbcType=LONGVARCHAR},
      PRIV_ROLE = #{privRole,jdbcType=LONGVARCHAR},
      PRIV_USER = #{privUser,jdbcType=LONGVARCHAR},
      SUPPORT_DEPT = #{supportDept,jdbcType=LONGVARCHAR},
      SUPPORT_USER = #{supportUser,jdbcType=LONGVARCHAR},
      SHARE_USER_ID = #{shareUserId,jdbcType=LONGVARCHAR}
    where GROUP_ID = #{groupId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myoa.model.addressGroup.AddressGroup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update address_group
    set GROUP_NAME = #{groupName,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      ORDER_NO = #{orderNo,jdbcType=INTEGER},
      SHARE_GROUP_ID = #{shareGroupId,jdbcType=INTEGER}
    where GROUP_ID = #{groupId,jdbcType=INTEGER}
  </update>

  <select id="selectGroups" resultMap="BaseResultMap" >
     select *  from address_group
  </select>
  <select id="selectPublicGroup" resultMap="ResultMapWithBLOBs" parameterType="map">
     select
      *
    from
      address_group
    WHERE 1=1
    <if test="groupName != null">
      AND GROUP_NAME = #{groupName}
    </if>
    <if test="userId">
      AND USER_ID = #{userId}
    </if>
    ORDER BY ORDER_NO
  </select>

  <select id="selectGroupsByName" parameterType="map" resultMap="BaseResultMap">
    select
      *
    from
      address_group
    WHERE 1=1
      <if test="groupName != null">
        AND GROUP_NAME = #{groupName}
      </if>
      <if test="userId">
        AND USER_ID = #{userId}
      </if>
  </select>

  <select id="getAllGroupsMap" resultMap="BaseResultMap" >
    SELECT group_id,group_name from address_group
  </select>
  <select id="selectGroup" resultMap="BaseResultMap" parameterType="com.myoa.model.addressGroup.AddressGroup">
     SELECT * FROM address_group
     <where>
       <if test="groupId != null and groupId != ''">
         AND GROUP_ID =#{groupId}
       </if>
       <if test="groupName != null and groupName != ''">
         AND  GROUP_NAME = #{groupName}
       </if>

     </where>

  </select>
 <select id="selectPublicGroupInfo" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
   SELECT * FROM address_group
   WHERE GROUP_ID =#{groupId}
 </select>
  <select id="selectAllAddressGroup" resultMap="ResultMapWithBLOBs"  parameterType="map">
     SELECT * FROM address_group
     <where>
    <if test="userId">
      AND USER_ID = #{userId}
    </if>
    AND (
    <trim suffixOverrides="OR">
      <if test="privDept != null and privDept != ''">
        (PRIV_DEPT LIKE concat('%,',#{privDept},',%')
        OR PRIV_DEPT LIKE concat(#{privDept},',%')
        )OR
      </if>
      <if test="privRole != null and privRole != ''">
        (PRIV_ROLE LIKE concat('%,',#{privRole},',%')
        OR PRIV_ROLE LIKE concat(#{privRole},',%')
        )OR
      </if>
      <if test="privUser != null and privUser != ''">
        (PRIV_USER LIKE concat('%,',#{privUser},',%')
        OR PRIV_USER LIKE concat(#{privUser},',%')
        )OR
      </if>
      PRIV_DEPT='ALL_DEPT'
    </trim>)
     </where>
</select>

  <select id="selectAllAddressGroup" resultMap="ResultMapWithBLOBs"  parameterType="map" databaseId="oracle">
    SELECT * FROM address_group
    <where>
      <if test="userId">
        AND USER_ID = #{userId}
      </if>
      AND (
      <trim suffixOverrides="OR">
        <if test="privDept != null and privDept != ''">
          (PRIV_DEPT LIKE concat('%,',concat(#{privDept},',%'))
          OR PRIV_DEPT LIKE concat(#{privDept},',%')
          )OR
        </if>
        <if test="privRole != null and privRole != ''">
          (PRIV_ROLE LIKE concat('%,',concat(#{privRole},',%'))
          OR PRIV_ROLE LIKE concat(#{privRole},',%')
          )OR
        </if>
        <if test="privUser != null and privUser != ''">
          (PRIV_USER LIKE concat('%,',concat(#{privUser},',%'))
          OR PRIV_USER LIKE concat(#{privUser},',%')
          )OR
        </if>
        "TO_CHAR"(PRIV_DEPT)='ALL_DEPT'
      </trim>)
    </where>
  </select>

  <select id="selectAllAddressGroup" resultMap="ResultMapWithBLOBs"  parameterType="map" databaseId="dm">
    SELECT * FROM address_group
    <where>
      <if test="userId">
        AND USER_ID = #{userId}
      </if>
      AND (
      <trim suffixOverrides="OR">
        <if test="privDept != null and privDept != ''">
          (PRIV_DEPT LIKE concat('%,',concat(#{privDept},',%'))
          OR PRIV_DEPT LIKE concat(#{privDept},',%')
          )OR
        </if>
        <if test="privRole != null and privRole != ''">
          (PRIV_ROLE LIKE concat('%,',concat(#{privRole},',%'))
          OR PRIV_ROLE LIKE concat(#{privRole},',%')
          )OR
        </if>
        <if test="privUser != null and privUser != ''">
          (PRIV_USER LIKE concat('%,',concat(#{privUser},',%'))
          OR PRIV_USER LIKE concat(#{privUser},',%')
          )OR
        </if>
        "TO_CHAR"(PRIV_DEPT)='ALL_DEPT'
      </trim>)
    </where>
  </select>

</mapper>