/*     */ package com.xoa.controller.edu.voteTitle;
/*     */ 
/*     */ import com.xoa.model.edu.voteTitle.VoteTitle;
/*     */ import com.xoa.model.users.Users;
/*     */ import com.xoa.service.edu.voteTitle.IVoteTitleService;
/*     */ import com.xoa.util.AjaxJson;
import com.xoa.util.Constant;
/*     */ import com.xoa.util.ToJson;
/*     */ import com.xoa.util.common.session.SessionUtils;
/*     */ import com.xoa.util.dataSource.ContextHolder;
/*     */ import java.util.Map;
/*     */ import javax.servlet.http.HttpServletRequest;
/*     */ import javax.servlet.http.HttpSession;
/*     */ import org.springframework.beans.factory.annotation.Autowired;
/*     */ import org.springframework.stereotype.Controller;
/*     */ import org.springframework.web.bind.annotation.RequestMapping;
/*     */ import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
/*     */ 
/*     */ @Controller
/*     */ @RequestMapping({"/vote/manage"})
/*     */ public class VoteTitleController
/*     */ {
/*     */ 
/*     */   @Autowired
/*     */   IVoteTitleService voteTitleService;
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/getVoteTitleList"})
/*     */   public ToJson<VoteTitle> getVoteTitleList(HttpServletRequest request, VoteTitle voteTitle, Map<String, Object> maps, @RequestParam(value="page", required=false) Integer page, @RequestParam(value="pageSize", required=false) Integer pageSize, @RequestParam(value="useFlag", required=false) boolean useFlag)
/*     */   {
/*  50 */     return this.voteTitleService.getVoteTitleList(request, voteTitle, maps, page, pageSize, useFlag);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/vote"})
/*     */   public String vote(HttpServletRequest request)
/*     */   {
/*  61 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/*  63 */     return "app/edu/voteTitle/index";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/voteChild"})
/*     */   public String voteChild(HttpServletRequest request)
/*     */   {
/*  74 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/*  76 */     return "app/edu/voteTitle/voteChild";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/voteList"})
/*     */   public String voteList(HttpServletRequest request)
/*     */   {
/*  87 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/*  89 */     return "app/edu/voteTitle/voteList";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/newVote"})
/*     */   public String newVote(HttpServletRequest request)
/*     */   {
/* 100 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/* 102 */     return "app/edu/voteTitle/newVote";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/updateVote"})
/*     */   public String updateVote(HttpServletRequest request)
/*     */   {
/* 113 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/* 115 */     return "app/edu/voteTitle/viteItem";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/editVote"})
/*     */   public String editVote(HttpServletRequest request)
/*     */   {
/* 126 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/* 128 */     return "app/edu/voteTitle/voteEdit";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/editChildVote"})
/*     */   public String editChildVote(HttpServletRequest request)
/*     */   {
/* 139 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/* 141 */     return "app/edu/voteTitle/editChildVote";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/voteIndex"})
/*     */   public String voteIndex(HttpServletRequest request)
/*     */   {
/* 152 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/* 154 */     return "app/vote/voteList/index";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/publishVote"})
/*     */   public String publishVote(HttpServletRequest request)
/*     */   {
/* 165 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/* 167 */     return "app/vote/voteList/publishVote";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/unPublishVote"})
/*     */   public String unPublishVote(HttpServletRequest request)
/*     */   {
/* 178 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/* 180 */     return "app/vote/voteList/unPublishVote";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/voteResult"})
/*     */   public String voteResult(HttpServletRequest request)
/*     */   {
/* 191 */     String resultId = request.getParameter("resultId");
/* 192 */     String type = request.getParameter("type");
/* 193 */     if (type.equals("0")) {
/* 194 */       return "app/edu/voteTitle/voteResult";
/*     */     }
/* 196 */     Users user = (Users)SessionUtils.getSessionInfo(request.getSession(), Users.class, new Users());
/* 197 */     boolean isVote = this.voteTitleService.isVotite(resultId, user);
/*     */ 
/* 199 */     if (!isVote) {
/* 200 */       return "app/vote/voteList/readVote";
/*     */     }
/* 202 */     return "app/edu/voteTitle/voteResult";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/readVote"})
/*     */   public String readVote(HttpServletRequest request)
/*     */   {
/* 214 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/* 216 */     return "app/vote/voteList/readVote";
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/newChildVote"})
/*     */   public String newChildVote(HttpServletRequest request)
/*     */   {
/* 227 */     ContextHolder.setConsumerType(Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse"));
/*     */ 
/* 229 */     return "app/edu/voteTitle/newChildVote";
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/newVoteTitle"})
/*     */   public ToJson<VoteTitle> newVoteTitle(HttpServletRequest request, VoteTitle voteTitle)
/*     */   {
/* 245 */     return this.voteTitleService.newVoteTitle(request, voteTitle);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/updateVoteTitle"})
/*     */   public ToJson<VoteTitle> updateVoteTitle(HttpServletRequest request, VoteTitle voteTitle)
/*     */   {
/* 258 */     return this.voteTitleService.updateVoteTitle(request, voteTitle);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/getChildVoteList"})
/*     */   public ToJson<VoteTitle> getChildVoteList(HttpServletRequest request, VoteTitle voteTitle, Integer voteId)
/*     */   {
/* 272 */     return this.voteTitleService.getChildVoteList(request, voteTitle, voteId);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/getOptionVoteList"})
/*     */   public ToJson<VoteTitle> getOptionVoteList(HttpServletRequest request, VoteTitle voteTitle, Integer voteId)
/*     */   {
/* 287 */     return this.voteTitleService.getOptionVoteList(request, voteTitle, voteId);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/addChildVoteTitle"})
/*     */   public ToJson<VoteTitle> addChildVoteTitle(HttpServletRequest request, VoteTitle voteTitle)
/*     */   {
/* 300 */     return this.voteTitleService.addChildVoteTitle(request, voteTitle);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/getChildDetail"})
/*     */   public ToJson<VoteTitle> getChilddetail(HttpServletRequest request, Integer voteId)
/*     */   {
/* 315 */     return this.voteTitleService.getChilddetail(request, voteId);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/deleteByVoteId"})
/*     */   public ToJson<VoteTitle> deleteByVoteId(HttpServletRequest request, String[] voteIds)
/*     */   {
/* 328 */     return this.voteTitleService.deleteByVoteId(request, voteIds);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/getVoteDataByVoteId"})
/*     */   public ToJson<VoteTitle> getVoteDataByVoteId(HttpServletRequest request, Integer voteId)
/*     */   {
/* 342 */     return this.voteTitleService.getVoteDataByVoteId(request, voteId);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/searchVoteTitleList"})
/*     */   public ToJson<VoteTitle> searchVoteTitleList(HttpServletRequest request, VoteTitle voteTitle, Map<String, Object> maps, @RequestParam(value="page", required=false) Integer page, @RequestParam(value="pageSize", required=false) Integer pageSize, @RequestParam(value="useFlag", required=false) boolean useFlag)
/*     */   {
/* 359 */     return this.voteTitleService.searchVoteTitleList(request, voteTitle, maps, page, pageSize, useFlag);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/getVoteTitleCount"})
/*     */   public ToJson<VoteTitle> getVoteTitleCount(HttpServletRequest request, VoteTitle voteTitle, Map<String, Object> maps, @RequestParam(value="page", required=false) Integer page, @RequestParam(value="pageSize", required=false) Integer pageSize, @RequestParam(value="useFlag", required=false) boolean useFlag)
/*     */   {
/* 376 */     return this.voteTitleService.getVoteTitleCount(request, voteTitle, maps, page, pageSize, useFlag);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/addVoteTitle"})
/*     */   public AjaxJson addVoteTitle(HttpServletRequest request, VoteTitle voteTitle, String options, Integer voteId)
/*     */   {
/* 389 */     return this.voteTitleService.addVoteTitle(request, voteTitle, options, voteId);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/statusUpdate"})
/*     */   public AjaxJson statusUpdate(HttpServletRequest request, Integer voteId)
/*     */   {
/* 404 */     return this.voteTitleService.statusUpdate(request, voteId);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/getPublishVoteTitleList"})
/*     */   public ToJson<VoteTitle> getPublishVoteTitleList(HttpServletRequest request, VoteTitle voteTitle, Map<String, Object> maps, @RequestParam(value="page", required=false) Integer page, @RequestParam(value="pageSize", required=false) Integer pageSize, @RequestParam(value="useFlag", required=false) boolean useFlag)
/*     */   {
/* 422 */     return this.voteTitleService.getPublishVoteTitleList(request, voteTitle, maps, page, pageSize, useFlag);
/*     */   }
/*     */ 
/*     */   @ResponseBody
/*     */   @RequestMapping({"/getPublishVoteTitleCount"})
/*     */   public ToJson<VoteTitle> getPublishVoteTitleCount(HttpServletRequest request, VoteTitle voteTitle, Map<String, Object> maps, @RequestParam(value="page", required=false) Integer page, @RequestParam(value="pageSize", required=false) Integer pageSize, @RequestParam(value="useFlag", required=false) boolean useFlag)
/*     */   {
/* 440 */     return this.voteTitleService.getPublishVoteTitleCount(request, voteTitle, maps, page, pageSize, useFlag);
/*     */   }
/*     */ }

/* Location:           D:\xoa\webapps\ROOT\WEB-INF\classes\
 * Qualified Name:     com.xoa.controller.edu.voteTitle.VoteTitleController
 * JD-Core Version:    0.6.0
 */