/*     */ package com.xoa.controller.im;
/*     */ 
/*     */ import com.xoa.controller.im.Model.ImMessageModel;
/*     */ import com.xoa.controller.im.Model.ImRoomModel;
/*     */ import com.xoa.controller.im.Model.Status;
/*     */ import com.xoa.model.im.ImChatData;
/*     */ import com.xoa.model.im.ImMessage;
/*     */ import com.xoa.model.im.ImRoom;
/*     */ import com.xoa.model.users.Users;
/*     */ import com.xoa.service.im.ImChatDataService;
/*     */ import com.xoa.util.ToJson;
/*     */ import com.xoa.util.common.MobileCheck;
/*     */ import com.xoa.util.common.session.SessionUtils;
/*     */ import java.io.FileNotFoundException;
/*     */ import java.io.IOException;
/*     */ import java.io.PrintStream;
/*     */ import java.util.ArrayList;
/*     */ import java.util.HashMap;
/*     */ import java.util.List;
/*     */ import java.util.Map;
/*     */ import javax.servlet.http.HttpServletRequest;
/*     */ import javax.servlet.http.HttpSession;
/*     */ import javax.sound.sampled.LineUnavailableException;
/*     */ import javax.sound.sampled.UnsupportedAudioFileException;
/*     */ import org.springframework.beans.factory.annotation.Autowired;
/*     */ import org.springframework.web.bind.annotation.RequestMapping;
/*     */ import org.springframework.web.bind.annotation.RequestParam;
/*     */ import org.springframework.web.bind.annotation.ResponseBody;
/*     */ import org.springframework.web.bind.annotation.RestController;
/*     */ import org.springframework.web.multipart.MultipartFile;
/*     */ 
/*     */ @RestController
/*     */ @RequestMapping({"/im"})
/*     */ public class ImChatDataController
/*     */ {
/*     */ 
/*     */   @Autowired
/*     */   ImChatDataService imChatDataService;
/*     */ 
/*     */   @RequestMapping({"/putMessage"})
/*     */   @ResponseBody
/*     */   public Object putMessageInfo(@RequestParam(required=false, name="file") MultipartFile file, HttpServletRequest request, Integer flag, String from_uid, String to_uid, String of_from, String of_to, String content, String type, String stime, String uuid, String msg_type, String voice_time, Long atime)
/*     */   {
/*  70 */     System.out.println("-------putMessage----------");
/*  71 */     MultipartFile[] flies = new MultipartFile[1];
/*  72 */     if (file != null) {
/*  73 */       flies[0] = file;
/*     */     }
/*  75 */     if (!MobileCheck.isMobileDevice(request.getHeader("User-Agent").toUpperCase())) {
/*  76 */       return this.imChatDataService.putMessageInfoPc(flies, request, flag, from_uid, to_uid, of_from, of_to, content, type, stime, uuid, msg_type, voice_time);
/*     */     }
/*  78 */     Object status = this.imChatDataService.putMessageInfo(file, request, flag, from_uid, to_uid, of_from, of_to, content, type, stime, uuid, msg_type, voice_time, atime);
/*  79 */     return status;
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/getImList"})
/*     */   @ResponseBody
/*     */   public List<ImMessageModel> getImList(HttpServletRequest request, String of_from)
/*     */   {
/*  94 */     System.out.println("-------getImList----------");
/*  95 */     List list = null;
/*     */     try
/*     */     {
/*  99 */       list = this.imChatDataService.getImChatList(request, of_from);
/*     */     } catch (FileNotFoundException e) {
/* 101 */       return list;
/*     */     } catch (IOException e) {
/* 103 */       e.printStackTrace();
/* 104 */       return list;
/*     */     }
/*     */     catch (LineUnavailableException e) {
/* 107 */       e.printStackTrace();
/* 108 */       return list;
/*     */     }
/*     */     catch (UnsupportedAudioFileException e) {
/* 111 */       e.printStackTrace();
/* 112 */       return list;
/*     */     }
/* 114 */     return list;
/*     */   }
/* 120 */   @RequestMapping({"/getSqlType"})
/*     */   @ResponseBody
/*     */   public ToJson<ImMessageModel> getImList1(HttpServletRequest request) { String sqlType = (String)request.getSession().getAttribute("loginDateSouse");
/*     */ 
/* 122 */     ToJson toJson = new ToJson();
/* 123 */     Users users = (Users)SessionUtils.getSessionInfo(request.getSession(), Users.class, new Users());
/* 124 */     int str = users.getUid().intValue();
/* 125 */     ImMessageModel messageModel = new ImMessageModel();
/* 126 */     messageModel.setSqlType(sqlType);
/* 127 */     messageModel.setStr(str);
/* 128 */     toJson.setObject(messageModel);
/* 129 */     toJson.setMsg("ok");
/* 130 */     return toJson;
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/getImList1"})
/*     */   @ResponseBody
/*     */   public List<ImMessageModel> getImList1(HttpServletRequest request, String of_from)
/*     */   {
/* 146 */     String sqlType = (String)request.getSession().getAttribute("loginDateSouse");
/*     */ 
/* 148 */     Users users = (Users)SessionUtils.getSessionInfo(request.getSession(), Users.class, new Users());
/* 149 */     int str = users.getUid().intValue();
/* 150 */     ImMessageModel messageModel = new ImMessageModel();
/* 151 */     messageModel.setSqlType(sqlType);
/* 152 */     messageModel.setStr(str);
/* 153 */     System.out.println("-------getImList----------");
/* 154 */     List list = null;
/*     */     try {
/* 156 */       list = this.imChatDataService.getImChatList1(request, of_from);
/*     */     } catch (FileNotFoundException e) {
/* 158 */       return list;
/*     */     } catch (IOException e) {
/* 160 */       e.printStackTrace();
/* 161 */       return list;
/*     */     }
/*     */     catch (LineUnavailableException e) {
/* 164 */       e.printStackTrace();
/* 165 */       return list;
/*     */     }
/*     */     catch (UnsupportedAudioFileException e) {
/* 168 */       e.printStackTrace();
/* 169 */       return list;
/*     */     }
/* 171 */     return list;
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/rollBackMessage"})
/*     */   @ResponseBody
/*     */   public ToJson<ImMessage> rollBackMessage(String uuid)
/*     */   {
/* 184 */     return this.imChatDataService.rollBackMessage(uuid);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/showMessageList"})
/*     */   @ResponseBody
/*     */   public List<ImMessageModel> showMessageList(HttpServletRequest request, String of_from, String of_to, String last_time, String msg_type, @RequestParam(name="pagenum", required=false, defaultValue="1") Integer pagenum)
/*     */   {
/* 203 */     System.out.println("-------showMessageList----------");
/* 204 */     ToJson list = new ToJson();
/* 205 */     List imMessageModelList = new ArrayList();
/*     */     try
/*     */     {
/* 208 */       imMessageModelList = this.imChatDataService.showMessageList(request, of_from, of_to, last_time, msg_type, pagenum).getObj();
/*     */     }
/*     */     catch (FileNotFoundException e) {
/* 211 */       e.printStackTrace();
/*     */     } catch (IOException e) {
/* 213 */       e.printStackTrace();
/*     */     } catch (LineUnavailableException e) {
/* 215 */       e.printStackTrace();
/*     */     } catch (UnsupportedAudioFileException e) {
/* 217 */       e.printStackTrace();
/*     */     }
/* 219 */     return imMessageModelList;
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/showMessageListRilegou"})
/*     */   @ResponseBody
/*     */   public ToJson<ImMessageModel> showMessageListRilegou(HttpServletRequest request, String of_from, String of_to, String last_time, String msg_type, @RequestParam(name="pagenum", required=false, defaultValue="1") Integer pagenum, String type, String fileName, String searchMsg) {
/* 227 */     System.out.println("-------showMessageList----------");
/* 228 */     ToJson list = new ToJson();
/*     */     try
/*     */     {
/* 231 */       list = this.imChatDataService.showMessageListRiLeGou(request, of_from, of_to, last_time, msg_type, pagenum, type, fileName, searchMsg);
/*     */     }
/*     */     catch (FileNotFoundException e) {
/* 234 */       e.printStackTrace();
/*     */     } catch (IOException e) {
/* 236 */       e.printStackTrace();
/*     */     } catch (LineUnavailableException e) {
/* 238 */       e.printStackTrace();
/*     */     } catch (UnsupportedAudioFileException e) {
/* 240 */       e.printStackTrace();
/*     */     }
/* 242 */     return list;
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/getAllRoom"})
/*     */   @ResponseBody
/*     */   public List<ImRoomModel> getAllRoom(HttpServletRequest request, String uid)
/*     */   {
/* 256 */     System.out.println("-------getAllRoom----------");
/* 257 */     return this.imChatDataService.getAllRoom(uid);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/getSingleRoom"})
/*     */   @ResponseBody
/*     */   public ImRoomModel getSingleRoom(HttpServletRequest request, String room_id)
/*     */   {
/* 271 */     System.out.println("-------getSingleRoom----------");
/* 272 */     return this.imChatDataService.getSingleRoom(room_id);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/insertRoom"})
/*     */   @ResponseBody
/*     */   public Status insertRoom(HttpServletRequest request, String name, String set_uid, String set_of, String member_uid, String stime, String room_of)
/*     */   {
/* 292 */     return this.imChatDataService.insertRoom(name, set_uid, set_of, member_uid, stime, room_of);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/getOutPerson"})
/*     */   @ResponseBody
/*     */   public Status getOutPerson(HttpServletRequest request, String room_id, String delete_uid, String opt)
/*     */   {
/* 308 */     return this.imChatDataService.getOutPerson(room_id, delete_uid, opt);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/roomRever"})
/*     */   @ResponseBody
/*     */   public ToJson<ImRoom> roomRever(String room_id)
/*     */   {
/* 321 */     return this.imChatDataService.roomRever(room_id);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/openInvite"})
/*     */   @ResponseBody
/*     */   public Status openInvite(HttpServletRequest request, String room_id, String check)
/*     */   {
/* 336 */     return this.imChatDataService.openInvite(room_id, check);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/deleteMessage"})
/*     */   @ResponseBody
/*     */   public Status deleteMessage(String uid, String deleteuuid)
/*     */   {
/* 351 */     return this.imChatDataService.deleteMessage(deleteuuid, uid);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/getPersonToRoom"})
/*     */   @ResponseBody
/*     */   public Status getPersonToRoom(HttpServletRequest request, String room_id, String invite_uid)
/*     */   {
/* 366 */     return this.imChatDataService.getPersonToRoom(room_id, invite_uid);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/updateRoomName"})
/*     */   @ResponseBody
/*     */   public Status updateRoomName(HttpServletRequest request, String room_id, String room_name)
/*     */   {
/* 382 */     return this.imChatDataService.updateRoomName(room_id, room_name);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/getAttchments"})
/*     */   @ResponseBody
/*     */   public List<ImMessageModel> getAttchment(HttpServletRequest req, String other_id, String my_uid)
/*     */   {
/*     */     try
/*     */     {
/* 399 */       return this.imChatDataService.getAttchments(other_id, my_uid, req);
/*     */     } catch (IOException e) {
/* 401 */       e.printStackTrace();
/* 402 */     }return new ArrayList();
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/selectMessage"})
/*     */   @ResponseBody
/*     */   public List<ImMessageModel> selectMessage(HttpServletRequest req, String other_id, String my_uid, String keyword, String msg_type)
/*     */   {
/*     */     try
/*     */     {
/* 421 */       Map map = new HashMap();
/* 422 */       map.put("other_id", other_id);
/* 423 */       map.put("req", req);
/* 424 */       map.put("my_uid", my_uid);
/* 425 */       map.put("keyword", keyword);
/* 426 */       map.put("msg_type", msg_type);
/* 427 */       return this.imChatDataService.selectMessage(map);
/*     */     } catch (Exception e) {
/* 429 */       e.printStackTrace();
/* 430 */     }return new ArrayList();
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/updateMsgFree"})
/*     */   @ResponseBody
/*     */   public Status updateMsgFree(HttpServletRequest req, String list_id, String type, String set_uid)
/*     */   {
/*     */     Status s;
/*     */     try
/*     */     {
/* 450 */       Map map = new HashMap();
/* 451 */       map.put("list_id", list_id);
/* 452 */       map.put("req", req);
/* 453 */       map.put("type", type);
/* 454 */       map.put("set_uid", set_uid);
/* 455 */       Status status = this.imChatDataService.updateMsgFree(map);
/* 456 */       return status;
/*     */     } catch (Exception e) {
/* 458 */       e.printStackTrace();
/* 459 */       s = new Status();
/* 460 */       s.setStatus("error");
/* 461 */     }return s;
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/getPriv"})
/*     */   @ResponseBody
/*     */   public ImMessageModel getPriv(HttpServletRequest request, String of_from, String of_to, String msg_type)
/*     */   {
/* 479 */     ImMessageModel priv = null;
/*     */     try {
/* 481 */       priv = this.imChatDataService.getPriv(of_from, of_to, msg_type);
/*     */     } catch (Exception e) {
/* 483 */       e.getMessage();
/*     */     }
/* 485 */     return priv;
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/delChatList"})
/*     */   @ResponseBody
/*     */   public ToJson<ImChatData> delChatList(HttpServletRequest request, int listId)
/*     */   {
/* 498 */     return this.imChatDataService.delChatList(request, listId);
/*     */   }
/*     */ 
/*     */   @RequestMapping({"/getRoomPerson"})
/*     */   @ResponseBody
/*     */   public ToJson<Users> getRoomPerson(HttpServletRequest request, String roomOf)
/*     */   {
/* 511 */     return this.imChatDataService.getRoomPerson(request, roomOf);
/*     */   }
/*     */ }

/* Location:           D:\xoa\webapps\ROOT\WEB-INF\classes\
 * Qualified Name:     com.xoa.controller.im.ImChatDataController
 * JD-Core Version:    0.6.0
 */