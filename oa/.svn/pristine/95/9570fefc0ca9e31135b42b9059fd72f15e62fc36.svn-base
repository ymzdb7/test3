<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.sms.SmsMapper">
    <resultMap id="BaseResultMap" type="com.xoa.model.sms.Sms">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="SMS_ID" property="smsId" jdbcType="INTEGER"/>
        <result column="TO_ID" property="toId" jdbcType="VARCHAR"/>
        <result column="REMIND_FLAG" property="remindFlag" jdbcType="CHAR"/>
        <result column="DELETE_FLAG" property="deleteFlag" jdbcType="CHAR"/>
        <result column="BODY_ID" property="bodyId" jdbcType="INTEGER"/>
        <result column="REMIND_TIME" property="remindTime" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SMS_ID, TO_ID, REMIND_FLAG, DELETE_FLAG, BODY_ID, REMIND_TIME
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.sms.SmsExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sms
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.xoa.model.sms.SmsExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from sms
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xoa.model.sms.Sms">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into sms (SMS_ID, TO_ID, REMIND_FLAG,
        DELETE_FLAG, BODY_ID, REMIND_TIME
        )
        values (#{smsId,jdbcType=INTEGER}, #{toId,jdbcType=VARCHAR}, #{remindFlag,jdbcType=CHAR},
        #{deleteFlag,jdbcType=CHAR}, #{bodyId,jdbcType=INTEGER}, #{remindTime,jdbcType=INTEGER}
        )
    </insert>

    <insert id="insertTomaqi" >
        insert into sms  ( TO_ID, REMIND_FLAG,
        DELETE_FLAG, BODY_ID, REMIND_TIME)
        VALUES
        <foreach collection="emps" item="emp" separator=",">
            (#{emp.toId},#{emp.remindFlag},#{emp.deleteFlag},#{emp.bodyId},#{emp.remindTime})
        </foreach>

    </insert>
    <insert id="insertTomaqi" useGeneratedKeys="true" keyProperty="smsId" databaseId="oracle">
        <selectKey order="BEFORE" keyProperty="smsId" resultType="int">
            SELECT SMS_SMS_ID_SEQ.nextval as smsId from dual
        </selectKey>
        insert into sms  (SMS_ID, TO_ID, REMIND_FLAG,
        DELETE_FLAG, BODY_ID, REMIND_TIME)
        VALUES

        <foreach collection="emps" item="emp" separator=",">
            (#{smsId},#{emp.toId},#{emp.remindFlag},#{emp.deleteFlag},#{emp.bodyId},#{emp.remindTime})
        </foreach>

    </insert>

    <insert id="insertSelective" parameterType="com.xoa.model.sms.Sms">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into sms
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="smsId != null">
                SMS_ID,
            </if>
            <if test="toId != null">
                TO_ID,
            </if>
            <if test="remindFlag != null">
                REMIND_FLAG,
            </if>
            <if test="deleteFlag != null">
                DELETE_FLAG,
            </if>
            <if test="bodyId != null">
                BODY_ID,
            </if>
            <if test="remindTime != null">
                REMIND_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="smsId != null">
                #{smsId,jdbcType=INTEGER},
            </if>
            <if test="toId != null">
                #{toId,jdbcType=VARCHAR},
            </if>
            <if test="remindFlag != null">
                #{remindFlag,jdbcType=CHAR},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=CHAR},
            </if>
            <if test="bodyId != null">
                #{bodyId,jdbcType=INTEGER},
            </if>
            <if test="remindTime != null">
                #{remindTime,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xoa.model.sms.SmsExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from sms
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sms
        <set>
            <if test="record.smsId != null">
                SMS_ID = #{record.smsId,jdbcType=INTEGER},
            </if>
            <if test="record.toId != null">
                TO_ID = #{record.toId,jdbcType=VARCHAR},
            </if>
            <if test="record.remindFlag != null">
                REMIND_FLAG = #{record.remindFlag,jdbcType=CHAR},
            </if>
            <if test="record.deleteFlag != null">
                DELETE_FLAG = #{record.deleteFlag,jdbcType=CHAR},
            </if>
            <if test="record.bodyId != null">
                BODY_ID = #{record.bodyId,jdbcType=INTEGER},
            </if>
            <if test="record.remindTime != null">
                REMIND_TIME = #{record.remindTime,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sms
        set SMS_ID = #{record.smsId,jdbcType=INTEGER},
        TO_ID = #{record.toId,jdbcType=VARCHAR},
        REMIND_FLAG = #{record.remindFlag,jdbcType=CHAR},
        DELETE_FLAG = #{record.deleteFlag,jdbcType=CHAR},
        BODY_ID = #{record.bodyId,jdbcType=INTEGER},
        REMIND_TIME = #{record.remindTime,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>


    <select id="getSmsByMap" resultMap="BaseResultMap" parameterType="map">
        select s.*,sb.* from sms s, sms_body sb
        WHERE s.body_id=sb.body_id
        <if test=" #{remindFlag}!=null and #{remindFlag} !='' ">
            and s.REMIND_FLAG = #{remindFlag}
        </if>
        <if test=" #{toId}!=null and #{toId}!='' ">
            and s.TO_ID = #{toId}
        </if>
        <if test="#{fromId}!=null and #{fromId}!='' ">
            and sb.from_id = #{fromId}
        </if>
    </select>

    <update id="updateDeleteFlag">
        update sms SET delete_flag = #{deleteFlag} where 1 = 1
        <if test=" deleteFlag == 1 ">
            and to_id = #{toId}
        </if>
        <if test="bodyIds!=null">
            and body_id in
            <foreach item="bodyId" collection="bodyIds" open="(" separator="," close=")">
                #{bodyId}
            </foreach>
        </if>
    </update>

    <update id="deleteByRemind">
        update sms s,sms_Body sb SET s.delete_flag = 1 where
        <if test="toId!=null">
            s.to_id = #{toId}
        </if>
        <if test="fromId!=null">
            sb.from_id = #{fromId}
        </if>
        and s.remind_Flag = 0 ;
    </update>

    <update id="deleteByDelFlag">
        update sms s,sms_body sb SET s.delete_flag = 2 where s.body_id = sb.body_id and  sb.from_id = #{fromId} and s.delete_flag = 1 ;
    </update>

    <update id="updateRemindFlag">
        update sms SET REMIND_FLAG = #{remindFlag} where to_id = #{toId}
        <if test="bodyIds!=null ">
            and body_id in
            <foreach item="bodyId" collection="bodyIds" open="(" separator="," close=")">
                #{bodyId}
            </foreach>
        </if>
    </update>

    <update id="setRead">
         update sms SET REMIND_FLAG = 0 where to_id = #{toId} and body_id = #{bodyId}
    </update>

    <update id="setReadByUrl" >
        update sms s, sms_body sb SET s.REMIND_FLAG = 0 where s.body_id = sb.body_id and  to_id = #{toId} and sb.remind_url like concat('%', #{url}, '%')
    </update>


    <!--根据条件查询提醒消息-->
    <select id="smsSelectBody" parameterType="java.util.Map" resultType="java.util.Map">
        select  s.BODY_ID as 'bodyId',s.TO_ID as 'toId',smb.CONTENT as 'content',s.REMIND_TIME as 'sendTime',smb.REMIND_URL as'remindUrl',smb.FROM_ID as 'fromId'
        from sms s INNER JOIN sms_body smb  on s.BODY_ID=smb.BODY_ID
        where s.TO_ID = #{toId}  and  smb.SMS_TYPE = #{smsType}
        ORDER BY  smb.SEND_TIME DESC
    </select>

    <!--统计数量-->
    <select id="putString" parameterType="java.util.Map" resultType="java.lang.Integer">
          select count(*) as 'toId'  from sms s INNER JOIN sms_body smb  on s.BODY_ID=smb.BODY_ID
        where s.TO_ID = #{toId}  and  smb.SMS_TYPE = #{smsType}
    </select>

        <!--查询一投-->
    <select id="putStringOne" parameterType="java.util.Map" resultType="java.lang.Integer">
        select smb.BODY_ID as 'bodyId'  from sms s INNER JOIN sms_body smb  on s.BODY_ID=smb.BODY_ID
        where s.TO_ID = #{toId}  and  smb.SMS_TYPE = #{smsType}  AND   smb.REMIND_URL=#{remindUrl}
    </select>

    <!--根据操作删除代办-->
    <delete id="deleteOne" parameterType="java.lang.Integer">
          DELETE from sms    WHERE BODY_ID = #{bodyId}
    </delete>
    <delete id="deleteOnet" parameterType="java.lang.Integer">
        DELETE from sms_body    WHERE BODY_ID = #{bodyId}
    </delete>
    <select id="querySmsByType" resultMap="BaseResultMap" parameterType="java.util.Map">
SELECT
	sms.*,body.REMIND_URL as url
FROM
 sms sms
INNER JOIN sms_body body ON  body.BODY_ID=sms.BODY_ID AND body.SMS_TYPE=#{type}
  <if test=" type !=null and type == 2 ">
      AND body.REMIND_URL LIKE concat('email/details?id=',#{id})
   </if>
  <if test=" type !=null and type == 14 ">
      AND body.REMIND_URL LIKE concat('/news/detail?newsId=',#{id})
  </if>
  <if test=" type !=null and type == 1 ">
     AND body.REMIND_URL LIKE concat('/notice/detail?notifyId=',#{id})
  </if>
  <if test=" type !=null and type == 70 ">
            AND body.REMIND_URL LIKE concat(#{id})
   </if>
   <if test=" type !=null and type == 7 ">
            AND body.REMIND_URL LIKE concat(#{id})
    </if>
     <if test=" type !=null and type == 11 ">
            AND body.REMIND_URL LIKE concat(#{id})
    </if>
     <if test=" type !=null and type == 8 ">
            AND body.REMIND_URL LIKE concat('/meeting/detail?meetingId=',#{id})
     </if>
WHERE sms.TO_ID=#{userId}
    </select>
    <update id="updateSmsByIds"  parameterType="string">
        UPDATE sms SET sms.REMIND_FLAG=#{flag} WHERE sms.SMS_ID in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="updateSmsUpdateRunId"  parameterType="string">
        UPDATE sms SET sms.DELETE_FLAG=#{flag} WHERE sms.SMS_ID in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


    <select id="querySmsByTypeUpdateRunId" resultType="String" parameterType="java.util.Map">
        SELECT
	sms.*,body.REMIND_URL as url
FROM
 sms sms
INNER JOIN sms_body body ON  body.BODY_ID=sms.BODY_ID AND body.SMS_TYPE=#{type}
  AND body.REMIND_URL LIKE concat(#{url})
    </select>
</mapper>