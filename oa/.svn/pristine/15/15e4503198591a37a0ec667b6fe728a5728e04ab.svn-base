 package com.xoa.util.netdisk;
 
 import java.io.File;
 import java.io.FileNotFoundException;
 import java.io.FileReader;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
 
 public class GlobalSearch
 {
   public static int mount = 0;
   public static List<String> path = new ArrayList();
 
   public static boolean isTrueFile(File file)
   {
     if ((!file.exists()) || (!file.canRead()))
       return false;
     if (file.getName().startsWith(".")) {
       return false;
     }
     return !file.getName().endsWith(".");
   }
 
   public static void findFile(File file, String word)
   {
     File[] listFiles = file.listFiles();
 
     for (int i = 0; i < listFiles.length; i++)
     {
       if (listFiles[i].isDirectory())
         findFile(listFiles[i], word);
       else if (isTrueFile(listFiles[i]))
         search(listFiles[i], word);
     }
   }
 
   public static void search(File file, String word)
   {
     try {
       int j = 0; int k = 0; int ch = 0;
       String str = null;
       FileReader in = new FileReader(file);
       while ((ch = in.read()) != -1)
       {
         str = str + (char)ch;
       }
       if (str != null)
       {
         while (str.indexOf(word, j) != -1)
         {
           k++;
           j = str.indexOf(word, j) + 1;
         }
       }
       if (k > 0)
       {
         path.add(file.getAbsolutePath());
         mount += 1;
       }
       in.close();
     }
     catch (FileNotFoundException e)
     {
       e.printStackTrace();
     }
     catch (IOException e)
     {
       e.printStackTrace();
     }
   }
 
   public static void print(String word) {
     if (mount != 0)
     {
       mount = 0;
     }
   }
 }

