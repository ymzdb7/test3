<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myoa.dao.edu.eduDepartment.EduDepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.myoa.model.edu.eduDepartment.EduDepartment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
    <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
    <result column="DEPT_OTHER_NAME" property="deptOtherName" jdbcType="VARCHAR" />
    <result column="TEL_NO" property="telNo" jdbcType="VARCHAR" />
    <result column="FAX_NO" property="faxNo" jdbcType="VARCHAR" />
    <result column="DEPT_ADDRESS" property="deptAddress" jdbcType="VARCHAR" />
    <result column="DEPT_NO" property="deptNo" jdbcType="VARCHAR" />
    <result column="DEPT_PARENT" property="deptParent" jdbcType="INTEGER" />
    <result column="IS_ORG" property="isOrg" jdbcType="CHAR" />
    <result column="ORG_ADMIN" property="orgAdmin" jdbcType="VARCHAR" />
    <result column="DEPT_EMAIL_AUDITS_IDS" property="deptEmailAuditsIds" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.myoa.model.edu.eduDepartment.EduDepartmentWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="MANAGER" property="manager"  />
    <result column="ASSISTANT_ID" property="assistantId" />
    <result column="LEADER1" property="leader1"  />
    <result column="LEADER2" property="leader2" />
    <result column="DEPT_FUNC" property="deptFunc" />
  </resultMap>

  <sql id="Base_Column_List" >
 DEPT_ID, DEPT_NAME, DEPT_OTHER_NAME, TEL_NO, FAX_NO, DEPT_ADDRESS, DEPT_NO, DEPT_PARENT,
    IS_ORG, ORG_ADMIN, DEPT_EMAIL_AUDITS_IDS
  </sql>
  <sql id="Blob_Column_List" >
    MANAGER, ASSISTANT_ID, LEADER1, LEADER2, DEPT_FUNC
  </sql>

  <select id="queryListByDeptId" resultMap="ResultMapWithBLOBs" >
      SELECT
          *
    from edu_department
    WHERE  edu_department.DEPT_PARENT=#{deptParent} order by edu_department.DEPT_NO
  </select>

    <select id="queryListBydeptNO" resultMap="ResultMapWithBLOBs" >
        SELECT
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from edu_department
        WHERE   DEPT_NO LIKE CONCAT( #{deptNO},'__')
    </select>



  <select id="queryGetObjectByDeptId" resultMap="ResultMapWithBLOBs"  >
   select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from edu_department
    where DEPT_ID = #{deptId}
  </select>

  <select id="queryListEduDepartmentWithBLOBs" resultMap="ResultMapWithBLOBs"  >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from edu_department

  </select>


    <update id="updateEduDepartmentWithBLOBs" parameterType="com.myoa.model.edu.eduDepartment.EduDepartmentWithBLOBs" >
        update edu_department
        <set >
            <if test="deptName != null" >
                DEPT_NAME = #{deptName},
            </if>
            <if test="deptOtherName != null" >
                DEPT_OTHER_NAME = #{deptOtherName},
            </if>
            <if test="telNo != null" >
                TEL_NO = #{telNo},
            </if>
            <if test="faxNo != null" >
                FAX_NO = #{faxNo},
            </if>
            <if test="deptAddress != null" >
                DEPT_ADDRESS = #{deptAddress},
            </if>
            <if test="deptNo != null" >
                DEPT_NO = #{deptNo},
            </if>
            <if test="deptParent != null" >
                DEPT_PARENT = #{deptParent},
            </if>
            <if test="isOrg != null" >
                IS_ORG = #{isOrg},
            </if>
            <if test="orgAdmin != null" >
                ORG_ADMIN = #{orgAdmin},
            </if>
            <if test="deptEmailAuditsIds != null" >
                DEPT_EMAIL_AUDITS_IDS = #{deptEmailAuditsIds},
            </if>
            <if test="manager != null" >
                MANAGER = #{manager},
            </if>
            <if test="assistantId != null" >
                ASSISTANT_ID = #{assistantId},
            </if>
            <if test="leader1 != null" >
                LEADER1 = #{leader1},
            </if>
            <if test="leader2 != null" >
                LEADER2 = #{leader2},
            </if>
            <if test="deptFunc != null" >
                DEPT_FUNC = #{deptFunc},
            </if>
        </set>
        where DEPT_ID = #{deptId}
    </update>

    <delete id="deleteEduDepartmentWithBLOBs"  parameterType="com.myoa.model.edu.eduDepartment.EduDepartmentWithBLOBs" >
    delete from edu_department
     where DEPT_ID = #{deptId}
</delete>
    
    <select id="queryObjectsBydeptParent" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        SELECT *  FROM edu_department WHERE DEPT_PARENT=#{deptParent}
    </select>

    <select id="getChDeptEduUser"
            resultType="com.myoa.model.edu.eduDepartment.EduDepartmentWithBLOBs">
        SELECT "people" as type, u.AVATAR as avatar,u.USER_NAME as userName, u.USER_ID as userId,
        u.UID as uid,u.USER_PRIV_NAME as userPrivName,u.SEX as sex from edu_department d,user u
        where d.DEPT_ID=u.DEPT_ID and d.DEPT_ID=#{deptId}
    </select>

    <select id="getChDept"
            resultType="com.myoa.model.edu.eduDepartment.EduDepartmentWithBLOBs">
        SELECT "dep" as type, DEPT_ID as deptId,DEPT_NAME as deptName,DEPT_NO as deptNo,DEPT_PARENT as deptParent from edu_department where DEPT_PARENT=#{deptParent}
    </select>

    <select id="queryUserParent"
            resultType="com.myoa.model.edu.eduDepartment.EduDepartmentWithBLOBs">
        SELECT "people" as type, u.AVATAR as avatar,u.USER_NAME as userName, u.USER_ID as userId,
        u.UID as uid,u.USER_PRIV_NAME as userPrivName,u.SEX as sex from edu_user u
        where u.USER_PRIV_NAME = '家长'
    </select>

    <insert id="insertSelective" parameterType="com.myoa.model.edu.eduDepartment.EduDepartmentWithBLOBs" >

        insert into edu_department
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="deptId != null" >
                DEPT_ID,
            </if>
            <if test="deptName != null" >
                DEPT_NAME,
            </if>
            <if test="deptOtherName != null" >
                DEPT_OTHER_NAME,
            </if>
            <if test="telNo != null" >
                TEL_NO,
            </if>
            <if test="faxNo != null" >
                FAX_NO,
            </if>
            <if test="deptAddress != null" >
                DEPT_ADDRESS,
            </if>
            <if test="deptNo != null" >
                DEPT_NO,
            </if>
            <if test="deptParent != null" >
                DEPT_PARENT,
            </if>
            <if test="isOrg != null" >
                IS_ORG,
            </if>
            <if test="orgAdmin != null" >
                ORG_ADMIN,
            </if>
            <if test="deptEmailAuditsIds != null" >
                DEPT_EMAIL_AUDITS_IDS,
            </if>
            <if test="manager != null" >
                MANAGER,
            </if>
            <if test="assistantId != null" >
                ASSISTANT_ID,
            </if>
            <if test="leader1 != null" >
                LEADER1,
            </if>
            <if test="leader2 != null" >
                LEADER2,
            </if>
            <if test="deptFunc != null" >
                DEPT_FUNC,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="deptId != null" >
                #{deptId,jdbcType=INTEGER},
            </if>
            <if test="deptName != null" >
                #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="deptOtherName != null" >
                #{deptOtherName,jdbcType=VARCHAR},
            </if>
            <if test="telNo != null" >
                #{telNo,jdbcType=VARCHAR},
            </if>
            <if test="faxNo != null" >
                #{faxNo,jdbcType=VARCHAR},
            </if>
            <if test="deptAddress != null" >
                #{deptAddress,jdbcType=VARCHAR},
            </if>
            <if test="deptNo != null" >
                #{deptNo,jdbcType=VARCHAR},
            </if>
            <if test="deptParent != null" >
                #{deptParent,jdbcType=INTEGER},
            </if>
            <if test="isOrg != null" >
                #{isOrg,jdbcType=CHAR},
            </if>
            <if test="orgAdmin != null" >
                #{orgAdmin,jdbcType=VARCHAR},
            </if>
            <if test="deptEmailAuditsIds != null" >
                #{deptEmailAuditsIds,jdbcType=VARCHAR},
            </if>
            <if test="manager != null" >
                #{manager,jdbcType=LONGVARCHAR},
            </if>
            <if test="assistantId != null" >
                #{assistantId,jdbcType=LONGVARCHAR},
            </if>
            <if test="leader1 != null" >
                #{leader1,jdbcType=LONGVARCHAR},
            </if>
            <if test="leader2 != null" >
                #{leader2,jdbcType=LONGVARCHAR},
            </if>
            <if test="deptFunc != null" >
                #{deptFunc,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="getClazzByName" resultMap="BaseResultMap">
        SELECT  *  FROM edu_department
        <where>
            dept_name = #{className}
        </where>
    </select>
    <select id="getClazzByNameParent" resultMap="BaseResultMap">
        SELECT  *  FROM edu_department
        where DEPT_NAME = #{className}
        AND   DEPT_PARENT =#{deptParent}

    </select>
    
    <select id="getDeptByDeptNo" resultMap="BaseResultMap">
        SELECT
	"dep" AS type,
	DEPT_ID,
	DEPT_NAME,
  DEPT_OTHER_NAME,
	DEPT_NO,
	DEPT_PARENT
FROM
	edu_department d
WHERE
	d.DEPT_NO LIKE CONCAT(#{deptNo},'%')
    </select>

    <select id="getdeptIdByDeptName" resultType="java.lang.Integer">
        SELECT DEPT_ID FROM edu_department WHERE DEPT_NAME=#{deptName}
    </select>

    <select id="getAllGrade" resultMap="BaseResultMap">
        SELECT * FROM edu_department WHERE LENGTH(DEPT_NO)=6 and left(DEPT_NO,3)=(select DEPT_NO from edu_department where DEPT_PARENT = 0) order by DEPT_NO
    </select>

    <select id="getAllClazz" resultMap="BaseResultMap">
        SELECT * FROM edu_department WHERE LENGTH(DEPT_NO)=9 and left(DEPT_NO,3)=(select DEPT_NO from edu_department where DEPT_PARENT = 0) and DEPT_PARENT=#{deptId} order by DEPT_NO
    </select>

    <select id="getClazz" resultMap="ResultMapWithBLOBs">
        SELECT * FROM edu_department WHERE LENGTH(DEPT_NO)=9 and left(DEPT_NO,3)=(select DEPT_NO from edu_department where DEPT_PARENT = 0)  order by DEPT_NO
    </select>
    <select id="selectByDepId" resultMap="ResultMapWithBLOBs">
        SELECT * FROM edu_department WHERE DEPT_ID=#{deptId}
    </select>
    <select id="selectByDeptParentDeptName" resultMap="ResultMapWithBLOBs">
        SELECT * FROM  edu_department WHERE DEPT_PARENT=#{deptParent} AND DEPT_NAME=#{deptName}
    </select>

    
</mapper>