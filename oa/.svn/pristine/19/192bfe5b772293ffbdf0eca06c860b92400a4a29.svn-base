<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myoa.dao.book.BookManagerMapper" >
  <resultMap id="BaseResultMap" type="com.myoa.model.book.BookManager" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="AUTO_ID" property="autoId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.myoa.model.book.BookManager" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="MANAGER_ID" property="managerId" jdbcType="LONGVARCHAR" />
    <result column="MANAGE_DEPT_ID" property="manageDeptId" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    AUTO_ID
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    MANAGER_ID, MANAGE_DEPT_ID
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.myoa.model.book.BookManagerExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_manager
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myoa.model.book.BookManagerExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_manager
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_manager
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from book_manager
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myoa.model.book.BookManagerExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from book_manager
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myoa.model.book.BookManager" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into book_manager (AUTO_ID, MANAGER_ID, MANAGE_DEPT_ID
      )
    values (#{autoId,jdbcType=INTEGER}, #{managerId,jdbcType=LONGVARCHAR}, #{manageDeptId,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myoa.model.book.BookManager" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into book_manager
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="autoId != null" >
        AUTO_ID,
      </if>
      <if test="managerId != null" >
        MANAGER_ID,
      </if>
      <if test="manageDeptId != null" >
        MANAGE_DEPT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="autoId != null" >
        #{autoId,jdbcType=INTEGER},
      </if>
      <if test="managerId != null" >
        #{managerId,jdbcType=LONGVARCHAR},
      </if>
      <if test="manageDeptId != null" >
        #{manageDeptId,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myoa.model.book.BookManagerExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from book_manager
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book_manager
    <set >
      <if test="record.autoId != null" >
        AUTO_ID = #{record.autoId,jdbcType=INTEGER},
      </if>
      <if test="record.managerId != null" >
        MANAGER_ID = #{record.managerId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.manageDeptId != null" >
        MANAGE_DEPT_ID = #{record.manageDeptId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book_manager
    set AUTO_ID = #{record.autoId,jdbcType=INTEGER},
      MANAGER_ID = #{record.managerId,jdbcType=LONGVARCHAR},
      MANAGE_DEPT_ID = #{record.manageDeptId,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book_manager
    set AUTO_ID = #{record.autoId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myoa.model.book.BookManager" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book_manager
    <set >
      <if test="managerId != null" >
        MANAGER_ID = #{managerId,jdbcType=LONGVARCHAR},
      </if>
      <if test="manageDeptId != null" >
        MANAGE_DEPT_ID = #{manageDeptId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myoa.model.book.BookManager" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book_manager
    set MANAGER_ID = #{managerId,jdbcType=LONGVARCHAR},
      MANAGE_DEPT_ID = #{manageDeptId,jdbcType=LONGVARCHAR}
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </update>










  <insert id="insertManager" parameterType="com.myoa.model.book.BookManager" >
    insert into book_manager
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="autoId != null" >
        AUTO_ID,
      </if>
      <if test="managerId != null" >
        MANAGER_ID,
      </if>
      <if test="manageDeptId != null" >
        MANAGE_DEPT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="autoId != null" >
        #{autoId,jdbcType=INTEGER},
      </if>
      <if test="managerId != null" >
        #{managerId,jdbcType=LONGVARCHAR},
      </if>
      <if test="manageDeptId != null" >
        #{manageDeptId,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="upManagerById" parameterType="com.myoa.model.book.BookManager" >
    update book_manager
    <set >
      <if test="managerId != null" >
        MANAGER_ID = #{managerId,jdbcType=LONGVARCHAR},
      </if>
      <if test="manageDeptId != null" >
        MANAGE_DEPT_ID = #{manageDeptId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </update>

  <delete id="delManagerById" parameterType="java.lang.Integer" >
    delete from book_manager
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </delete>

  <select id="selManagerById" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_manager
    where AUTO_ID = #{autoId,jdbcType=INTEGER}
  </select>

  <select id="selAllManager" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_manager
  </select>

  <select id="selManagerByManager" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
    select *
    from book_manager
    WHERE
    MANAGER_ID like concat(#{currentUser},',%')
    or
    MANAGER_ID like concat('%,',#{currentUser},',%')
  </select>

  <select id="selManagerByDept" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
    select *
    from book_manager
    WHERE
    MANAGE_DEPT_ID like concat(#{deptId},',%')
    or
    MANAGE_DEPT_ID like concat('%,',#{deptId},',%')
  </select>
</mapper>