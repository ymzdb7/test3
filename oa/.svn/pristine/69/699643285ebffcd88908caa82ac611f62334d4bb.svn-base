 package com.xoa.model.meet;
 
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
 
 public class MeetingTopicExample
 {
   protected String orderByClause;
   protected boolean distinct;
   protected List<Criteria> oredCriteria;
 
   public MeetingTopicExample()
   {
     this.oredCriteria = new ArrayList();
   }
 
   public void setOrderByClause(String orderByClause)
   {
     this.orderByClause = orderByClause;
   }
 
   public String getOrderByClause()
   {
     return this.orderByClause;
   }
 
   public void setDistinct(boolean distinct)
   {
     this.distinct = distinct;
   }
 
   public boolean isDistinct()
   {
     return this.distinct;
   }
 
   public List<Criteria> getOredCriteria()
   {
     return this.oredCriteria;
   }
 
   public void or(Criteria criteria)
   {
     this.oredCriteria.add(criteria);
   }
 
   public Criteria or()
   {
     Criteria criteria = createCriteriaInternal();
     this.oredCriteria.add(criteria);
     return criteria;
   }
 
   public Criteria createCriteria()
   {
     Criteria criteria = createCriteriaInternal();
     if (this.oredCriteria.size() == 0) {
       this.oredCriteria.add(criteria);
     }
     return criteria;
   }
 
   protected Criteria createCriteriaInternal()
   {
     Criteria criteria = new Criteria();
     return criteria;
   }
 
   public void clear()
   {
     this.oredCriteria.clear();
     this.orderByClause = null;
     this.distinct = false;
   }
 
   public static class Criterion
   {
     private String condition;
     private Object value;
     private Object secondValue;
     private boolean noValue;
     private boolean singleValue;
     private boolean betweenValue;
     private boolean listValue;
     private String typeHandler;
 
     public String getCondition()
     {
       return this.condition;
     }
 
     public Object getValue() {
       return this.value;
     }
 
     public Object getSecondValue() {
       return this.secondValue;
     }
 
     public boolean isNoValue() {
       return this.noValue;
     }
 
     public boolean isSingleValue() {
       return this.singleValue;
     }
 
     public boolean isBetweenValue() {
       return this.betweenValue;
     }
 
     public boolean isListValue() {
       return this.listValue;
     }
 
     public String getTypeHandler() {
       return this.typeHandler;
     }
 
     protected Criterion(String condition)
     {
       this.condition = condition;
       this.typeHandler = null;
       this.noValue = true;
     }
 
     protected Criterion(String condition, Object value, String typeHandler)
     {
       this.condition = condition;
       this.value = value;
       this.typeHandler = typeHandler;
       if ((value instanceof List))
         this.listValue = true;
       else
         this.singleValue = true;
     }
 
     protected Criterion(String condition, Object value)
     {
       this(condition, value, null);
     }
 
     protected Criterion(String condition, Object value, Object secondValue, String typeHandler)
     {
       this.condition = condition;
       this.value = value;
       this.secondValue = secondValue;
       this.typeHandler = typeHandler;
       this.betweenValue = true;
     }
 
     protected Criterion(String condition, Object value, Object secondValue) {
       this(condition, value, secondValue, null);
     }
   }
 
   public static class Criteria extends MeetingTopicExample.GeneratedCriteria
   {
   }
 
   protected static abstract class GeneratedCriteria
   {
     protected List<MeetingTopicExample.Criterion> criteria;
 
     protected GeneratedCriteria()
     {
       this.criteria = new ArrayList();
     }
 
     public boolean isValid() {
       return this.criteria.size() > 0;
     }
 
     public List<MeetingTopicExample.Criterion> getAllCriteria() {
       return this.criteria;
     }
 
     public List<MeetingTopicExample.Criterion> getCriteria() {
       return this.criteria;
     }
 
     protected void addCriterion(String condition) {
       if (condition == null) {
         throw new RuntimeException("Value for condition cannot be null");
       }
       this.criteria.add(new MeetingTopicExample.Criterion(condition));
     }
 
     protected void addCriterion(String condition, Object value, String property) {
       if (value == null) {
         throw new RuntimeException("Value for " + property + " cannot be null");
       }
       this.criteria.add(new MeetingTopicExample.Criterion(condition, value));
     }
 
     protected void addCriterion(String condition, Object value1, Object value2, String property) {
       if ((value1 == null) || (value2 == null)) {
         throw new RuntimeException("Between values for " + property + " cannot be null");
       }
       this.criteria.add(new MeetingTopicExample.Criterion(condition, value1, value2));
     }
 
     public MeetingTopicExample.Criteria andSidIsNull() {
       addCriterion("SID is null");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andSidIsNotNull() {
       addCriterion("SID is not null");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andSidEqualTo(Integer value) {
       addCriterion("SID =", value, "sid");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andSidNotEqualTo(Integer value) {
       addCriterion("SID <>", value, "sid");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andSidGreaterThan(Integer value) {
       addCriterion("SID >", value, "sid");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andSidGreaterThanOrEqualTo(Integer value) {
       addCriterion("SID >=", value, "sid");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andSidLessThan(Integer value) {
       addCriterion("SID <", value, "sid");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andSidLessThanOrEqualTo(Integer value) {
       addCriterion("SID <=", value, "sid");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andSidIn(List<Integer> values) {
       addCriterion("SID in", values, "sid");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andSidNotIn(List<Integer> values) {
       addCriterion("SID not in", values, "sid");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andSidBetween(Integer value1, Integer value2) {
       addCriterion("SID between", value1, value2, "sid");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andSidNotBetween(Integer value1, Integer value2) {
       addCriterion("SID not between", value1, value2, "sid");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeIsNull() {
       addCriterion("CR_TIME is null");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeIsNotNull() {
       addCriterion("CR_TIME is not null");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeEqualTo(Date value) {
       addCriterion("CR_TIME =", value, "crTime");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeNotEqualTo(Date value) {
       addCriterion("CR_TIME <>", value, "crTime");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeGreaterThan(Date value) {
       addCriterion("CR_TIME >", value, "crTime");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeGreaterThanOrEqualTo(Date value) {
       addCriterion("CR_TIME >=", value, "crTime");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeLessThan(Date value) {
       addCriterion("CR_TIME <", value, "crTime");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeLessThanOrEqualTo(Date value) {
       addCriterion("CR_TIME <=", value, "crTime");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeIn(List<Date> values) {
       addCriterion("CR_TIME in", values, "crTime");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeNotIn(List<Date> values) {
       addCriterion("CR_TIME not in", values, "crTime");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeBetween(Date value1, Date value2) {
       addCriterion("CR_TIME between", value1, value2, "crTime");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andCrTimeNotBetween(Date value1, Date value2) {
       addCriterion("CR_TIME not between", value1, value2, "crTime");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdIsNull() {
       addCriterion("USER_ID is null");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdIsNotNull() {
       addCriterion("USER_ID is not null");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdEqualTo(Integer value) {
       addCriterion("USER_ID =", value, "userId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdNotEqualTo(Integer value) {
       addCriterion("USER_ID <>", value, "userId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdGreaterThan(Integer value) {
       addCriterion("USER_ID >", value, "userId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
       addCriterion("USER_ID >=", value, "userId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdLessThan(Integer value) {
       addCriterion("USER_ID <", value, "userId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdLessThanOrEqualTo(Integer value) {
       addCriterion("USER_ID <=", value, "userId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdIn(List<Integer> values) {
       addCriterion("USER_ID in", values, "userId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdNotIn(List<Integer> values) {
       addCriterion("USER_ID not in", values, "userId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdBetween(Integer value1, Integer value2) {
       addCriterion("USER_ID between", value1, value2, "userId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andUserIdNotBetween(Integer value1, Integer value2) {
       addCriterion("USER_ID not between", value1, value2, "userId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdIsNull() {
       addCriterion("MEETING_ID is null");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdIsNotNull() {
       addCriterion("MEETING_ID is not null");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdEqualTo(Integer value) {
       addCriterion("MEETING_ID =", value, "meetingId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdNotEqualTo(Integer value) {
       addCriterion("MEETING_ID <>", value, "meetingId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdGreaterThan(Integer value) {
       addCriterion("MEETING_ID >", value, "meetingId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdGreaterThanOrEqualTo(Integer value) {
       addCriterion("MEETING_ID >=", value, "meetingId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdLessThan(Integer value) {
       addCriterion("MEETING_ID <", value, "meetingId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdLessThanOrEqualTo(Integer value) {
       addCriterion("MEETING_ID <=", value, "meetingId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdIn(List<Integer> values) {
       addCriterion("MEETING_ID in", values, "meetingId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdNotIn(List<Integer> values) {
       addCriterion("MEETING_ID not in", values, "meetingId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdBetween(Integer value1, Integer value2) {
       addCriterion("MEETING_ID between", value1, value2, "meetingId");
       return (MeetingTopicExample.Criteria)this;
     }
 
     public MeetingTopicExample.Criteria andMeetingIdNotBetween(Integer value1, Integer value2) {
       addCriterion("MEETING_ID not between", value1, value2, "meetingId");
       return (MeetingTopicExample.Criteria)this;
     }
   }
 }

