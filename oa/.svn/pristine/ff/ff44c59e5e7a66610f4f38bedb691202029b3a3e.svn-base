<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.edu.eduYear.EduYearMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.edu.eduYear.EduYear" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="YEAR_ID" property="yearId" jdbcType="INTEGER" />
    <result column="YEAR_NAME" property="yearName" jdbcType="VARCHAR" />
    <result column="YEAR_CODE" property="yearCode" jdbcType="VARCHAR" />
    <result column="SCHOOL_YEAR" property="schoolYear" jdbcType="VARCHAR" />
    <result column="DEFAULT_SCHOOL_YEAR" property="defaultSchoolYear" jdbcType="VARCHAR" />
    <result column="ENABLED" property="enabled" jdbcType="VARCHAR" />
    <result column="POSITION" property="position" jdbcType="VARCHAR" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="DATE" />
    <result column="NOTE1" property="note1" jdbcType="VARCHAR" />
    <result column="NOTE2" property="note2" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.edu.eduYear.EduYear" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="NOTE" property="note" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    YEAR_ID, YEAR_NAME, YEAR_CODE, SCHOOL_YEAR, DEFAULT_SCHOOL_YEAR, ENABLED, POSITION, 
    CREATE_USER, CREATE_TIME, UPDATE_TIME, NOTE1, NOTE2
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    NOTE
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.edu.eduYear.EduYearExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from edu_year
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.edu.eduYear.EduYearExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from edu_year
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from edu_year
    where YEAR_ID = #{yearId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from edu_year
    where YEAR_ID = #{yearId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.edu.eduYear.EduYearExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from edu_year
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.edu.eduYear.EduYear" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into edu_year (YEAR_ID, YEAR_NAME, YEAR_CODE, 
      SCHOOL_YEAR, DEFAULT_SCHOOL_YEAR, ENABLED, 
      POSITION, CREATE_USER, CREATE_TIME, 
      UPDATE_TIME, NOTE1, NOTE2, 
      NOTE)
    values (#{yearId,jdbcType=INTEGER}, #{yearName,jdbcType=VARCHAR}, #{yearCode,jdbcType=VARCHAR}, 
      #{schoolYear,jdbcType=VARCHAR}, #{defaultSchoolYear,jdbcType=VARCHAR}, #{enabled,jdbcType=VARCHAR}, 
      #{position,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, 
      #{updateTime,jdbcType=DATE}, #{note1,jdbcType=VARCHAR}, #{note2,jdbcType=VARCHAR}, 
      #{note,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.edu.eduYear.EduYear" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into edu_year
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="yearId != null" >
        YEAR_ID,
      </if>
      <if test="yearName != null" >
        YEAR_NAME,
      </if>
      <if test="yearCode != null" >
        YEAR_CODE,
      </if>
      <if test="schoolYear != null" >
        SCHOOL_YEAR,
      </if>
      <if test="defaultSchoolYear != null" >
        DEFAULT_SCHOOL_YEAR,
      </if>
      <if test="enabled != null" >
        ENABLED,
      </if>
      <if test="position != null" >
        POSITION,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="note1 != null" >
        NOTE1,
      </if>
      <if test="note2 != null" >
        NOTE2,
      </if>
      <if test="note != null" >
        NOTE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="yearId != null" >
        #{yearId,jdbcType=INTEGER},
      </if>
      <if test="yearName != null" >
        #{yearName,jdbcType=VARCHAR},
      </if>
      <if test="yearCode != null" >
        #{yearCode,jdbcType=VARCHAR},
      </if>
      <if test="schoolYear != null" >
        #{schoolYear,jdbcType=VARCHAR},
      </if>
      <if test="defaultSchoolYear != null" >
        #{defaultSchoolYear,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="note1 != null" >
        #{note1,jdbcType=VARCHAR},
      </if>
      <if test="note2 != null" >
        #{note2,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.edu.eduYear.EduYearExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from edu_year
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_year
    <set >
      <if test="record.yearId != null" >
        YEAR_ID = #{record.yearId,jdbcType=INTEGER},
      </if>
      <if test="record.yearName != null" >
        YEAR_NAME = #{record.yearName,jdbcType=VARCHAR},
      </if>
      <if test="record.yearCode != null" >
        YEAR_CODE = #{record.yearCode,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolYear != null" >
        SCHOOL_YEAR = #{record.schoolYear,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultSchoolYear != null" >
        DEFAULT_SCHOOL_YEAR = #{record.defaultSchoolYear,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null" >
        ENABLED = #{record.enabled,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null" >
        POSITION = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.note1 != null" >
        NOTE1 = #{record.note1,jdbcType=VARCHAR},
      </if>
      <if test="record.note2 != null" >
        NOTE2 = #{record.note2,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        NOTE = #{record.note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_year
    set YEAR_ID = #{record.yearId,jdbcType=INTEGER},
      YEAR_NAME = #{record.yearName,jdbcType=VARCHAR},
      YEAR_CODE = #{record.yearCode,jdbcType=VARCHAR},
      SCHOOL_YEAR = #{record.schoolYear,jdbcType=VARCHAR},
      DEFAULT_SCHOOL_YEAR = #{record.defaultSchoolYear,jdbcType=VARCHAR},
      ENABLED = #{record.enabled,jdbcType=VARCHAR},
      POSITION = #{record.position,jdbcType=VARCHAR},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      NOTE1 = #{record.note1,jdbcType=VARCHAR},
      NOTE2 = #{record.note2,jdbcType=VARCHAR},
      NOTE = #{record.note,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_year
    set YEAR_ID = #{record.yearId,jdbcType=INTEGER},
      YEAR_NAME = #{record.yearName,jdbcType=VARCHAR},
      YEAR_CODE = #{record.yearCode,jdbcType=VARCHAR},
      SCHOOL_YEAR = #{record.schoolYear,jdbcType=VARCHAR},
      DEFAULT_SCHOOL_YEAR = #{record.defaultSchoolYear,jdbcType=VARCHAR},
      ENABLED = #{record.enabled,jdbcType=VARCHAR},
      POSITION = #{record.position,jdbcType=VARCHAR},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      NOTE1 = #{record.note1,jdbcType=VARCHAR},
      NOTE2 = #{record.note2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.edu.eduYear.EduYear" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_year
    <set >
      <if test="yearName != null" >
        YEAR_NAME = #{yearName,jdbcType=VARCHAR},
      </if>
      <if test="yearCode != null" >
        YEAR_CODE = #{yearCode,jdbcType=VARCHAR},
      </if>
      <if test="schoolYear != null" >
        SCHOOL_YEAR = #{schoolYear,jdbcType=VARCHAR},
      </if>
      <if test="defaultSchoolYear != null" >
        DEFAULT_SCHOOL_YEAR = #{defaultSchoolYear,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        ENABLED = #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        POSITION = #{position,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=DATE},
      </if>
      <if test="note1 != null" >
        NOTE1 = #{note1,jdbcType=VARCHAR},
      </if>
      <if test="note2 != null" >
        NOTE2 = #{note2,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        NOTE = #{note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where YEAR_ID = #{yearId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.edu.eduYear.EduYear" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_year
    set YEAR_NAME = #{yearName,jdbcType=VARCHAR},
      YEAR_CODE = #{yearCode,jdbcType=VARCHAR},
      SCHOOL_YEAR = #{schoolYear,jdbcType=VARCHAR},
      DEFAULT_SCHOOL_YEAR = #{defaultSchoolYear,jdbcType=VARCHAR},
      ENABLED = #{enabled,jdbcType=VARCHAR},
      POSITION = #{position,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      NOTE1 = #{note1,jdbcType=VARCHAR},
      NOTE2 = #{note2,jdbcType=VARCHAR},
      NOTE = #{note,jdbcType=LONGVARCHAR}
    where YEAR_ID = #{yearId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.edu.eduYear.EduYear" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_year
    set YEAR_NAME = #{yearName,jdbcType=VARCHAR},
      YEAR_CODE = #{yearCode,jdbcType=VARCHAR},
      SCHOOL_YEAR = #{schoolYear,jdbcType=VARCHAR},
      DEFAULT_SCHOOL_YEAR = #{defaultSchoolYear,jdbcType=VARCHAR},
      ENABLED = #{enabled,jdbcType=VARCHAR},
      POSITION = #{position,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      NOTE1 = #{note1,jdbcType=VARCHAR},
      NOTE2 = #{note2,jdbcType=VARCHAR}
    where YEAR_ID = #{yearId,jdbcType=INTEGER}
  </update>
  <select id="selectList" parameterType="map" resultMap="ResultMapWithBLOBs">
    SELECT * FROM edu_year
    WHERE 1=1
    <if test="eduYear.yearName != null and eduYear.yearName !=''" >
        AND YEAR_NAME = #{eduYear.yearName,jdbcType=VARCHAR}
      </if>
      <if test="eduYear.yearCode != null and eduYear.yearCode !=''" >
        AND YEAR_CODE = #{eduYear.yearCode,jdbcType=VARCHAR}
      </if>
      <if test="eduYear.schoolYear != null and eduYear.schoolYear !=''" >
        AND SCHOOL_YEAR = #{eduYear.schoolYear,jdbcType=VARCHAR}
      </if>
      <if test="eduYear.defaultSchoolYear != null and eduYear.defaultSchoolYear !=''" >
        AND DEFAULT_SCHOOL_YEAR = #{eduYear.defaultSchoolYear,jdbcType=VARCHAR}
      </if>
      <if test="eduYear.enabled != null and eduYear.enabled !=''" >
        AND ENABLED = #{eduYear.enabled,jdbcType=VARCHAR}
      </if>
      <if test="eduYear.position != null and eduYear.position !=''" >
        AND POSITION = #{eduYear.position,jdbcType=VARCHAR}
      </if>
      <if test="eduYear.createUser != null and eduYear.createUser !=''" >
        AND CREATE_USER = #{eduYear.createUser,jdbcType=VARCHAR}
      </if>
      <if test="eduYear.createTime != null and eduYear.createTime !=''" >
        AND CREATE_TIME = #{eduYear.createTime,jdbcType=DATE}
      </if>
      <if test="eduYear.updateTime != null and eduYear.updateTime !=''" >
        AND UPDATE_TIME = #{eduYear.updateTime,jdbcType=DATE}
      </if>
      <if test="eduYear.note1 != null and eduYear.note1 !=''" >
        AND NOTE1 = #{eduYear.note1,jdbcType=VARCHAR}
      </if>
      <if test="eduYear.note2 != null and eduYear.note2 !=''" >
        AND NOTE2 = #{eduYear.note2,jdbcType=VARCHAR}
      </if>
      <if test="eduYear.note != null and eduYear.note !=''" >
        AND NOTE = #{eduYear.note,jdbcType=LONGVARCHAR}
      </if>

  </select>
  <select id="selectCount" resultType="java.lang.Integer" parameterType="com.xoa.model.edu.eduYear.EduYear">
    SELECT COUNT(*) FROM edu_year
    WHERE 1=1
    <if test="yearName != null and yearName !=''" >
      AND YEAR_NAME = #{yearName,jdbcType=VARCHAR}
    </if>
    <if test="yearCode != null and yearCode !=''" >
      AND YEAR_CODE = #{yearCode,jdbcType=VARCHAR}
    </if>
    <if test="schoolYear != null and schoolYear !=''" >
      AND SCHOOL_YEAR = #{schoolYear,jdbcType=VARCHAR}
    </if>
    <if test="defaultSchoolYear != null and defaultSchoolYear !=''" >
      AND DEFAULT_SCHOOL_YEAR = #{defaultSchoolYear,jdbcType=VARCHAR}
    </if>
    <if test="enabled != null and enabled !=''" >
      AND ENABLED = #{enabled,jdbcType=VARCHAR}
    </if>
    <if test="position != null and position !=''" >
      AND POSITION = #{position,jdbcType=VARCHAR}
    </if>
    <if test="createUser != null and createUser !=''" >
      AND CREATE_USER = #{createUser,jdbcType=VARCHAR}
    </if>
    <if test="createTime != null and createTime !=''" >
      AND CREATE_TIME = #{createTime,jdbcType=DATE}
    </if>
    <if test="updateTime != null and updateTime !=''" >
      AND UPDATE_TIME = #{updateTime,jdbcType=DATE}
    </if>
    <if test="note1 != null and note1 !=''" >
      AND NOTE1 = #{note1,jdbcType=VARCHAR}
    </if>
    <if test="note2 != null and note2 !=''" >
      AND NOTE2 = #{note2,jdbcType=VARCHAR}
    </if>
    <if test="note != null and note !=''" >
      AND NOTE = #{note,jdbcType=LONGVARCHAR}
    </if>

  </select>
   <select id="selectBySchoolYear" resultMap="ResultMapWithBLOBs">
      SELECT * FROM edu_year WHERE SCHOOL_YEAR = #{schoolYear}
   </select>
</mapper>