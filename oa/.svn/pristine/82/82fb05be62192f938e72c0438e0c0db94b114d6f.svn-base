package com.xoa.dao.address;

import com.xoa.model.addressGroup.AddressGroup;
import com.xoa.model.addressGroup.AddressGroupExample;
import com.xoa.model.addressGroup.AddressGroupWithBLOBs;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.annotations.Param;

public abstract interface AddressGroupMapper {
	public abstract int countByExample(
			AddressGroupExample paramAddressGroupExample);

	public abstract int deleteByExample(
			AddressGroupExample paramAddressGroupExample);

	public abstract int deleteByPrimaryKey(Integer paramInteger);

	public abstract int insert(AddressGroupWithBLOBs paramAddressGroupWithBLOBs);

	public abstract int insertSelective(
			AddressGroupWithBLOBs paramAddressGroupWithBLOBs);

	public abstract List<AddressGroupWithBLOBs> selectByExampleWithBLOBs(
			AddressGroupExample paramAddressGroupExample);

	public abstract List<AddressGroup> selectByExample(
			AddressGroupExample paramAddressGroupExample);

	public abstract AddressGroupWithBLOBs selectByPrimaryKey(
			Integer paramInteger);

	public abstract int updateByExampleSelective(
			@Param("record") AddressGroupWithBLOBs paramAddressGroupWithBLOBs,
			@Param("example") AddressGroupExample paramAddressGroupExample);

	public abstract int updateByExampleWithBLOBs(
			@Param("record") AddressGroupWithBLOBs paramAddressGroupWithBLOBs,
			@Param("example") AddressGroupExample paramAddressGroupExample);

	public abstract int updateByExample(
			@Param("record") AddressGroup paramAddressGroup,
			@Param("example") AddressGroupExample paramAddressGroupExample);

	public abstract int updateByPrimaryKeySelective(
			AddressGroupWithBLOBs paramAddressGroupWithBLOBs);

	public abstract int updateByPrimaryKeyWithBLOBs(
			AddressGroupWithBLOBs paramAddressGroupWithBLOBs);

	public abstract int updateByPrimaryKey(AddressGroup paramAddressGroup);

	public abstract List<AddressGroup> selectGroups();

	public abstract List<AddressGroup> selectGroupsByName(Map paramMap);

	public abstract List<AddressGroup> getGroups(Map paramMap);

	public abstract List<AddressGroup> getAllGroupsMap();

	public abstract AddressGroup selectGroup(AddressGroup paramAddressGroup);

	public abstract List<AddressGroupWithBLOBs> selectPublicGroup(Map paramMap);

	public abstract AddressGroupWithBLOBs selectPublicGroupInfo(
			Integer paramInteger);

	public abstract List<AddressGroupWithBLOBs> selectAllAddressGroup(
			Map<String, Object> paramMap);
}
