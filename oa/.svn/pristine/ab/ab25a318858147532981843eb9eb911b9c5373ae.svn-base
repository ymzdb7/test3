<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xoa.dao.edu.eduTerm.EduTermMapper">
  <resultMap id="BaseResultMap" type="com.xoa.model.edu.eduTerm.EduTerm">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="TERM_ID" jdbcType="INTEGER" property="termId" />
    <result column="TERM_NAME" jdbcType="VARCHAR" property="termName" />
    <result column="TERM_CODE" jdbcType="VARCHAR" property="termCode" />
    <result column="TERM_YEAR" jdbcType="VARCHAR" property="termYear" />
    <result column="DEFAULT_TERM" jdbcType="VARCHAR" property="defaultTerm" />
    <result column="WHICH_TERM" jdbcType="VARCHAR" property="whichTerm" />
    <result column="START_TIME" jdbcType="DATE" property="startTime" />
    <result column="END_TIME" jdbcType="DATE" property="endTime" />
    <result column="CLASS_DAY" jdbcType="VARCHAR" property="classDay" />
    <result column="ACTIVATE" jdbcType="VARCHAR" property="activate" />
    <result column="POSITION" jdbcType="VARCHAR" property="position" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="CREATE_TIME" jdbcType="DATE" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="DATE" property="updateTime" />
    <result column="REMARK1" jdbcType="VARCHAR" property="remark1" />
    <result column="REMARK2" jdbcType="VARCHAR" property="remark2" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xoa.model.edu.eduTerm.EduTerm">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="REMARK" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    TERM_ID, TERM_NAME, TERM_CODE, TERM_YEAR, DEFAULT_TERM, WHICH_TERM, START_TIME, END_TIME, 
    CLASS_DAY, ACTIVATE, POSITION, CREATE_USER, CREATE_TIME, UPDATE_TIME, REMARK1, REMARK2
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    REMARK
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xoa.model.edu.eduTerm.EduTermExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from edu_term
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xoa.model.edu.eduTerm.EduTermExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from edu_term
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from edu_term
    where TERM_ID = #{termId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from edu_term
    where TERM_ID = #{termId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.edu.eduTerm.EduTermExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from edu_term
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.edu.eduTerm.EduTerm">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into edu_term (TERM_ID, TERM_NAME, TERM_CODE, 
      TERM_YEAR, DEFAULT_TERM, WHICH_TERM, 
      START_TIME, END_TIME, CLASS_DAY, 
      ACTIVATE, POSITION, CREATE_USER, 
      CREATE_TIME, UPDATE_TIME, REMARK1, 
      REMARK2, REMARK)
    values (#{termId,jdbcType=INTEGER}, #{termName,jdbcType=VARCHAR}, #{termCode,jdbcType=VARCHAR}, 
      #{termYear,jdbcType=VARCHAR}, #{defaultTerm,jdbcType=VARCHAR}, #{whichTerm,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=DATE}, #{endTime,jdbcType=DATE}, #{classDay,jdbcType=VARCHAR}, 
      #{activate,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, #{remark1,jdbcType=VARCHAR}, 
      #{remark2,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.edu.eduTerm.EduTerm">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into edu_term
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="termId != null">
        TERM_ID,
      </if>
      <if test="termName != null">
        TERM_NAME,
      </if>
      <if test="termCode != null">
        TERM_CODE,
      </if>
      <if test="termYear != null">
        TERM_YEAR,
      </if>
      <if test="defaultTerm != null">
        DEFAULT_TERM,
      </if>
      <if test="whichTerm != null">
        WHICH_TERM,
      </if>
      <if test="startTime != null">
        START_TIME,
      </if>
      <if test="endTime != null">
        END_TIME,
      </if>
      <if test="classDay != null">
        CLASS_DAY,
      </if>
      <if test="activate != null">
        ACTIVATE,
      </if>
      <if test="position != null">
        POSITION,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="remark1 != null">
        REMARK1,
      </if>
      <if test="remark2 != null">
        REMARK2,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="termId != null">
        #{termId,jdbcType=INTEGER},
      </if>
      <if test="termName != null">
        #{termName,jdbcType=VARCHAR},
      </if>
      <if test="termCode != null">
        #{termCode,jdbcType=VARCHAR},
      </if>
      <if test="termYear != null">
        #{termYear,jdbcType=VARCHAR},
      </if>
      <if test="defaultTerm != null">
        #{defaultTerm,jdbcType=VARCHAR},
      </if>
      <if test="whichTerm != null">
        #{whichTerm,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=DATE},
      </if>
      <if test="classDay != null">
        #{classDay,jdbcType=VARCHAR},
      </if>
      <if test="activate != null">
        #{activate,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="remark1 != null">
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.edu.eduTerm.EduTermExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from edu_term
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_term
    <set>
      <if test="record.termId != null">
        TERM_ID = #{record.termId,jdbcType=INTEGER},
      </if>
      <if test="record.termName != null">
        TERM_NAME = #{record.termName,jdbcType=VARCHAR},
      </if>
      <if test="record.termCode != null">
        TERM_CODE = #{record.termCode,jdbcType=VARCHAR},
      </if>
      <if test="record.termYear != null">
        TERM_YEAR = #{record.termYear,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultTerm != null">
        DEFAULT_TERM = #{record.defaultTerm,jdbcType=VARCHAR},
      </if>
      <if test="record.whichTerm != null">
        WHICH_TERM = #{record.whichTerm,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        START_TIME = #{record.startTime,jdbcType=DATE},
      </if>
      <if test="record.endTime != null">
        END_TIME = #{record.endTime,jdbcType=DATE},
      </if>
      <if test="record.classDay != null">
        CLASS_DAY = #{record.classDay,jdbcType=VARCHAR},
      </if>
      <if test="record.activate != null">
        ACTIVATE = #{record.activate,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        POSITION = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.remark1 != null">
        REMARK1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null">
        REMARK2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_term
    set TERM_ID = #{record.termId,jdbcType=INTEGER},
      TERM_NAME = #{record.termName,jdbcType=VARCHAR},
      TERM_CODE = #{record.termCode,jdbcType=VARCHAR},
      TERM_YEAR = #{record.termYear,jdbcType=VARCHAR},
      DEFAULT_TERM = #{record.defaultTerm,jdbcType=VARCHAR},
      WHICH_TERM = #{record.whichTerm,jdbcType=VARCHAR},
      START_TIME = #{record.startTime,jdbcType=DATE},
      END_TIME = #{record.endTime,jdbcType=DATE},
      CLASS_DAY = #{record.classDay,jdbcType=VARCHAR},
      ACTIVATE = #{record.activate,jdbcType=VARCHAR},
      POSITION = #{record.position,jdbcType=VARCHAR},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      REMARK1 = #{record.remark1,jdbcType=VARCHAR},
      REMARK2 = #{record.remark2,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_term
    set TERM_ID = #{record.termId,jdbcType=INTEGER},
      TERM_NAME = #{record.termName,jdbcType=VARCHAR},
      TERM_CODE = #{record.termCode,jdbcType=VARCHAR},
      TERM_YEAR = #{record.termYear,jdbcType=VARCHAR},
      DEFAULT_TERM = #{record.defaultTerm,jdbcType=VARCHAR},
      WHICH_TERM = #{record.whichTerm,jdbcType=VARCHAR},
      START_TIME = #{record.startTime,jdbcType=DATE},
      END_TIME = #{record.endTime,jdbcType=DATE},
      CLASS_DAY = #{record.classDay,jdbcType=VARCHAR},
      ACTIVATE = #{record.activate,jdbcType=VARCHAR},
      POSITION = #{record.position,jdbcType=VARCHAR},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      REMARK1 = #{record.remark1,jdbcType=VARCHAR},
      REMARK2 = #{record.remark2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.edu.eduTerm.EduTerm">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_term
    <set>
      <if test="termName != null">
        TERM_NAME = #{termName,jdbcType=VARCHAR},
      </if>
      <if test="termCode != null">
        TERM_CODE = #{termCode,jdbcType=VARCHAR},
      </if>
      <if test="termYear != null">
        TERM_YEAR = #{termYear,jdbcType=VARCHAR},
      </if>
      <if test="defaultTerm != null">
        DEFAULT_TERM = #{defaultTerm,jdbcType=VARCHAR},
      </if>
      <if test="whichTerm != null">
        WHICH_TERM = #{whichTerm,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        START_TIME = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        END_TIME = #{endTime,jdbcType=DATE},
      </if>
      <if test="classDay != null">
        CLASS_DAY = #{classDay,jdbcType=VARCHAR},
      </if>
      <if test="activate != null">
        ACTIVATE = #{activate,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        POSITION = #{position,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=DATE},
      </if>
      <if test="remark1 != null">
        REMARK1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        REMARK2 = #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where TERM_ID = #{termId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.edu.eduTerm.EduTerm">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_term
    set TERM_NAME = #{termName,jdbcType=VARCHAR},
      TERM_CODE = #{termCode,jdbcType=VARCHAR},
      TERM_YEAR = #{termYear,jdbcType=VARCHAR},
      DEFAULT_TERM = #{defaultTerm,jdbcType=VARCHAR},
      WHICH_TERM = #{whichTerm,jdbcType=VARCHAR},
      START_TIME = #{startTime,jdbcType=DATE},
      END_TIME = #{endTime,jdbcType=DATE},
      CLASS_DAY = #{classDay,jdbcType=VARCHAR},
      ACTIVATE = #{activate,jdbcType=VARCHAR},
      POSITION = #{position,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      REMARK1 = #{remark1,jdbcType=VARCHAR},
      REMARK2 = #{remark2,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=LONGVARCHAR}
    where TERM_ID = #{termId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.edu.eduTerm.EduTerm">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_term
    set TERM_NAME = #{termName,jdbcType=VARCHAR},
      TERM_CODE = #{termCode,jdbcType=VARCHAR},
      TERM_YEAR = #{termYear,jdbcType=VARCHAR},
      DEFAULT_TERM = #{defaultTerm,jdbcType=VARCHAR},
      WHICH_TERM = #{whichTerm,jdbcType=VARCHAR},
      START_TIME = #{startTime,jdbcType=DATE},
      END_TIME = #{endTime,jdbcType=DATE},
      CLASS_DAY = #{classDay,jdbcType=VARCHAR},
      ACTIVATE = #{activate,jdbcType=VARCHAR},
      POSITION = #{position,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      REMARK1 = #{remark1,jdbcType=VARCHAR},
      REMARK2 = #{remark2,jdbcType=VARCHAR}
    where TERM_ID = #{termId,jdbcType=INTEGER}
  </update>
  <select id="selectList"  parameterType="map" resultMap="ResultMapWithBLOBs">
    SELECT * FROM edu_term
    WHERE 1=1
    <if test="eduTerm.termName != null and eduTerm.termName !=''">
        AND TERM_NAME = #{eduTerm.termName,jdbcType=VARCHAR}
      </if>
      <if test="eduTerm.termCode != null and eduTerm.termCode !=''">
        AND TERM_CODE = #{eduTerm.termCode,jdbcType=VARCHAR}
      </if>
      <if test="eduTerm.termYear != null and eduTerm.termYear !=''">
        AND TERM_YEAR = #{eduTerm.termYear,jdbcType=VARCHAR}
      </if>
      <if test="eduTerm.defaultTerm != null and eduTerm.defaultTerm !=''">
        AND DEFAULT_TERM = #{eduTerm.defaultTerm,jdbcType=VARCHAR}
      </if>
      <if test="eduTerm.whichTerm != null and eduTerm.whichTerm !=''">
        AND WHICH_TERM = #{eduTerm.whichTerm,jdbcType=VARCHAR}
      </if>
      <if test="eduTerm.startTime != null and eduTerm.startTime !=''">
        AND START_TIME = #{eduTerm.startTime,jdbcType=DATE}
      </if>
      <if test="eduTerm.endTime != null and eduTerm.endTime !=''">
        AND END_TIME = #{eduTerm.endTime,jdbcType=DATE}
      </if>
      <if test="eduTerm.classDay != null and eduTerm.classDay !=''">
        AND CLASS_DAY = #{eduTerm.classDay,jdbcType=VARCHAR}
      </if>
      <if test="eduTerm.activate != null and eduTerm.activate !=''">
        AND ACTIVATE = #{eduTerm.activate,jdbcType=VARCHAR}
      </if>
      <if test="eduTerm.position != null and eduTerm.position !=''">
        AND POSITION = #{eduTerm.position,jdbcType=VARCHAR}
      </if>
      <if test="eduTerm.createUser != null and eduTerm.createUser !=''">
        AND CREATE_USER = #{eduTerm.createUser,jdbcType=VARCHAR}
      </if>
      <if test="eduTerm.createTime != null and eduTerm.createTime !=''">
        CREATE_TIME = #{eduTerm.createTime,jdbcType=DATE}
      </if>
      <if test="eduTerm.updateTime != null and eduTerm.updateTime !=''">
        AND UPDATE_TIME = #{eduTerm.updateTime,jdbcType=DATE}
      </if>
      <if test="eduTerm.remark1 != null and eduTerm.remark1 !=''">
        AND REMARK1 = #{eduTerm.remark1,jdbcType=VARCHAR}
      </if>
      <if test="eduTerm.remark2 != null and eduTerm.remark2 !=''">
        AND REMARK2 = #{eduTerm.remark2,jdbcType=VARCHAR}
      </if>
      <if test="eduTerm.remark != null and eduTerm.remark !=''">
        AND REMARK = #{eduTerm.remark,jdbcType=LONGVARCHAR}
      </if>

  </select>
  <select id="selectCount" resultType="java.lang.Integer" parameterType="com.xoa.model.edu.eduTerm.EduTerm">
    SELECT COUNT(*) FROM edu_term
    WHERE 1=1
    <if test="termName != null and termName !=''">
      AND TERM_NAME = #{termName,jdbcType=VARCHAR}
    </if>
    <if test="termCode != null and termCode !=''">
      AND TERM_CODE = #{termCode,jdbcType=VARCHAR}
    </if>
    <if test="termYear != null and termYear !=''">
      AND TERM_YEAR = #{termYear,jdbcType=VARCHAR}
    </if>
    <if test="defaultTerm != null and defaultTerm !=''">
      AND DEFAULT_TERM = #{defaultTerm,jdbcType=VARCHAR}
    </if>
    <if test="whichTerm != null and whichTerm !=''">
      AND WHICH_TERM = #{whichTerm,jdbcType=VARCHAR}
    </if>
    <if test="startTime != null and startTime !=''">
      AND START_TIME = #{startTime,jdbcType=DATE}
    </if>
    <if test="endTime != null and endTime !=''">
      AND END_TIME = #{endTime,jdbcType=DATE}
    </if>
    <if test="classDay != null and classDay !=''">
      AND CLASS_DAY = #{classDay,jdbcType=VARCHAR}
    </if>
    <if test="activate != null and activate !=''">
      AND ACTIVATE = #{activate,jdbcType=VARCHAR}
    </if>
    <if test="position != null and position !=''">
      AND POSITION = #{position,jdbcType=VARCHAR}
    </if>
    <if test="createUser != null and createUser !=''">
      AND CREATE_USER = #{createUser,jdbcType=VARCHAR}
    </if>
    <if test="createTime != null and createTime !=''">
      CREATE_TIME = #{createTime,jdbcType=DATE}
    </if>
    <if test="updateTime != null and updateTime !=''">
      AND UPDATE_TIME = #{updateTime,jdbcType=DATE}
    </if>
    <if test="remark1 != null and remark1 !=''">
      AND REMARK1 = #{remark1,jdbcType=VARCHAR}
    </if>
    <if test="remark2 != null and remark2 !=''">
      AND REMARK2 = #{remark2,jdbcType=VARCHAR}
    </if>
    <if test="remark != null and remark !=''">
      AND REMARK = #{remark,jdbcType=LONGVARCHAR}
    </if>

  </select>
</mapper>