<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.workPlan.PlanTypeMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.workPlan.PlanType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="TYPE_ID" property="typeId" jdbcType="INTEGER" />
    <result column="TYPE_NAME" property="typeName" jdbcType="VARCHAR" />
    <result column="TYPE_NO" property="typeNo" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    TYPE_ID, TYPE_NAME, TYPE_NO
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.workPlan.PlanTypeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from plan_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from plan_type
    where TYPE_ID = #{typeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.workPlan.PlanTypeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from plan_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.workPlan.PlanType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into plan_type (TYPE_ID, TYPE_NAME, TYPE_NO
      )
    values (#{typeId,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, #{typeNo,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.workPlan.PlanType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into plan_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        TYPE_ID,
      </if>
      <if test="typeName != null" >
        TYPE_NAME,
      </if>
      <if test="typeNo != null" >
        TYPE_NO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeNo != null" >
        #{typeNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.workPlan.PlanTypeExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from plan_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update plan_type
    <set >
      <if test="record.typeId != null" >
        TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.typeName != null" >
        TYPE_NAME = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.typeNo != null" >
        TYPE_NO = #{record.typeNo,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update plan_type
    set TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      TYPE_NAME = #{record.typeName,jdbcType=VARCHAR},
      TYPE_NO = #{record.typeNo,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.workPlan.PlanType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update plan_type
    <set >
      <if test="typeName != null" >
        TYPE_NAME = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeNo != null" >
        TYPE_NO = #{typeNo,jdbcType=INTEGER},
      </if>
    </set>
    where TYPE_ID = #{typeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.workPlan.PlanType" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update plan_type
    set TYPE_NAME = #{typeName,jdbcType=VARCHAR},
      TYPE_NO = #{typeNo,jdbcType=INTEGER}
    where TYPE_ID = #{typeId,jdbcType=INTEGER}
  </update>














  <insert id="insertPlanType" parameterType="com.xoa.model.workPlan.PlanType" >
    insert into plan_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        TYPE_ID,
      </if>
      <if test="typeName != null" >
        TYPE_NAME,
      </if>
      <if test="typeNo != null" >
        TYPE_NO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeNo != null" >
        #{typeNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <insert id="insertPlanType" useGeneratedKeys="true" keyProperty="typeId" parameterType="com.xoa.model.workPlan.PlanType" databaseId="oracle">
    <selectKey order="BEFORE" keyProperty="typeId" resultType="int">
      select PLAN_TYPE_TYPE_ID_SEQ.nextval as typeId from dual
    </selectKey>
    insert into plan_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
        TYPE_ID,
      <if test="typeName != null" >
        TYPE_NAME,
      </if>
      <if test="typeNo != null" >
        TYPE_NO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{typeId,jdbcType=INTEGER},
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeNo != null" >
        #{typeNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <insert id="insertPlanType" useGeneratedKeys="true" keyProperty="typeId" parameterType="com.xoa.model.workPlan.PlanType" databaseId="dm">
    <selectKey order="BEFORE" keyProperty="typeId" resultType="int">
      select PLAN_TYPE_TYPE_ID_SEQ.nextval as typeId from dual
    </selectKey>
    insert into plan_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      TYPE_ID,
      <if test="typeName != null" >
        TYPE_NAME,
      </if>
      <if test="typeNo != null" >
        TYPE_NO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{typeId,jdbcType=INTEGER},
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeNo != null" >
        #{typeNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updatePlanTypeById" parameterType="com.xoa.model.workPlan.PlanType" >
    update plan_type
    <set >
      <if test="typeName != null" >
        TYPE_NAME = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeNo != null" >
        TYPE_NO = #{typeNo,jdbcType=INTEGER},
      </if>
    </set>
    where TYPE_ID = #{typeId,jdbcType=INTEGER}
  </update>

  <delete id="deletePlanTypeById" parameterType="java.lang.Integer" >
    delete from plan_type
    where TYPE_ID = #{typeId,jdbcType=INTEGER}
  </delete>

  <select id="selAllPlanType" resultMap="BaseResultMap">
      SELECT * FROM  plan_type
  </select>

  <select id="selectPlanTypeById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from plan_type
    where TYPE_ID = #{typeId,jdbcType=INTEGER}
  </select>

</mapper>