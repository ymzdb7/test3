/*      */ package com.xoa.service.common.impl;
/*      */ 
/*      */ import com.ibatis.common.jdbc.ScriptRunner;
/*      */ import com.ibatis.common.resources.Resources;
/*      */ import com.xoa.dao.common.SysCodeMapper;
/*      */ import com.xoa.dao.common.SysParaMapper;
/*      */ import com.xoa.dao.strstatus.StrstatusMapper;
/*      */ import com.xoa.dao.users.OrgManageMapper;
/*      */ import com.xoa.dao.version.VersionMapper;
/*      */ import com.xoa.model.common.SysCode;
/*      */ import com.xoa.model.common.SysPara;
/*      */ import com.xoa.model.strstatus.Strstatus;
/*      */ import com.xoa.model.users.OrgManage;
/*      */ import com.xoa.model.version.Version;
/*      */ import com.xoa.service.common.SysCodeService;
/*      */ import com.xoa.service.users.OrgManageService;
import com.xoa.util.Constant;
/*      */ import com.xoa.util.DBPropertiesUtils;
/*      */ import com.xoa.util.ExcelUtil;
/*      */ import com.xoa.util.ToJson;
/*      */ import com.xoa.util.common.L;
/*      */ import com.xoa.util.common.log.FileUtils;
/*      */ import com.xoa.util.dataSource.Verification;
/*      */ import java.io.BufferedInputStream;
/*      */ import java.io.BufferedReader;
/*      */ import java.io.File;
/*      */ import java.io.FileInputStream;
/*      */ import java.io.IOException;
/*      */ import java.io.InputStream;
/*      */ import java.io.InputStreamReader;
/*      */ import java.io.OutputStream;
/*      */ import java.io.OutputStreamWriter;
/*      */ import java.net.URL;
/*      */ import java.sql.Connection;
/*      */ import java.sql.DriverManager;
/*      */ import java.sql.ResultSet;
/*      */ import java.sql.SQLException;
/*      */ import java.sql.Statement;
/*      */ import java.util.ArrayList;
/*      */ import java.util.Arrays;
/*      */ import java.util.HashMap;
/*      */ import java.util.Iterator;
/*      */ import java.util.List;
/*      */ import java.util.Map;
/*      */ import java.util.Properties;
/*      */ import java.util.ResourceBundle;
/*      */ import javax.annotation.Resource;
/*      */ import javax.servlet.ServletContext;
/*      */ import javax.servlet.http.HttpServletRequest;
/*      */ import javax.servlet.http.HttpServletResponse;
/*      */ import javax.servlet.http.HttpSession;
/*      */ import net.sf.json.JSONObject;
/*      */ import org.apache.commons.collections.map.HashedMap;
/*      */ import org.apache.log4j.Logger;
/*      */ import org.apache.poi.hssf.usermodel.HSSFSheet;
/*      */ import org.apache.poi.hssf.usermodel.HSSFWorkbook;
/*      */ import org.apache.poi.ss.usermodel.Cell;
/*      */ import org.apache.poi.ss.usermodel.Row;
/*      */ import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
/*      */ 
/*      */ @Service
/*      */ public class SysCodeServiceImpl
/*      */   implements SysCodeService
/*      */ {
/*   52 */   Logger logger = Logger.getLogger(SysCodeServiceImpl.class);
/*      */ 
/*      */   @Resource
/*      */   private OrgManageService orgManageService;
/*      */ 
/*      */   @Resource
/*      */   private VersionMapper versionMapper;
/*      */ 
/*      */   @Resource
/*      */   private StrstatusMapper strstatusMapper;
/*      */ 
/*      */   @Resource
/*      */   SysParaMapper sysParaMapper;
/*      */ 
/*      */   @Resource
/*      */   private SysCodeMapper sysCodeMapper;
/*      */ 
/*      */   @Resource
/*      */   private OrgManageMapper orgManageMapper;
/*      */ 
/*   74 */   @Transactional
/*      */   public ToJson editisCodeNoExits(SysCode sysCode, String oldCodeNo) { ToJson toJson = new ToJson(1, "error");
/*      */     try
/*      */     {
/*      */       List sysCodesList;
/*   79 */       if ((sysCode != null) && (("".equals(sysCode.getParentNo())) || (sysCode.getParentNo() == null))) {
/*   80 */         sysCodesList = this.sysCodeMapper.isSysCodeNoExits(sysCode);
/*      */       } else {
/*   82 */         if ((sysCode != null) && 
/*   83 */           (sysCode.getParentNo().equals("NOTIFY"))) {
/*   84 */           String singleNewsArr = this.sysParaMapper.selectNotifySingleNew();
/*   85 */           if (singleNewsArr.contains(oldCodeNo + "-")) {
/*   86 */             int oldPos = singleNewsArr.indexOf(oldCodeNo + "-");
/*   87 */             String headStr = singleNewsArr.substring(0, oldPos);
/*   88 */             String bodyStr = singleNewsArr.substring(oldPos, singleNewsArr.length());
/*   89 */             int bodyStartPos = bodyStr.indexOf(",");
/*   90 */             String tailStr = bodyStr.substring(bodyStartPos + 1, bodyStr.length());
/*   91 */             singleNewsArr = headStr.concat(tailStr);
/*      */           }
/*   93 */           String newSysPara = singleNewsArr.concat(sysCode.getCodeNo() + "-0,");
/*   94 */           SysPara sysPara = new SysPara();
/*   95 */           sysPara.setParaName("NOTIFY_AUDITING_SINGLE_NEW");
/*   96 */           sysPara.setParaValue(newSysPara);
/*   97 */           this.sysParaMapper.updateSysPara(sysPara);
/*      */         }
/*      */ 
/*  100 */         sysCodesList = this.sysCodeMapper.isChildCodeNoExits(sysCode);
/*      */       }
/*      */ 
/*  103 */       if ((sysCodesList != null) && (sysCodesList.size() == 1) && 
/*  104 */         (oldCodeNo != null))
/*      */       {
/*  106 */         String dbCodeNo = ((SysCode)sysCodesList.get(0)).getCodeNo();
/*      */ 
/*  108 */         if (oldCodeNo.equals(dbCodeNo)) {
/*  109 */           toJson.setFlag(1);
/*  110 */           toJson.setMsg("ok");
/*  111 */           return toJson;
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/*  117 */       if ((sysCodesList != null) && (sysCodesList.size() >= 1)) {
/*  118 */         toJson.setFlag(0);
/*  119 */         toJson.setMsg("ok");
/*      */       }
/*      */     } catch (Exception e) {
/*  122 */       toJson.setFlag(1);
/*  123 */       toJson.setMsg("err");
/*  124 */       L.e(new Object[] { "SysCodeServiceImpleditisCodeNoExits：" + e });
/*      */     }
/*      */ 
/*  129 */     return toJson;
/*      */   }
/*      */ 
/*      */   public ToJson<SysCode> getSysCode(String parentNo)
/*      */   {
/*  148 */     ToJson codeJson = new ToJson();
/*      */     try {
/*  150 */       List code = this.sysCodeMapper.getSysCode(parentNo);
/*  151 */       codeJson.setObj(code);
/*  152 */       codeJson.setFlag(0);
/*  153 */       codeJson.setMsg("ok");
/*      */     } catch (Exception e) {
/*  155 */       codeJson.setFlag(1);
/*  156 */       codeJson.setMsg("err");
/*      */     }
/*  158 */     return codeJson;
/*      */   }
/*      */ 
/*      */   public List<SysCode> getAllSysCode()
/*      */   {
/*  171 */     List list = this.sysCodeMapper.getAllSysCode();
/*  172 */     return list;
/*      */   }
/*      */ 
/*      */   public void update(SysCode sysCode)
/*      */   {
/*  201 */     this.sysCodeMapper.update(sysCode);
/*      */   }
/*      */ 
/*      */   public List<SysCode> getLogType()
/*      */   {
/*  209 */     String[] type = { "登录日志", "登录密码错误", "退出系统" };
/*  210 */     List sysCodeList = this.sysCodeMapper.getLogType("PARENT_NO");
/*  211 */     Iterator it = sysCodeList.iterator();
/*  212 */     while (it.hasNext()) {
/*  213 */       SysCode sysCode = (SysCode)it.next();
/*  214 */       if (Arrays.asList(type).contains(sysCode.getCodeName())) {
/*      */         continue;
/*      */       }
/*  217 */       it.remove();
/*      */     }
/*      */ 
/*  221 */     return sysCodeList;
/*      */   }
/*      */ 
/*      */   public String getLogNameByNo(String codeNo)
/*      */   {
/*  234 */     String logTypeName = this.sysCodeMapper.getLogNameByNo(codeNo);
/*      */ 
/*  236 */     return logTypeName;
/*      */   }
/*      */ 
/*      */   public void deleteSysCode(SysCode sysCode)
/*      */   {
/*  249 */     String codeByCodeId = this.sysCodeMapper.getCodeByCodeId(sysCode.getCodeId());
/*      */ 
/*  251 */     if ("".equals(codeByCodeId))
/*  252 */       this.sysCodeMapper.delete(sysCode);
/*      */     else
/*  254 */       this.sysCodeMapper.deleteChild(sysCode);
/*      */   }
/*      */ 
/*      */   public void addSysMainCode(SysCode sysCode)
/*      */   {
/*  271 */     sysCode.setCodeExt("");
/*  272 */     this.sysCodeMapper.addSysMainCode(sysCode);
/*      */   }
/*      */ 
/*      */   public Boolean isCodeOrderExits(SysCode sysCode)
/*      */   {
/*      */     List sysCodesList;
/*  289 */     if ((sysCode != null) && (("".equals(sysCode.getParentNo())) || (sysCode.getParentNo() == null)))
/*  290 */       sysCodesList = this.sysCodeMapper.isSysCodeOrderExits(sysCode);
/*      */     else {
/*  292 */       sysCodesList = this.sysCodeMapper.isChildCodeOrderExits(sysCode);
/*      */     }
/*      */ 
/*  297 */     if ((sysCodesList != null) && (sysCodesList.size() > 0)) {
/*  298 */       return Boolean.valueOf(true);
/*      */     }
/*      */ 
/*  301 */     return Boolean.valueOf(false);
/*      */   }
/*      */ 
/*      */   public Boolean isCodeNoExits(SysCode sysCode)
/*      */   {
/*      */     List sysCodesList;
/*  317 */     if ((sysCode != null) && (("".equals(sysCode.getParentNo())) || (sysCode.getParentNo() == null))) {
/*  318 */       sysCodesList = this.sysCodeMapper.isSysCodeNoExits(sysCode);
/*      */     }
/*      */     else
/*      */     {
/*  329 */       sysCodesList = this.sysCodeMapper.isChildCodeNoExits(sysCode);
/*      */     }
/*      */ 
/*  333 */     if ((sysCodesList != null) && (sysCodesList.size() > 0)) {
/*  334 */       return Boolean.valueOf(true);
/*      */     }
/*  336 */     return Boolean.valueOf(false);
/*      */   }
/*      */ 
/*      */   public Boolean iseditCodeNoExits(SysCode sysCode)
/*      */   {
/*      */     List<SysCode> sysCodesList;
/*  351 */     if ((sysCode != null) && (("".equals(sysCode.getParentNo())) || (sysCode.getParentNo() == null))) {
/*  352 */         sysCodesList = this.sysCodeMapper.iseditSysCodeNoExits(sysCode);
/*  353 */       if ((sysCodesList != null) && (sysCodesList.size() == 1)) {
/*  354 */         if ((((SysCode)sysCodesList.get(0)).getParentNo() != null) && (!((SysCode)sysCodesList.get(0)).getParentNo().equals(sysCode.getCodeNo())))
/*      */         {
/*  356 */           return Boolean.valueOf(true);
/*      */         }
/*  358 */         return Boolean.valueOf(false);
/*      */       }
/*      */     }
/*      */     else
/*      */     {
/*  363 */       sysCodesList = this.sysCodeMapper.isChildCodeNoExits(sysCode);
/*      */     }
/*      */ 
/*  367 */     if ((sysCodesList != null) && (sysCodesList.size() > 0)) {
/*  368 */       return Boolean.valueOf(true);
/*      */     }
/*  370 */     return Boolean.valueOf(false);
/*      */   }
/*      */ 
/*      */   public Boolean ChildisCodeNoExits(SysCode sysCode)
/*      */   {
/*  383 */     List childCodeNoExits = this.sysCodeMapper.isChildCodeNoExits(sysCode);
/*      */     boolean flag;
/*  384 */     if ((childCodeNoExits != null) && (childCodeNoExits.size() > 0))
/*  385 */       flag = true;
/*      */     else {
/*  387 */       flag = false;
/*      */     }
/*  389 */     return Boolean.valueOf(flag);
/*      */   }
/*      */ 
/*      */   public void addChildSysCode(SysCode sysCode)
/*      */   {
/*  403 */     Boolean codeNoExits = isCodeNoExits(sysCode);
/*  404 */     Boolean codeOrderExits = isCodeOrderExits(sysCode);
/*  405 */     if ((sysCode != null) && 
/*  406 */       (sysCode.getParentNo().equals("NOTIFY"))) {
/*  407 */       String singleNewsArr = this.sysParaMapper.selectNotifySingleNew();
/*  408 */       String newSysPara = singleNewsArr.concat(sysCode.getCodeNo() + "-0,");
/*  409 */       SysPara sysPara = new SysPara();
/*  410 */       sysPara.setParaName("NOTIFY_AUDITING_SINGLE_NEW");
/*  411 */       sysPara.setParaValue(newSysPara);
/*  412 */       this.sysParaMapper.updateSysPara(sysPara);
/*      */     }
/*      */ 
/*  416 */     if ((sysCode != null) && (sysCode.getParentNo() != null) && (!codeNoExits.booleanValue()) && (!codeOrderExits.booleanValue()))
/*      */     {
/*  418 */       sysCode.setCodeExt("");
/*  419 */       sysCode.setCodeFlag("1");
/*  420 */       this.sysCodeMapper.addSysChildCode(sysCode);
/*      */     }
/*      */   }
/*      */ 
/*      */   public List<SysCode> getChildSysCode(SysCode sysCode)
/*      */   {
/*  434 */     if ((sysCode != null) && (sysCode.getParentNo() != null)) {
/*  435 */       return this.sysCodeMapper.getSysCode(sysCode.getParentNo());
/*      */     }
/*      */ 
/*  438 */     return null;
/*      */   }
/*      */ 
/*      */   public SysCode getCodeByCodeNo(SysCode sysCode)
/*      */   {
/*  451 */     return this.sysCodeMapper.getCodeByCodeNo(sysCode);
/*      */   }
/*      */ 
/*      */   public ToJson<List<SysCode>> getErrSysCode()
/*      */   {
/*  457 */     List<SysCode> list = new ArrayList<SysCode>();
/*      */ 
/*  459 */     List<SysCode> errlist = new ArrayList<SysCode>();
/*  460 */     ToJson<List<SysCode>> json = new ToJson<List<SysCode>>();
/*      */     try
/*      */     {
/*  464 */       List<SysCode> mainCode = this.sysCodeMapper.getMainCode();
/*      */ 
/*  466 */       for (SysCode sysCode : mainCode) {
/*  467 */         list.add(sysCode);
/*  468 */         List<SysCode> childCode = this.sysCodeMapper.getChildCode(sysCode.getCodeNo());
/*      */ 
/*  470 */         for (SysCode sysCode1 : childCode) {
/*  471 */           list.add(sysCode1);
/*      */         }
/*      */       }
/*      */ 
/*  475 */       StringBuffer sb = new StringBuffer();
/*      */ 
/*  477 */       List<SysCode> allCode = this.sysCodeMapper.getAllCode();
/*  478 */       for (SysCode sysCode : list) {
/*  479 */         Integer codeId = sysCode.getCodeId();
/*  480 */         sb.append(",").append(codeId).append(",");
/*      */       }
/*      */ 
/*  483 */       for (int i = 0; i < allCode.size(); i++) {
/*  484 */         Integer id = ((SysCode)allCode.get(i)).getCodeId();
/*  485 */         if (!sb.toString().contains("," + id + ",")) {
/*  486 */           errlist.add(allCode.get(i));
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/*  491 */       json.setObject(errlist);
/*  492 */       json.setFlag(0);
/*  493 */       json.setMsg("ok");
/*      */     }
/*      */     catch (Exception e)
/*      */     {
/*  500 */       json.setFlag(1);
/*  501 */       json.setMsg("err");
/*      */     }
/*  503 */     return json;
/*      */   }
/*      */ 
/*      */   public ToJson<Object> recoverCode(HttpServletRequest request, String path)
/*      */   {
/*  516 */     String sqlType = Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse");
/*      */ 
/*  518 */     ToJson json = new ToJson();
/*  519 */     String username = (String)DBPropertiesUtils.getDbMsg(request).get("username");
/*  520 */     String password = (String)DBPropertiesUtils.getDbMsg(request).get("password");
/*  521 */     String host = (String)DBPropertiesUtils.getDbMsg(request).get("ip");
/*      */ 
/*  525 */     String realPath = request.getSession().getServletContext().getRealPath("/");
/*  526 */     String Topath = realPath + "\\ui\\lib";
/*  527 */     String loginCommand = new StringBuffer().append("/usr/share/mysql/bin/mysql -u").append(username).append(" -p").append(password).append(" -h").append(host).toString();
/*      */ 
/*  529 */     String switchCommand = new StringBuffer("use ").append(sqlType).toString();
/*      */ 
/*  531 */     String charsetCommand = new StringBuffer("set names utf8;").toString();
/*      */ 
/*  533 */     String importCommand = new StringBuffer("source ").append(path).toString();
/*      */ 
/*  535 */     String[] commands = { loginCommand, switchCommand, charsetCommand, importCommand };
/*      */     try {
/*  537 */       Runtime runtime = Runtime.getRuntime();
/*  538 */       Process process = runtime.exec(commands[0]);
/*      */ 
/*  541 */       OutputStream os = process.getOutputStream();
/*  542 */       OutputStreamWriter writer = new OutputStreamWriter(os);
/*      */ 
/*  544 */       writer.write(commands[1] + "\r\n");
/*  545 */       Thread.sleep(300L);
/*  546 */       writer.write(commands[2] + "\r\n");
/*  547 */       Thread.sleep(300L);
/*  548 */       writer.write(commands[3]);
/*  549 */       Thread.sleep(300L);
/*  550 */       json.setFlag(0);
/*  551 */       json.setMsg("ok");
/*  552 */       writer.flush();
/*  553 */       writer.close();
/*  554 */       os.close();
/*      */     }
/*      */     catch (IOException e)
/*      */     {
/*      */       File file;
/*  556 */       json.setFlag(1);
/*  557 */       json.setMsg("err");
/*  558 */       e.printStackTrace();
/*      */     }
/*      */     catch (InterruptedException e)
/*      */     {
/*      */       File file;
/*  560 */       e.printStackTrace();
/*      */     }
/*      */     finally
/*      */     {
/*      */       try
/*      */       { 
/*  564 */         File file = new File(path);
/*  565 */         file.delete();
/*      */       }
/*      */       catch (Exception e)
/*      */       {
/*      */       }
/*      */     }
/*      */ 
/*  572 */     return json;
/*      */   }
/*      */ 
/*      */   public void exportCode(HttpServletRequest request, HttpServletResponse response)
/*      */   {
/*  584 */     ResourceBundle rb = ResourceBundle.getBundle("jdbc-sql");
/*      */ 
/*  586 */     String sqlType = Constant.MYOA + (String)request.getSession().getAttribute("loginDateSouse");
/*      */ 
/*  589 */     String realPath = request.getSession().getServletContext().getRealPath("/");
/*  590 */     String username = (String)DBPropertiesUtils.getDbMsg(request).get("username");
/*  591 */     String password = (String)DBPropertiesUtils.getDbMsg(request).get("password");
/*  592 */     String host = (String)DBPropertiesUtils.getDbMsg(request).get("ip");
/*  593 */     String tablename = "sys_code";
/*  594 */     String exportPath = realPath;
/*  595 */     String fileName = "sys_code.sql";
/*  596 */     String path = exportPath + "\\ui\\lib";
/*  597 */     String[] command = { "/bin/sh ", "-c ", "/usr/bin/mysqldump -h" + host + " -u" + username + " -p" + password, sqlType + " " + tablename + " -r" + exportPath };
/*      */     try {
/*  599 */       Process runtimeProcess = Runtime.getRuntime().exec(command);
/*  600 */       int processComplete = runtimeProcess.waitFor();
/*  601 */       File file = new File(exportPath + fileName);
/*  602 */       Thread.sleep(300L);
/*  603 */       if (file.exists()) {
/*  604 */         response.setContentType("multipart/form-data");
/*      */ 
/*  606 */         response.addHeader("Content-Disposition", "attachment;fileName=" + fileName);
/*      */ 
/*  608 */         byte[] buffer = new byte[1024];
/*  609 */         FileInputStream fis = null;
/*  610 */         BufferedInputStream bis = null;
/*      */         try {
/*  612 */           fis = new FileInputStream(file);
/*  613 */           bis = new BufferedInputStream(fis);
/*  614 */           OutputStream os = response.getOutputStream();
/*  615 */           int i = bis.read(buffer);
/*  616 */           while (i != -1) {
/*  617 */             os.write(buffer, 0, i);
/*  618 */             i = bis.read(buffer);
/*      */           }
/*      */         }
/*      */         catch (Exception e) {
/*  622 */           e.printStackTrace();
/*      */         }
/*  624 */         if (bis != null) {
/*      */           try {
/*  626 */             bis.close();
/*      */           }
/*      */           catch (IOException e) {
/*  629 */             e.printStackTrace();
/*      */           }
/*      */         }
/*  632 */         if (fis != null)
/*      */           try {
/*  634 */             fis.close();
/*      */           }
/*      */           catch (IOException e) {
/*  637 */             e.printStackTrace();
/*      */           }
/*      */       }
/*      */     }
/*      */     catch (Exception e)
/*      */     {
/*      */       File file1;
/*  643 */       e.printStackTrace();
/*      */     }
/*      */     finally
/*      */     {
/*      */       try
/*      */       {
/*      */         File file1;
/*  646 */         Thread.sleep(300L);
/*  647 */         file1 = new File(exportPath + fileName);
/*  648 */         Thread.sleep(300L);
/*  649 */         if (file1.exists())
/*  650 */           file1.delete();
/*      */       }
/*      */       catch (Exception e) {
/*  653 */         e.printStackTrace();
/*      */       }
/*      */     }
/*      */   }
/*      */ 
/*      */   public ToJson<SysCode> getErrInfo(String CodeId)
/*      */   {
/*  660 */     ToJson json = new ToJson();
/*      */     try {
/*  662 */       if (CodeId != null) {
/*  663 */         SysCode codeByCodeId = this.sysCodeMapper.getCodeByCodeIds(Integer.valueOf(CodeId));
/*  664 */         json.setObject(codeByCodeId);
/*  665 */         json.setFlag(0);
/*  666 */         json.setMsg("ok");
/*      */       }
/*      */     } catch (Exception e) {
/*  669 */       e.printStackTrace();
/*  670 */       json.setFlag(1);
/*  671 */       json.setMsg("err");
/*      */     }
/*  673 */     return json;
/*      */   }
/*      */ 
/*      */   public ToJson<SysCode> deleteErrCode(String CodeId)
/*      */   {
/*  678 */     ToJson json = new ToJson();
/*  679 */     if (CodeId != null) {
/*      */       try {
/*  681 */         this.sysCodeMapper.deleteErrCode(Integer.valueOf(CodeId));
/*  682 */         json.setFlag(0);
/*  683 */         json.setMsg("ok");
/*      */       } catch (NumberFormatException e) {
/*  685 */         e.printStackTrace();
/*  686 */         json.setFlag(1);
/*  687 */         json.setMsg("err");
/*      */       }
/*      */     }
/*  690 */     return json;
/*      */   }
/*      */ 
/*      */   public ToJson<List<SysCode>> getAllCode()
/*      */   {
/*  695 */     ToJson<List<SysCode>> json = new ToJson<List<SysCode>>();
/*  696 */     List<SysCode> list = new ArrayList<SysCode>();
/*      */     try
/*      */     {
/*  699 */       List<SysCode> mainCode = this.sysCodeMapper.getMainCode();
/*      */ 
/*  701 */       for (SysCode sysCode : mainCode) {
/*  702 */         list.add(sysCode);
/*      */       }
/*  704 */       json.setObject(list);
/*  705 */       json.setMsg("ok");
/*  706 */       json.setFlag(0);
/*      */     } catch (Exception e) {
/*  708 */       e.printStackTrace();
/*  709 */       json.setObject(null);
/*  710 */       json.setMsg("err");
/*  711 */       json.setFlag(1);
/*      */     }
/*  713 */     return json;
/*      */   }
/*      */ 
/*      */   public JSONObject DropDownBoxs(String[] CodeId)
/*      */   {
/*  718 */     JSONObject jsonObject = null;
/*  719 */     List list = new ArrayList();
/*  720 */     Map map = new HashMap();
/*      */     try
/*      */     {
/*  723 */       for (String s : CodeId) {
/*  724 */         List sysCode = this.sysCodeMapper.getSysCode(s);
/*  725 */         map.put(s, sysCode);
/*      */       }
/*      */     } catch (NumberFormatException e) {
/*  728 */       e.printStackTrace();
/*      */     }
/*      */ 
/*  731 */     jsonObject = JSONObject.fromObject(map);
/*  732 */     return jsonObject;
/*      */   }
/*      */ 
/*      */   public ToJson<Object> updateDabase()
/*      */   {
/*  737 */     ToJson json = new ToJson(1, "err");
/*      */     try {
/*  739 */       String classpath = getClass().getResource("/").getPath();
/*  740 */       String webappRoot = classpath.replaceAll("WEB-INF/classes/", "ui/file/update/");
/*  741 */       File file = new File(webappRoot);
/*      */ 
/*  743 */       if (!file.exists()) {
/*  744 */         file.mkdir();
/*      */       }
/*      */ 
/*  747 */       if (file.isDirectory()) {
/*  748 */         String[] files = file.list();
/*  749 */         if (files.length > 0) {
/*  750 */           for (int j = 0; j < files.length; j++) {
/*  751 */             ToJson zh_cn = this.orgManageService.queryId("zh_CN");
/*  752 */             List obj = zh_cn.getObj();
/*  753 */             int size = obj.size();
/*  754 */             for (int i = 0; i < size; i++) {
/*  755 */               Properties props = Resources.getResourceAsProperties("jdbc-sql.properties");
/*  756 */               String url = props.getProperty("url" + ((OrgManage)obj.get(i)).getOid());
/*  757 */               String driver = props.getProperty("driverClassName");
/*  758 */               String username = props.getProperty("uname" + ((OrgManage)obj.get(i)).getOid());
/*  759 */               String password = props.getProperty("password" + ((OrgManage)obj.get(i)).getOid());
/*  760 */               Class.forName(driver).newInstance();
/*  761 */               Connection conn = DriverManager.getConnection(url, username, password);
/*  762 */               ScriptRunner runner = new ScriptRunner(conn, false, false);
/*  763 */               runner.setErrorLogWriter(null);
/*  764 */               runner.setLogWriter(null);
/*  765 */               runner.runScript(new InputStreamReader(new FileInputStream(webappRoot + "/" + files[j]), "utf-8"));
/*      */             }
/*  767 */             json.setMsg("ok");
/*  768 */             json.setFlag(0);
/*      */           }
/*      */         } else {
/*  771 */           json.setMsg("不存在更新文件");
/*  772 */           json.setFlag(0);
/*      */         }
/*      */       }
/*      */     }
/*      */     catch (Exception e)
/*      */     {
/*  778 */       json.setMsg(e.getMessage());
/*  779 */       json.setFlag(1);
/*  780 */       e.printStackTrace();
/*      */     }
/*  782 */     return json;
/*      */   }
/*      */ 
/*      */   public ToJson<Object> editDabase(HttpServletRequest request, HttpServletResponse response)
/*      */   {
/*  787 */     ToJson json = new ToJson(1, "err");
/*  788 */     String classpath = getClass().getResource("/").getPath();
/*  789 */     String webappRoot = classpath.replaceAll("WEB-INF/classes/", "ui/file/update/");
/*  790 */     StringBuffer stringBuffer = new StringBuffer();
/*  791 */     String urltd_oa = new String();
/*  792 */     String unametd_oa = new String();
/*  793 */     String passwordtd_oa = new String();
/*  794 */     String proRoot = classpath.replaceAll("WEB-INF/classes/", "ui/file/properties/");
/*      */     try {
/*  796 */       File file1 = new File(proRoot + "jdbc.txt");
/*      */ 
/*  798 */       if ((file1.isFile()) && (file1.exists()))
/*      */       {
/*  800 */         InputStreamReader read = new InputStreamReader(new FileInputStream(file1));
/*      */ 
/*  802 */         BufferedReader bufferedReader = new BufferedReader(read);
/*  803 */         String lineTxt = null;
/*  804 */         int i = 1;
/*  805 */         while ((lineTxt = bufferedReader.readLine()) != null) {
/*  806 */           if (i == 1) {
/*  807 */             urltd_oa = lineTxt;
/*      */           }
/*  809 */           else if (i == 2)
/*  810 */             unametd_oa = lineTxt;
/*      */           else {
/*  812 */             passwordtd_oa = lineTxt;
/*      */           }
/*  814 */           i++;
/*      */         }
/*  816 */         read.close();
/*      */       }
/*      */ 
/*  819 */       Properties props = Resources.getResourceAsProperties("jdbc-sql.properties");
/*  820 */       String url = urltd_oa;
/*  821 */       String driver = props.getProperty("driverClassName");
/*  822 */       String username = unametd_oa;
/*  823 */       String password = passwordtd_oa;
/*  824 */       Class.forName(driver).newInstance();
/*  825 */       Connection conn = DriverManager.getConnection(url, username, password);
/*      */ 
/*  827 */       String crsql = "CREATE TABLE `str_status` (\n  `ID` int(11) NOT NULL AUTO_INCREMENT,\n  `CONTENT` varchar(255) DEFAULT NULL COMMENT '汉语表述',\n  `STATE` varchar(255) DEFAULT '0' COMMENT '成功0.错误1',\n  `STRING_SQL` text COMMENT 'SQL',\n  PRIMARY KEY (`ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;";
/*      */ 
/*  834 */       Statement st1 = conn.createStatement();
/*  835 */       st1.executeUpdate(crsql);
/*  836 */       File file = new File(webappRoot);
/*  837 */       if (file.isDirectory()) {
/*  838 */         String[] files = file.list();
/*  839 */         if (files.length > 0) {
/*  840 */           for (int z = 0; z < files.length; z++) {
/*  841 */             InputStream in = new FileInputStream(webappRoot + "/" + files[z]);
/*  842 */             HSSFWorkbook excelObj = new HSSFWorkbook(in);
/*  843 */             HSSFSheet sheetObj = excelObj.getSheetAt(0);
/*  844 */             Row row = sheetObj.getRow(0);
/*  845 */             int colNum = row.getPhysicalNumberOfCells();
/*  846 */             int lastRowNum = sheetObj.getLastRowNum();
/*  847 */             for (int i = 0; i <= lastRowNum; i++) {
/*  848 */               row = sheetObj.getRow(i);
/*  849 */               if (row != null) {
/*  850 */                 for (int j = 0; j < colNum; j++) {
/*  851 */                   Cell cell = row.getCell(j);
/*  852 */                   if (cell != null) {
/*  853 */                     switch (j)
/*      */                     {
/*      */                     case 0:
/*      */                       try
/*      */                       {
/*  858 */                         String sql = cell.getStringCellValue();
/*  859 */                         Statement st = conn.createStatement();
/*  860 */                         st.executeUpdate(sql);
/*  861 */                         String s = sql.replaceAll("'", "\"");
/*  862 */                         String sql_1 = "INSERT INTO `str_status` ( `CONTENT`, `STATE`, `STRING_SQL`) VALUES ( NULL, '0', '" + s + "');";
/*  863 */                         st.executeUpdate(sql_1);
/*  864 */                         json.setMsg("ok");
/*  865 */                         json.setFlag(0);
/*      */                       } catch (SQLException e) {
/*  867 */                         json.setMsg("err");
/*  868 */                         json.setFlag(1);
/*  869 */                         String sql = cell.getStringCellValue();
/*  870 */                         Statement st = conn.createStatement();
/*  871 */                         String s = sql.replaceAll("'", "\"");
/*  872 */                         String sql_1 = "INSERT INTO `str_status` ( `CONTENT`, `STATE`, `STRING_SQL`) VALUES ( NULL, '1', '" + s + "');";
/*  873 */                         st.executeUpdate(sql_1);
/*  874 */                         String sql_2 = "select * from str_status where STATE =1";
/*  875 */                         ResultSet rs = st.executeQuery(sql_2);
/*  876 */                         List strstatus = new ArrayList();
/*  877 */                         Object object1 = new Object();
/*  878 */                         Object object2 = new Object();
/*  879 */                         while (rs.next()) {
/*  880 */                           Strstatus strstatus1 = new Strstatus();
/*  881 */                           object1 = rs.getObject(1);
/*  882 */                           object2 = rs.getObject(2);
/*  883 */                           strstatus1.setId(Integer.valueOf(((Integer)object1).intValue()));
/*  884 */                           strstatus1.setStringSql(object2.toString());
/*  885 */                           strstatus.add(strstatus1);
/*      */                         }
/*  887 */                         HSSFWorkbook workbook1 = ExcelUtil.makeExcelHead("异常sql语句", 9);
/*  888 */                         String[] secondTitles = { "序号", "异常语句" };
/*  889 */                         HSSFWorkbook workbook2 = ExcelUtil.makeSecondHead(workbook1, secondTitles);
/*  890 */                         String[] beanProperty = { "id", "stringSql" };
/*  891 */                         HSSFWorkbook workbook = null;
/*  892 */                         workbook = ExcelUtil.exportExcelData(workbook2, strstatus, beanProperty);
/*  893 */                         OutputStream out = response.getOutputStream();
/*  894 */                         String filename = "异常sql语句.xls";
/*  895 */                         filename = FileUtils.encodeDownloadFilename(filename, request.getHeader("user-agent"));
/*  896 */                         response.setContentType("application/vnd.ms-excel;charset=UTF-8");
/*  897 */                         response.setHeader("content-disposition", "attachment;filename=" + filename);
/*  898 */                         workbook.write(out);
/*  899 */                         out.close();
/*      */                       }
/*      */                     }
/*      */                   }
/*      */                 }
/*      */               }
/*      */             }
/*      */           }
/*      */         }
/*      */ 
/*      */       }
/*      */ 
/*  911 */       OrgManage orgManage = new OrgManage();
/*  912 */       orgManage.setOid(Integer.valueOf(1000));
/*  913 */       int i = this.orgManageMapper.editOid(orgManage);
/*      */ 
/*  915 */       String sql = "UPDATE version SET VER= '2018.03.16.1'";
/*  916 */       Statement st = conn.createStatement();
/*  917 */       st.execute(sql);
/*  918 */       conn.close();
/*  919 */       json.setMsg("ok");
/*  920 */       json.setFlag(0);
/*      */     } catch (Exception e) {
/*  922 */       json.setMsg(e.getMessage());
/*  923 */       json.setFlag(1);
/*      */     }
/*  925 */     return json;
/*      */   }
/*      */ 
/*      */   public ToJson<Object> getObjects()
/*      */   {
/*  931 */     ToJson json = new ToJson(1, "err");
/*  932 */     int count = 0;
/*  933 */     int total = 0;
/*      */     try {
/*  935 */       String classpath = getClass().getResource("/").getPath();
/*  936 */       String webappRoot = classpath.replaceAll("WEB-INF/classes/", "ui/file/properties/");
/*      */ 
/*  938 */       count = 0;
/*  939 */       total = 0;
/*  940 */       File file = new File(webappRoot + "jdbc.txt");
/*  941 */       String urltd_oa = new String();
/*  942 */       String unametd_oa = new String();
/*  943 */       String passwordtd_oa = new String();
/*      */ 
/*  945 */       if ((file.isFile()) && (file.exists()))
/*      */       {
/*  947 */         InputStreamReader read = new InputStreamReader(new FileInputStream(file));
/*      */ 
/*  949 */         BufferedReader bufferedReader = new BufferedReader(read);
/*  950 */         String lineTxt = null;
/*  951 */         int i = 1;
/*  952 */         while ((lineTxt = bufferedReader.readLine()) != null) {
/*  953 */           if (i == 1) {
/*  954 */             urltd_oa = lineTxt;
/*      */           }
/*  956 */           else if (i == 2)
/*  957 */             unametd_oa = lineTxt;
/*      */           else {
/*  959 */             passwordtd_oa = lineTxt;
/*      */           }
/*  961 */           i++;
/*      */         }
/*  963 */         read.close();
/*      */       }
/*  965 */       if (file.isDirectory()) {
/*  966 */         String[] files = file.list();
/*  967 */         if (files.length > 0) {
/*  968 */           for (int z = 0; z < files.length; z++)
/*      */             try {
/*  970 */               InputStream in = new FileInputStream(webappRoot + "/" + files[z]);
/*  971 */               HSSFWorkbook excelObj = null;
/*  972 */               excelObj = new HSSFWorkbook(in);
/*  973 */               HSSFSheet sheetObj = excelObj.getSheetAt(0);
/*  974 */               Row row = sheetObj.getRow(0);
/*  975 */               int colNum = row.getPhysicalNumberOfCells();
/*  976 */               int lastRowNum = sheetObj.getLastRowNum();
/*      */ 
/*  978 */               count = lastRowNum + 1;
/*  979 */               Properties props = Resources.getResourceAsProperties("jdbc-sql.properties");
/*  980 */               String url = urltd_oa;
/*  981 */               String driver = props.getProperty("driverClassName");
/*  982 */               String username = unametd_oa;
/*  983 */               String password = passwordtd_oa;
/*  984 */               Class.forName(driver).newInstance();
/*  985 */               Connection conn = DriverManager.getConnection(url, username, password);
/*  986 */               String sql = "SELECT  count(*) as count FROM  str_status";
/*  987 */               Statement st = conn.createStatement();
/*  988 */               ResultSet resultSet = st.executeQuery(sql);
/*      */ 
/*  990 */               if (resultSet.next())
/*  991 */                 total = Integer.valueOf(resultSet.getString(1)).intValue();
/*      */             }
/*      */             catch (Exception e)
/*      */             {
/*  995 */               json.setFlag(1);
/*  996 */               json.setMsg(e.getMessage());
/*  997 */               e.printStackTrace();
/*      */             }
/*      */         }
/*      */       }
/*      */     }
/*      */     catch (Exception e)
/*      */     {
/* 1004 */       e.printStackTrace();
/*      */     }
/* 1006 */     Map map = new HashedMap();
/* 1007 */     map.put("count", Integer.valueOf(count));
/* 1008 */     map.put("total", Integer.valueOf(total));
/* 1009 */     json.setFlag(0);
/* 1010 */     json.setObject(map);
/* 1011 */     json.setMsg("ok");
/* 1012 */     return json;
/*      */   }
/*      */ 
/*      */   public ToJson<Object> getObjectdetail()
/*      */   {
/* 1017 */     ToJson json = new ToJson();
/* 1018 */     List correctList = new ArrayList();
/* 1019 */     List errorList = new ArrayList();
/*      */     try {
/* 1021 */       String classpath = getClass().getResource("/").getPath();
/* 1022 */       String webappRoot = classpath.replaceAll("WEB-INF/classes/", "ui/file/properties/");
/* 1023 */       File file = new File(webappRoot + "jdbc.txt");
/* 1024 */       String urltd_oa = new String();
/* 1025 */       String unametd_oa = new String();
/* 1026 */       String passwordtd_oa = new String();
/*      */ 
/* 1028 */       if ((file.isFile()) && (file.exists()))
/*      */       {
/* 1030 */         InputStreamReader read = new InputStreamReader(new FileInputStream(file));
/*      */ 
/* 1032 */         BufferedReader bufferedReader = new BufferedReader(read);
/* 1033 */         String lineTxt = null;
/* 1034 */         int i = 1;
/* 1035 */         while ((lineTxt = bufferedReader.readLine()) != null) {
/* 1036 */           if (i == 1) {
/* 1037 */             urltd_oa = lineTxt;
/*      */           }
/* 1039 */           else if (i == 2)
/* 1040 */             unametd_oa = lineTxt;
/*      */           else {
/* 1042 */             passwordtd_oa = lineTxt;
/*      */           }
/* 1044 */           i++;
/*      */         }
/* 1046 */         read.close();
/*      */       }
/* 1048 */       Properties props = Resources.getResourceAsProperties("jdbc-sql.properties");
/* 1049 */       String url = urltd_oa;
/* 1050 */       String driver = props.getProperty("driverClassName");
/* 1051 */       String username = unametd_oa;
/* 1052 */       String password = passwordtd_oa;
/* 1053 */       Class.forName(driver).newInstance();
/* 1054 */       Connection conn = DriverManager.getConnection(url, username, password);
/* 1055 */       String sql = "SELECT  * FROM  str_status where STATE =0";
/* 1056 */       Statement st = conn.createStatement();
/* 1057 */       ResultSet resultSet = st.executeQuery(sql);
/*      */ 
/* 1059 */       while (resultSet.next()) {
/* 1060 */         Strstatus strstatus = new Strstatus();
/* 1061 */         strstatus.setId(Integer.valueOf(resultSet.getString(1)));
/* 1062 */         strstatus.setContent(resultSet.getString(2));
/* 1063 */         strstatus.setState(resultSet.getString(3));
/* 1064 */         strstatus.setStringSql(resultSet.getString(4));
/* 1065 */         correctList.add(strstatus);
/*      */       }
/*      */ 
/* 1068 */       String errsql = "SELECT  * FROM  str_status where STATE =1";
/* 1069 */       ResultSet errorresultSet = st.executeQuery(errsql);
/* 1070 */       while (errorresultSet.next()) {
/* 1071 */         Strstatus strstatus = new Strstatus();
/* 1072 */         strstatus.setId(Integer.valueOf(errorresultSet.getString(1)));
/* 1073 */         strstatus.setContent(errorresultSet.getString(2));
/* 1074 */         strstatus.setState(errorresultSet.getString(3));
/* 1075 */         strstatus.setStringSql(errorresultSet.getString(4));
/* 1076 */         errorList.add(strstatus);
/*      */       }
/* 1078 */       errorresultSet.last();
/* 1079 */       Map map = new HashedMap();
/* 1080 */       map.put("errorList", errorList);
/* 1081 */       map.put("correctList", correctList);
/* 1082 */       json.setObject(map);
/* 1083 */       json.setMsg("ok");
/* 1084 */       json.setFlag(0);
/*      */     }
/*      */     catch (Exception e) {
/* 1087 */       json.setMsg(e.getMessage());
/* 1088 */       json.setFlag(1);
/* 1089 */       e.printStackTrace();
/*      */     }
/* 1091 */     return json;
/*      */   }
/*      */ 
/*      */   public List<OrgManage> queryId() {
/* 1095 */     List list = this.orgManageMapper.queryId();
/* 1096 */     return list;
/*      */   }
/*      */ 
/*      */   public boolean isAppNewVersion(String webVersion, String dataVersion)
/*      */   {
/* 1102 */     boolean flag = false;
/*      */ 
/* 1104 */     if (webVersion.equals(dataVersion)) {
/* 1105 */       flag = false;
/* 1106 */       return false;
/*      */     }
/* 1108 */     String[] webArray = webVersion.split("\\.");
/* 1109 */     String[] dataArray = dataVersion.split("\\.");
/*      */ 
/* 1111 */     int length = webArray.length < dataArray.length ? webArray.length : dataArray.length;
/*      */ 
/* 1113 */     for (int i = 0; i < length; i++) {
/* 1114 */       if (Integer.parseInt(dataArray[i]) < Integer.parseInt(webArray[i])) {
/* 1115 */         flag = true;
/* 1116 */         return true;
/* 1117 */       }if (Integer.parseInt(dataArray[i]) > Integer.parseInt(webArray[i])) {
/* 1118 */         flag = false;
/* 1119 */         return false;
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/* 1124 */     return flag;
/*      */   }
/*      */ 
/*      */   public ToJson<Object> updateResource()
/*      */   {
/* 1129 */     ToJson json = new ToJson(0, "ok");
/*      */     try
/*      */     {
/* 1132 */       String webVersion = "2018.03.16.1";
/*      */ 
/* 1134 */       String dataversion = this.versionMapper.selectVer();
/* 1135 */       boolean flag = isAppNewVersion(webVersion, dataversion);
/*      */ 
/* 1137 */       if (flag == true)
/*      */       {
/* 1139 */         ToJson zh_cn = this.orgManageService.queryId("zh_CN");
/* 1140 */         List obj = zh_cn.getObj();
/* 1141 */         int size = obj.size();
/* 1142 */         for (int i = 0; i < size; i++)
/*      */         {
/* 1144 */           if (i < 1) {
/* 1145 */             Properties props = Resources.getResourceAsProperties("jdbc-sql.properties");
/* 1146 */             String url = props.getProperty("url" + ((OrgManage)obj.get(i)).getOid());
/* 1147 */             String driver = props.getProperty("driverClassName");
/* 1148 */             String username = props.getProperty("uname" + ((OrgManage)obj.get(i)).getOid());
/* 1149 */             String password = props.getProperty("password" + ((OrgManage)obj.get(i)).getOid());
/* 1150 */             Class.forName(driver).newInstance();
/* 1151 */             Connection conn = DriverManager.getConnection(url, username, password);
/*      */ 
/* 1172 */             boolean isExistPara_1 = Verification.CheckIsExistSysPara(conn, driver, url, username, password, "APP_PC_DownUrl");
/* 1173 */             if (isExistPara_1 == true) {
/* 1174 */               String sql = "DELETE FROM sys_para where PARA_NAME = 'APP_PC_DownUrl';";
/* 1175 */               Statement st = conn.createStatement();
/* 1176 */               st.executeUpdate(sql);
/* 1177 */               sql = "INSERT INTO `sys_para` (`PARA_NAME`, `PARA_VALUE`) VALUES ('APP_PC_DownUrl', '/file/pc/ispirit_xoa.exe');";
/* 1178 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1184 */             boolean isExistPara_2 = Verification.CheckIsExistSysPara(conn, driver, url, username, password, "APP_PC_Version");
/* 1185 */             if (isExistPara_2 == true) {
/* 1186 */               String sql = "DELETE FROM sys_para where PARA_NAME = 'APP_PC_Version';";
/* 1187 */               Statement st = conn.createStatement();
/* 1188 */               st.executeUpdate(sql);
/* 1189 */               sql = "INSERT INTO `sys_para` (`PARA_NAME`, `PARA_VALUE`) VALUES ('APP_PC_Version', '2018.03.16.1');";
/* 1190 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1195 */             boolean isExistPara_3 = Verification.CheckIsExistSysPara(conn, driver, url, username, password, "APP_Android_Version");
/* 1196 */             if (isExistPara_3 == true) {
/* 1197 */               String sql = "UPDATE `sys_para` SET `PARA_NAME`='APP_Android_Version', `PARA_VALUE`='2018.03.16.1' WHERE (`PARA_NAME`='APP_Android_Version');";
/* 1198 */               Statement st = conn.createStatement();
/* 1199 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1205 */             boolean isExistPara_4 = Verification.CheckIsExistSysPara(conn, driver, url, username, password, "APP_IOS_Version");
/* 1206 */             if (isExistPara_4 == true) {
/* 1207 */               String sql = "UPDATE `sys_para` SET `PARA_NAME`='APP_IOS_Version', `PARA_VALUE`='2018.03.16.1' WHERE (`PARA_NAME`='APP_IOS_Version');";
/* 1208 */               Statement st = conn.createStatement();
/* 1209 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1215 */             boolean isExistTable_1 = Verification.CheckIsExistTable(conn, driver, url, username, password, "office_transhistory");
/* 1216 */             if (!isExistTable_1) {
/* 1217 */               String sql = "CREATE TABLE IF NOT EXISTS  `office_transhistory` (\n  `TRANS_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '唯一自增ID',\n  `PRO_ID` int(11) DEFAULT '0' COMMENT '办公用品ID',\n  `BORROWER` varchar(20) DEFAULT NULL COMMENT '申请人',\n  `TRANS_FLAG` varchar(20) DEFAULT '' COMMENT '登记类型',\n  `TRANS_QTY` int(11) DEFAULT '0' COMMENT '申请时的数量',\n  `PRICE` decimal(10,2) DEFAULT '0.00' COMMENT '物品价格',\n  `REMARK` text COMMENT '备注',\n  `TRANS_DATE` date DEFAULT '0000-00-00' COMMENT '申请时间',\n  `OPERATOR` varchar(20) DEFAULT '' COMMENT '操作员',\n  `TRANS_STATE` varchar(20) DEFAULT '' COMMENT '申请的状态标志(01-待部门审批人审批,02-待库管理员审批,1-同意,21-部门审批驳回，22-库管员驳回)',\n  `FACT_QTY` int(11) DEFAULT '0' COMMENT '实际的申请数量',\n  `REASON` text COMMENT '不同意理由',\n  `COMPANY` varchar(20) DEFAULT NULL COMMENT '厂家',\n  `BAND` varchar(20) DEFAULT NULL COMMENT '品牌',\n  `CYCLE_NO` int(11) DEFAULT '0' COMMENT '批量申请的ID',\n  `CYCLE` char(1) DEFAULT NULL COMMENT '批量申请标记',\n  `DEPT_ID` int(11) DEFAULT NULL COMMENT '部门ID',\n  `PRO_KEEPER` varchar(20) DEFAULT NULL COMMENT '物品调度员',\n  `GRANTOR` varchar(20) DEFAULT NULL COMMENT '发放物品的操作员',\n  `GRANT_STATUS` char(1) DEFAULT '0' COMMENT '物品发放处理状态(0-未处理,1-已处理)',\n  `DEPT_MANAGER` varchar(200) DEFAULT NULL COMMENT '部门审批人',\n  `DEPT_STATUS` int(1) DEFAULT '1' COMMENT '部门审批状态标志',\n  `RETURN_STATUS` int(1) DEFAULT '0' COMMENT '归还状态',\n  `RETURN_DATE` date DEFAULT '0000-00-00' COMMENT '归还时间',\n  `RETURN_REASON` text COMMENT '归还不同意理由',\n  PRIMARY KEY (`TRANS_ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='物品登记申请记录表';";
/*      */ 
/* 1245 */               Statement st = conn.createStatement();
/* 1246 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1251 */             boolean isExistTable_2 = Verification.CheckIsExistTable(conn, driver, url, username, password, "office_depository");
/* 1252 */             if (!isExistTable_2) {
/* 1253 */               String sql = "CREATE TABLE IF NOT EXISTS  `office_depository`(\n  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '唯一自增ID',\n  `DEPOSITORY_NAME` varchar(200) DEFAULT NULL COMMENT '库名称',\n  `OFFICE_TYPE_ID` text COMMENT '物品类表ID',\n  `DEPT_ID` text COMMENT '所属部门',\n  `MANAGER` text COMMENT '仓库管理员',\n  `PRO_KEEPER` text COMMENT '物品调度员',\n  `PRIV_ID` varchar(50) DEFAULT NULL,\n  `RETURN_STATUS` int(1) DEFAULT '0' COMMENT '归还状态',\n  `RETURN_DATE` date DEFAULT '0000-00-00' COMMENT '归还时间',\n  `RETURN_REASON` text COMMENT '归还不同意理由',\n  PRIMARY KEY (`ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='物品库表';";
/*      */ 
/* 1266 */               Statement st = conn.createStatement();
/* 1267 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1272 */             boolean isExistTable_3 = Verification.CheckIsExistTable(conn, driver, url, username, password, "office_products");
/* 1273 */             if (!isExistTable_3) {
/* 1274 */               String sql = "CREATE TABLE IF NOT EXISTS  `office_products`(\n  `PRO_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '唯一自增ID',\n  `PRO_NAME` varchar(200) DEFAULT '' COMMENT '办公用品名称',\n  `PRO_DESC` text COMMENT '办公用品描述',\n  `OFFICE_PROTYPE` varchar(20) DEFAULT '' COMMENT '物品所属类别ID',\n  `PRO_CODE` varchar(20) DEFAULT '' COMMENT '办公用品编码',\n  `PRO_UNIT` varchar(20) DEFAULT '' COMMENT '计量单位',\n  `PRO_PRICE` decimal(10,2) DEFAULT '0.00' COMMENT '单价',\n  `PRO_SUPPLIER` text COMMENT '供应商',\n  `PRO_LOWSTOCK` int(11) DEFAULT '0' COMMENT '最低警戒库存',\n  `PRO_MAXSTOCK` int(11) DEFAULT '0' COMMENT '最高警戒库存',\n  `PRO_STOCK` int(11) DEFAULT '0' COMMENT '当前库存',\n  `PRO_DEPT` text COMMENT '登记权限部门',\n  `PRO_MANAGER` text COMMENT '登记权限用户',\n  `PRO_CREATOR` varchar(20) DEFAULT '' COMMENT '创建人',\n  `PRO_AUDITER` text COMMENT '审批权限用户',\n  `PRO_ORDER` varchar(2) DEFAULT NULL COMMENT '排序号',\n  `ATTACHMENT_ID` text COMMENT '附件ID串',\n  `ATTACHMENT_NAME` text COMMENT '附件名称串',\n  `OFFICE_PRODUCT_TYPE` int(11) DEFAULT '2' COMMENT '办公用品类型(1-领用, 2-借用)',\n  `ALLOCATION` tinyint(1) DEFAULT '0' COMMENT '调拨属性',\n  PRIMARY KEY (`PRO_ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='物品信息表';";
/*      */ 
/* 1297 */               Statement st = conn.createStatement();
/* 1298 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1303 */             boolean isExistTable_4 = Verification.CheckIsExistTable(conn, driver, url, username, password, "office_type");
/* 1304 */             if (!isExistTable_4) {
/* 1305 */               String sql = "CREATE TABLE IF NOT EXISTS  `office_type` (\n  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '唯一自增ID',\n  `TYPE_NAME` varchar(200) DEFAULT '' COMMENT '类别名称',\n  `TYPE_ORDER` varchar(200) DEFAULT '' COMMENT '排序号',\n  `TYPE_PARENT_ID` int(10) unsigned DEFAULT '0' COMMENT '父类型ID',\n  `TYPE_DEPOSITORY` int(10) unsigned DEFAULT '1' COMMENT '所属库的库ID',\n  PRIMARY KEY (`ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='物品类别表';";
/*      */ 
/* 1313 */               Statement st = conn.createStatement();
/* 1314 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1320 */             boolean isExistFunction_1 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "126");
/* 1321 */             if (!isExistFunction_1) {
/* 1322 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`) VALUES ('126', '6060', '办公用品', 'Office Supplies', '辦公用品', NULL, NULL, NULL, '@officeSupplies', '');";
/* 1323 */               Statement st = conn.createStatement();
/* 1324 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1329 */             boolean isExistFunction_2 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "179");
/* 1330 */             if (!isExistFunction_2) {
/* 1331 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`) VALUES ('179', '606001', '办公用品申领', 'Office supplies', '辦公用品申領', NULL, NULL, NULL, 'officetransHistory/OfficeProductApplyIndex', '');";
/* 1332 */               Statement st = conn.createStatement();
/* 1333 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1338 */             boolean isExistFunction_3 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "607");
/* 1339 */             if (!isExistFunction_3) {
/* 1340 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`) VALUES ('607', '606002', '办公用品审批', 'Office supplies approval', '辦公用品審批', NULL, NULL, NULL, 'officetransHistory/approvalIndex', '');";
/* 1341 */               Statement st = conn.createStatement();
/* 1342 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1347 */             boolean isExistFunction_4 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "539");
/* 1348 */             if (!isExistFunction_4) {
/* 1349 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`) VALUES ('539', '606003', '办公用品发放', 'Office supplies', '辦公用品發放', NULL, NULL, NULL, 'officetransHistory/productRelease', '');";
/* 1350 */               Statement st = conn.createStatement();
/* 1351 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1356 */             boolean isExistFunction_5 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "238");
/* 1357 */             if (!isExistFunction_5) {
/* 1358 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`) VALUES ('238', '606006', '办公用品库管理', 'Office supplies library management', '辦公用品庫管理', NULL, NULL, NULL, 'officeDepository/index', '');";
/* 1359 */               Statement st = conn.createStatement();
/* 1360 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1365 */             boolean isExistFunction_6 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "128");
/* 1366 */             if (!isExistFunction_6) {
/* 1367 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`) VALUES ('128', '606007', '办公用品库存管理', 'Office supplies inventory management', '辦公用品庫存管理', NULL, NULL, NULL, 'officetransHistory/stockIndex', '');";
/* 1368 */               Statement st = conn.createStatement();
/* 1369 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1374 */             boolean isExistFunction_7 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "131");
/* 1375 */             if (!isExistFunction_7) {
/* 1376 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`) VALUES ('131', '1030', '工作查询', 'Job query', '工作査詢', NULL, NULL, NULL, 'workflow/query', '');";
/* 1377 */               Statement st = conn.createStatement();
/* 1378 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1383 */             boolean checkIsExistfield = Verification.CheckIsExistfield(conn, driver, url, username, password, "unit", "UNIT_ID");
/* 1384 */             if (!checkIsExistfield) {
/* 1385 */               String sql = "alter table unit add column UNIT_ID  int not null auto_increment primary key comment '主键' first;";
/* 1386 */               Statement st = conn.createStatement();
/* 1387 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1392 */             boolean checkIsExistTable = Verification.CheckIsExistTable(conn, driver, url, username, password, "flow_form_type");
/* 1393 */             if (checkIsExistTable == true) {
/* 1394 */               String sql = "alter table flow_form_type convert to character set utf8;";
/* 1395 */               Statement st = conn.createStatement();
/* 1396 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1401 */             boolean checkIsExistfield_2 = Verification.CheckIsExistfield(conn, driver, url, username, password, "sys_function", "ISOPEN_NEW");
/* 1402 */             if (!checkIsExistfield_2) {
/* 1403 */               String sql = "ALTER TABLE sys_function add ISOPEN_NEW varchar(10) null;";
/* 1404 */               Statement st = conn.createStatement();
/* 1405 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1410 */             boolean isExistFunction_8 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "57");
/* 1411 */             if (!isExistFunction_8) {
/* 1412 */               String sql = "INSERT INTO `sys_function` VALUES ('57', 'z008', '行政办公设置', 'Administrative office setting', '行政辦公設定', null, null, null, '@system', '', null);";
/* 1413 */               Statement st = conn.createStatement();
/* 1414 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1419 */             boolean isExistFunction_9 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "196");
/* 1420 */             if (!isExistFunction_9) {
/* 1421 */               String sql = "INSERT INTO `sys_function` VALUES ('196', '2008', '公告通知审批', 'Approval of notice', '公告通知審批', null, null, null, 'notify/auditing', '', null);";
/* 1422 */               Statement st = conn.createStatement();
/* 1423 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1428 */             boolean isExistFunction_10 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "197");
/* 1429 */             if (!isExistFunction_10) {
/* 1430 */               String sql = "INSERT INTO `sys_function` VALUES ('197', 'z00830', '公告通知设置', 'Setting of notice', '公告通知設定', null, null, null, 'system/notify', '', null);";
/* 1431 */               Statement st = conn.createStatement();
/* 1432 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1437 */             boolean checkIsExistfield_1 = Verification.CheckIsExistfield(conn, driver, url, username, password, "user", "POST");
/* 1438 */             if (!checkIsExistfield_1) {
/* 1439 */               String sql = "alter table `user` add POST varchar(255) comment'岗位';";
/* 1440 */               Statement st = conn.createStatement();
/* 1441 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1446 */             boolean checkIsExistfield_3 = Verification.CheckIsExistfield(conn, driver, url, username, password, "user", "AVATAR_128");
/* 1447 */             if (!checkIsExistfield_3) {
/* 1448 */               String sql = "alter table `user` add AVATAR_128 varchar(255) comment'128头像';";
/* 1449 */               Statement st = conn.createStatement();
/* 1450 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1455 */             boolean checkIsExistfield_4 = Verification.CheckIsExistfield(conn, driver, url, username, password, "email", "withdraw_flag");
/* 1456 */             if (!checkIsExistfield_4) {
/* 1457 */               String sql = "alter table `email` add withdraw_flag  varchar(1) default 0 comment'撤回状态（0-未撤回，1-撤回)';";
/* 1458 */               Statement st = conn.createStatement();
/* 1459 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1464 */             boolean checkIsExistfield_5 = Verification.CheckIsExistfield(conn, driver, url, username, password, "sms_body", "IS_ATTACH");
/* 1465 */             if (!checkIsExistfield_5) {
/* 1466 */               String sql = "alter table `sms_body` add IS_ATTACH varchar(255) comment'附件标识';";
/* 1467 */               Statement st = conn.createStatement();
/* 1468 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1473 */             boolean checkIsExistfield_6 = Verification.CheckIsExistfield(conn, driver, url, username, password, "im_message", "REAL_URL");
/* 1474 */             if (!checkIsExistfield_6) {
/* 1475 */               String sql = "alter table `im_message` add REAL_URL varchar(255) comment'真实路径';";
/* 1476 */               Statement st = conn.createStatement();
/* 1477 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1482 */             boolean isExistFunction_11 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2043");
/* 1483 */             if (!isExistFunction_11) {
/* 1484 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`, `ISOPEN_NEW`) VALUES ('2043', '5010', '足迹查询', 'Footprint query', '足迹査詢', NULL, NULL, NULL, 'footprint/index', '', '0');";
/* 1485 */               Statement st = conn.createStatement();
/* 1486 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1491 */             boolean isExistFunction_12 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2044");
/* 1492 */             if (!isExistFunction_12) {
/* 1493 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`, `ISOPEN_NEW`) VALUES ('2044', '0139', '消息历史记录', 'Chat record', '消息歷史記錄', NULL, NULL, NULL, 'spirit/webChatRecord', '', NULL);";
/* 1494 */               Statement st = conn.createStatement();
/* 1495 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1500 */             boolean isExistTable_5 = Verification.CheckIsExistTable(conn, driver, url, username, password, "im_chatlist");
/* 1501 */             if (!isExistTable_5) {
/* 1502 */               String sql = "CREATE TABLE IF NOT EXISTS  `im_chatlist` (\n  `LIST_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '云办公用户UID',\n  `FROM_UID` varchar(255) DEFAULT NULL COMMENT '云办公发消息人UID',\n  `TO_UID` varchar(255) DEFAULT NULL COMMENT '云办公接收消息人UID',\n  `OF_FROM` varchar(255) DEFAULT NULL COMMENT 'OF发消息人UID',\n  `OF_TO` varchar(255) DEFAULT NULL COMMENT 'OF收消息人UID',\n  `LAST_TIME` varchar(255) DEFAULT NULL COMMENT '最后消息时间',\n  `LAST_ATIME` varchar(255) DEFAULT NULL COMMENT '入库时间',\n  `LAST_CONTENT` text COMMENT '最后消息内容',\n  `LAST_FILE_ID` varchar(255) DEFAULT NULL,\n  `LAST_FILE_NAME` varchar(255) DEFAULT NULL,\n  `LAST_THUMBNAIL_URL` varchar(255) DEFAULT NULL,\n  `TYPE` varchar(255) DEFAULT NULL,\n  `MSG_TYPE` char(1) DEFAULT '1' COMMENT '会话类型（0单聊，1群聊）',\n  `UID_IGNORE` varchar(255) DEFAULT NULL COMMENT '会话列表忽略标记',\n  `UUID` varchar(255) DEFAULT NULL,\n  `msg_free` varchar(255) DEFAULT NULL,\n  PRIMARY KEY (`LIST_ID`),\n  KEY `LAST_TIME` (`LAST_TIME`),\n  KEY `FROM_UID` (`FROM_UID`),\n  KEY `TO_UID` (`TO_UID`)\n) ENGINE=InnoDB AUTO_INCREMENT=219 DEFAULT CHARSET=utf8 COMMENT='会话列表';";
/*      */ 
/* 1524 */               Statement st = conn.createStatement();
/* 1525 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1530 */             boolean isExistFunction_13 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3023");
/* 1531 */             if (!isExistFunction_13) {
/* 1532 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`, `ISOPEN_NEW`) VALUES ('3023', '2001', '邮件统计', 'Mail statistics', '\\r\\n邮件统计\\r\\n郵件統計', NULL, NULL, NULL, 'email/eamilStatis', '', NULL);";
/* 1533 */               Statement st = conn.createStatement();
/* 1534 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1539 */             boolean isExistfield = Verification.CheckIsExistfield(conn, driver, url, username, password, "interface", "ATTACHMENT_ID3");
/* 1540 */             if (!isExistfield) {
/* 1541 */               String sql = "alter table `interface` add ATTACHMENT_ID3 text comment'app界面附件';";
/* 1542 */               Statement st = conn.createStatement();
/* 1543 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1548 */             boolean isExistfield_1 = Verification.CheckIsExistfield(conn, driver, url, username, password, "interface", "ATTACHMENT_NAME3");
/* 1549 */             if (!isExistfield_1) {
/* 1550 */               String sql = "alter table `interface` add ATTACHMENT_NAME3 text comment'app界面附件';";
/* 1551 */               Statement st = conn.createStatement();
/* 1552 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1557 */             boolean isExistfield_2 = Verification.CheckIsExistfield(conn, driver, url, username, password, "interface", "ATTACHMENT_ID4");
/* 1558 */             if (!isExistfield_2) {
/* 1559 */               String sql = "alter table `interface` add ATTACHMENT_ID4 text comment'apps首页附件';";
/* 1560 */               Statement st = conn.createStatement();
/* 1561 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1566 */             boolean isExistfield_3 = Verification.CheckIsExistfield(conn, driver, url, username, password, "interface", "ATTACHMENT_NAME4");
/* 1567 */             if (!isExistfield_3) {
/* 1568 */               String sql = "alter table `interface` add ATTACHMENT_NAME4 text comment'apps首页附件';";
/* 1569 */               Statement st = conn.createStatement();
/* 1570 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1575 */             boolean checkIsExistFunction = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2005");
/* 1576 */             if (checkIsExistFunction == true) {
/* 1577 */               String sql = "update sys_function set MENU_ID ='0138' where FUNC_ID=2005;";
/* 1578 */               Statement st = conn.createStatement();
/* 1579 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1584 */             boolean checkIsExistFunction_1 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2031");
/* 1585 */             if (checkIsExistFunction_1 == true) {
/* 1586 */               String sql = "update sys_function set MENU_ID ='2030' where FUNC_ID=2031;";
/* 1587 */               Statement st = conn.createStatement();
/* 1588 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1593 */             boolean checkIsExistFunction_2 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2032");
/* 1594 */             if (checkIsExistFunction_2 == true) {
/* 1595 */               String sql = "update sys_function set MENU_ID ='203001' where FUNC_ID=2032;";
/* 1596 */               Statement st = conn.createStatement();
/* 1597 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1602 */             boolean checkIsExistFunction_3 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2033");
/* 1603 */             if (checkIsExistFunction_3 == true) {
/* 1604 */               String sql = "update sys_function set MENU_ID ='203002' where FUNC_ID=2033;";
/* 1605 */               Statement st = conn.createStatement();
/* 1606 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1611 */             boolean checkIsExistFunction_4 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2034");
/* 1612 */             if (checkIsExistFunction_4 == true) {
/* 1613 */               String sql = "update sys_function set MENU_ID ='203003' where FUNC_ID=2034;";
/* 1614 */               Statement st = conn.createStatement();
/* 1615 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1620 */             boolean checkIsExistFunction_5 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2024");
/* 1621 */             if (checkIsExistFunction_5 == true) {
/* 1622 */               String sql = "update sys_function set MENU_ID ='2020' where FUNC_ID=2024;";
/* 1623 */               Statement st = conn.createStatement();
/* 1624 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1629 */             boolean checkIsExistFunction_6 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2025");
/* 1630 */             if (checkIsExistFunction_6 == true) {
/* 1631 */               String sql = "update sys_function set MENU_ID ='202001' where FUNC_ID=2025;";
/* 1632 */               Statement st = conn.createStatement();
/* 1633 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1638 */             boolean checkIsExistFunction_7 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2026");
/* 1639 */             if (checkIsExistFunction_7 == true) {
/* 1640 */               String sql = "update sys_function set MENU_ID ='202002' where FUNC_ID=2026;";
/* 1641 */               Statement st = conn.createStatement();
/* 1642 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1647 */             boolean checkIsExistFunction_8 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2013");
/* 1648 */             if (checkIsExistFunction_8 == true) {
/* 1649 */               String sql = "update sys_function set MENU_ID ='2040' where FUNC_ID=2013;";
/* 1650 */               Statement st = conn.createStatement();
/* 1651 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1656 */             boolean checkIsExistFunction_9 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2014");
/* 1657 */             if (checkIsExistFunction_9 == true) {
/* 1658 */               String sql = "update sys_function set MENU_ID ='204001' where FUNC_ID=2014;";
/* 1659 */               Statement st = conn.createStatement();
/* 1660 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1665 */             boolean checkIsExistFunction_10 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2015");
/* 1666 */             if (checkIsExistFunction_10 == true) {
/* 1667 */               String sql = "update sys_function set MENU_ID ='204002' where FUNC_ID=2015;";
/* 1668 */               Statement st = conn.createStatement();
/* 1669 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1674 */             boolean checkIsExistFunction_11 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2040");
/* 1675 */             if (checkIsExistFunction_11 == true) {
/* 1676 */               String sql = "update sys_function set MENU_ID ='6065' where FUNC_ID=2040;";
/* 1677 */               Statement st = conn.createStatement();
/* 1678 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1683 */             boolean checkIsExistFunction_12 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2041");
/* 1684 */             if (checkIsExistFunction_12 == true) {
/* 1685 */               String sql = "update sys_function set MENU_ID ='606501' where FUNC_ID=2041;";
/* 1686 */               Statement st = conn.createStatement();
/* 1687 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1692 */             boolean checkIsExistFunction_13 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3022");
/* 1693 */             if (!checkIsExistFunction_13) {
/* 1694 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`, `ISOPEN_NEW`) VALUES ('3022', '1040', '工作监控', 'Work monitoring', '工作監控', NULL, NULL, NULL, 'workflow/workMonitoring', '', '0');";
/* 1695 */               Statement st = conn.createStatement();
/* 1696 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1701 */             boolean isExistMenu = Verification.CheckIsExistMenu(conn, driver, url, username, password, "70");
/* 1702 */             if (!isExistMenu) {
/* 1703 */               String sql = "INSERT INTO `sys_menu` (`MENU_ID`, `MENU_NAME`, `MENU_NAME1`, `MENU_NAME2`, `MENU_NAME3`, `MENU_NAME4`, `MENU_NAME5`, `MENU_EXT`, `IMAGE`) VALUES ('70', '档案管理', 'file management', '檔案管理', '', '', '', '', 'resource');";
/* 1704 */               Statement st = conn.createStatement();
/* 1705 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1710 */             boolean existFunction_4 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3024");
/* 1711 */             if (!existFunction_4) {
/* 1712 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`, `ISOPEN_NEW`) VALUES ('3024', '7001', '卷库管理', '\\r\\nLibrary management', '卷庫管理', NULL, NULL, NULL, 'rmsRollRoom/manage', '', '0');";
/* 1713 */               Statement st = conn.createStatement();
/* 1714 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1719 */             boolean existFunction = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3026");
/* 1720 */             if (!existFunction) {
/* 1721 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`, `ISOPEN_NEW`) VALUES ('3026', '7002', '案卷管理', NULL, NULL, NULL, NULL, NULL, 'rmsRoll/index', '', '0');";
/* 1722 */               Statement st = conn.createStatement();
/* 1723 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1728 */             boolean existFunction_1 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3027");
/* 1729 */             if (!existFunction_1) {
/* 1730 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`, `ISOPEN_NEW`) VALUES ('3027', '7003', '文件管理', NULL, NULL, NULL, NULL, NULL, 'rmsFile/index', '', '0');";
/* 1731 */               Statement st = conn.createStatement();
/* 1732 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1737 */             boolean existFunction_2 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3028");
/* 1738 */             if (!existFunction_2) {
/* 1739 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`, `ISOPEN_NEW`) VALUES ('3028', '7004', '档案销毁', NULL, NULL, NULL, NULL, NULL, 'rmsFile/toDestroyed', '', '0');";
/* 1740 */               Statement st = conn.createStatement();
/* 1741 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1746 */             boolean isExistTable = Verification.CheckIsExistTable(conn, driver, url, username, password, "rms_file");
/* 1747 */             if (!isExistTable) {
/* 1748 */               String sql = "CREATE TABLE IF NOT EXISTS `rms_file` (\n  `FILE_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `ROLL_ID` int(11) NOT NULL DEFAULT '0' COMMENT '对应RMS_ROLL表ROLL_ID',\n  `ADD_USER` varchar(20) NOT NULL DEFAULT '' COMMENT '添加人',\n  `ADD_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '添加时间',\n  `DEL_USER` varchar(20) NOT NULL DEFAULT '' COMMENT '删除人',\n  `DEL_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '删除时间',\n  `MOD_USER` varchar(20) NOT NULL DEFAULT '' COMMENT '修改人',\n  `MOD_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '修改时间',\n  `CONFIRM_USER` varchar(20) NOT NULL DEFAULT '' COMMENT '预留',\n  `FILE_CODE` varchar(200) NOT NULL DEFAULT '' COMMENT '文件号',\n  `FILE_TITLE` varchar(200) NOT NULL DEFAULT '' COMMENT '文件标题',\n  `FILE_TITLE0` varchar(200) NOT NULL DEFAULT '' COMMENT '文件辅标题',\n  `FILE_SUBJECT` varchar(200) NOT NULL DEFAULT '' COMMENT '文件主题词',\n  `SEND_UNIT` varchar(200) NOT NULL DEFAULT '' COMMENT '发文单位',\n  `SEND_DATE` date NOT NULL DEFAULT '0000-00-00' COMMENT '发文日期',\n  `SECRET` varchar(200) NOT NULL DEFAULT '' COMMENT '密级(1-普密,4-秘密,3-机密,2-绝密)',\n  `URGENCY` varchar(200) NOT NULL DEFAULT '' COMMENT '紧急等级(1-员工类型,2-普级)',\n  `FILE_KIND` varchar(200) NOT NULL DEFAULT '' COMMENT '公文类别(1-A,2-B,3-C,4-D)',\n  `FILE_TYPE` varchar(200) NOT NULL DEFAULT '' COMMENT '文件分类(1-公文,2-资料)',\n  `FILE_PAGE` varchar(20) NOT NULL DEFAULT '' COMMENT '文件页数',\n  `PRINT_PAGE` varchar(20) NOT NULL DEFAULT '' COMMENT '打印页数',\n  `BORROW` char(1) NOT NULL DEFAULT '0' COMMENT '借阅审批(0-否,1-是)',\n  `REMARK` varchar(200) NOT NULL DEFAULT '' COMMENT '备注',\n  `ATTACHMENT_ID` text NOT NULL COMMENT '附件ID',\n  `ATTACHMENT_NAME` text NOT NULL COMMENT '附件名称',\n  `BORROW_STATUS` char(1) NOT NULL DEFAULT '0' COMMENT '预留',\n  `CONFIRM_STATUS` char(1) NOT NULL DEFAULT '0' COMMENT '预留',\n  `DOWNLOAD_YN` int(1) NOT NULL DEFAULT '1' COMMENT '预留',\n  `ISAUDIT` char(1) NOT NULL DEFAULT '1' COMMENT '查看附件是否需要审批(0-否,1-是)',\n  `DOWNLOAD` int(1) NOT NULL DEFAULT '1' COMMENT '允许下载Office附件(0-否,1-是)',\n  `PRINT` int(1) NOT NULL DEFAULT '1' COMMENT '允许打印Office附件(0-否,1-是)',\n  PRIMARY KEY (`FILE_ID`),\n  KEY `ROLL_ID` (`ROLL_ID`),\n  KEY `ADD_USER` (`ADD_USER`),\n  KEY `DEL_USER` (`DEL_USER`)\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=gbk COMMENT='文件管理';";
/*      */ 
/* 1785 */               Statement st = conn.createStatement();
/* 1786 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1791 */             boolean isExistTable_10 = Verification.CheckIsExistTable(conn, driver, url, username, password, "rms_lend");
/* 1792 */             if (!isExistTable_10) {
/* 1793 */               String sql = "CREATE TABLE IF NOT EXISTS `rms_lend` (\n  `LEND_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `FILE_ID` int(11) NOT NULL DEFAULT '0' COMMENT '对应RMS_FILE表FILE_ID',\n  `USER_ID` varchar(20) NOT NULL DEFAULT '' COMMENT '借阅人',\n  `ADD_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '添加时间',\n  `LEND_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '申请时间',\n  `RETURN_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '归还时间',\n  `ALLOW_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '审批时间',\n  `ALLOW` char(1) NOT NULL DEFAULT '0' COMMENT '允许状态(0-待批准借阅,1-已批准借阅,2-未批准借阅,3-已归还借阅)',\n  `APPROVE` varchar(254) NOT NULL COMMENT '借阅人',\n  `DELETE_FLAG` char(1) NOT NULL DEFAULT '0' COMMENT '删除状态(0-未删除,1-已删除)',\n  `OPERATOR` varchar(254) NOT NULL COMMENT '审批人',\n  PRIMARY KEY (`LEND_ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=gbk COMMENT='文件借阅';";
/*      */ 
/* 1807 */               Statement st = conn.createStatement();
/* 1808 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1813 */             boolean isExistTable_11 = Verification.CheckIsExistTable(conn, driver, url, username, password, "rms_roll");
/* 1814 */             if (!isExistTable_11) {
/* 1815 */               String sql = "CREATE TABLE IF NOT EXISTS `rms_roll` (\n  `ROLL_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `ROOM_ID` int(11) NOT NULL DEFAULT '0' COMMENT '对应RMS_ROLL_ROOM表ROOM_ID',\n  `DEPT_ID` int(11) NOT NULL DEFAULT '0' COMMENT '部门ID',\n  `ROLL_CODE` varchar(200) NOT NULL DEFAULT '' COMMENT '案卷号',\n  `ROLL_NAME` varchar(200) NOT NULL DEFAULT '' COMMENT '案卷名称',\n  `YEARS` varchar(100) NOT NULL DEFAULT '' COMMENT '归卷年代',\n  `BEGIN_DATE` date NOT NULL DEFAULT '0000-00-00' COMMENT '起始日期',\n  `END_DATE` date NOT NULL DEFAULT '0000-00-00' COMMENT '终止日期',\n  `DEADLINE` varchar(100) NOT NULL DEFAULT '' COMMENT '保管期限',\n  `SECRET` varchar(200) NOT NULL DEFAULT '' COMMENT '案卷密级(1-普密,4-秘密,3-机密,2-绝密)',\n  `CATEGORY_NO` varchar(100) NOT NULL DEFAULT '' COMMENT '全宗号',\n  `CATALOG_NO` varchar(100) NOT NULL DEFAULT '' COMMENT '目录号',\n  `ARCHIVE_NO` varchar(100) NOT NULL DEFAULT '' COMMENT '档案馆号',\n  `BOX_NO` varchar(100) NOT NULL DEFAULT '' COMMENT '保险箱号',\n  `MICRO_NO` varchar(100) NOT NULL DEFAULT '' COMMENT '缩微号',\n  `CERTIFICATE_KIND` varchar(200) NOT NULL DEFAULT '' COMMENT '凭证类别(1-XXX1,2-XXX2)',\n  `CERTIFICATE_START` varchar(200) NOT NULL DEFAULT '' COMMENT '起始凭证编号',\n  `CERTIFICATE_END` varchar(200) NOT NULL DEFAULT '' COMMENT '截至凭证编号',\n  `ROLL_PAGE` varchar(200) NOT NULL DEFAULT '' COMMENT '页数',\n  `BORROW` char(1) NOT NULL DEFAULT '0' COMMENT '借阅审批(0-否,1-是)',\n  `REMARK` varchar(200) NOT NULL DEFAULT '' COMMENT '备注',\n  `MANAGE_USER` text NOT NULL COMMENT '预留',\n  `READ_USER` text NOT NULL COMMENT '预留',\n  `ADD_USER` varchar(20) NOT NULL DEFAULT '' COMMENT '添加人',\n  `ADD_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '添加时间',\n  `DEL_USER` varchar(20) NOT NULL DEFAULT '' COMMENT '删除人',\n  `DEL_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '删除时间',\n  `MOD_USER` varchar(20) NOT NULL DEFAULT '' COMMENT '修改人',\n  `STATUS` char(1) NOT NULL DEFAULT '0' COMMENT '案卷状态(0-未封卷,1-已封卷)',\n  `MOD_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '修改时间',\n  `BZJG` varchar(254) NOT NULL COMMENT '预留',\n  `MANAGER` varchar(254) NOT NULL COMMENT '案卷管理员',\n  `EDIT_DEPT` varchar(200) NOT NULL COMMENT '编制机构',\n  PRIMARY KEY (`ROLL_ID`),\n  KEY `ROOM_ID` (`ROOM_ID`),\n  KEY `MANAGER` (`MANAGER`)\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=gbk COMMENT='案卷表';";
/*      */ 
/* 1853 */               Statement st = conn.createStatement();
/* 1854 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1860 */             boolean isExistTable_12 = Verification.CheckIsExistTable(conn, driver, url, username, password, "rms_roll_room");
/* 1861 */             if (!isExistTable_12) {
/* 1862 */               String sql = "CREATE TABLE IF NOT EXISTS `rms_roll_room` (\n  `ROOM_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `DEPT_ID` int(11) NOT NULL DEFAULT '0' COMMENT '所属部门',\n  `ROOM_CODE` varchar(200) NOT NULL DEFAULT '' COMMENT '卷库号',\n  `ROOM_NAME` varchar(200) NOT NULL DEFAULT '' COMMENT '卷库名称',\n  `CATEGORY_NO` varchar(100) NOT NULL DEFAULT '' COMMENT '全宗号',\n  `CATALOG_NO` varchar(100) NOT NULL DEFAULT '' COMMENT '目录号',\n  `REMARK` varchar(200) NOT NULL DEFAULT '' COMMENT '备注',\n  `MANAGE_USER` text NOT NULL COMMENT '卷库管理员',\n  `ADD_USER` varchar(20) NOT NULL DEFAULT '' COMMENT '添加人',\n  `ADD_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '添加时间',\n  `DEL_USER` varchar(20) NOT NULL DEFAULT '' COMMENT '删除人',\n  `DEL_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '删除时间',\n  `MOD_USER` varchar(20) NOT NULL DEFAULT '' COMMENT '修改人',\n  `MOD_TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '修改时间',\n  `VIEW_DEPT_ID` text COMMENT '卷库内文件的借阅范围',\n  PRIMARY KEY (`ROOM_ID`),\n  UNIQUE KEY `ROOM_ID` (`ROOM_ID`),\n  KEY `ROOM_ID_2` (`ROOM_ID`,`ROOM_CODE`)\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=gbk COMMENT='卷库表';";
/*      */ 
/* 1882 */               Statement st = conn.createStatement();
/* 1883 */               st.executeUpdate(sql);
/*      */             }
/* 1885 */             boolean checkIsExistfield1 = Verification.CheckIsExistfield(conn, driver, url, username, password, "seal", "DEPT_ID");
/* 1886 */             if (checkIsExistfield1 == true) {
/* 1887 */               String sql = "alter table seal modify DEPT_ID  varchar(255);";
/* 1888 */               Statement st = conn.createStatement();
/* 1889 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1894 */             boolean existfield = Verification.CheckIsExistfield(conn, driver, url, username, password, "im_room", "RNAMR");
/* 1895 */             if (existfield == true) {
/* 1896 */               String sql = "ALTER TABLE im_room MODIFY COLUMN RNAMR text;";
/* 1897 */               Statement st = conn.createStatement();
/* 1898 */               st.executeUpdate(sql);
/*      */             }
/* 1900 */             boolean existfield_1 = Verification.CheckIsExistfield(conn, driver, url, username, password, "im_room", "RMEMBER_UID");
/* 1901 */             if (existfield_1 == true) {
/* 1902 */               String sql = "ALTER TABLE im_room MODIFY COLUMN RMEMBER_UID text;";
/* 1903 */               Statement st = conn.createStatement();
/* 1904 */               st.executeUpdate(sql);
/*      */             }
/* 1906 */             boolean existfield_2 = Verification.CheckIsExistfield(conn, driver, url, username, password, "user", "POST_ID");
/* 1907 */             if (!existfield_2) {
/* 1908 */               String sql = "alter table `user` add POST_ID int(255) comment'职务ID 对应user_post表';";
/* 1909 */               Statement st = conn.createStatement();
/* 1910 */               st.executeUpdate(sql);
/*      */             }
/* 1912 */             boolean existfield_3 = Verification.CheckIsExistfield(conn, driver, url, username, password, "user", "JOB_ID");
/* 1913 */             if (!existfield_3) {
/* 1914 */               String sql = "alter table `user` add JOB_ID int(11) comment'岗位ID 对应user_job表';";
/* 1915 */               Statement st = conn.createStatement();
/* 1916 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1921 */             boolean isExistThing = Verification.CheckIsExistThing(conn, driver, url, username, password, "340");
/* 1922 */             boolean isExistThing_1 = Verification.CheckIsExistThing(conn, driver, url, username, password, "341");
/* 1923 */             boolean isExistThing_2 = Verification.CheckIsExistThing(conn, driver, url, username, password, "342");
/* 1924 */             boolean isExistThing_3 = Verification.CheckIsExistThing(conn, driver, url, username, password, "343");
/* 1925 */             if ((isExistThing == true) && (isExistThing_1 == true) && (isExistThing_2 == true) && (isExistThing_3 == true)) {
/* 1926 */               String sql = "UPDATE flow_trigger SET `PLUGIN`=0 WHERE ID=340 OR ID=341 OR ID=342 OR ID=343;";
/* 1927 */               Statement st = conn.createStatement();
/* 1928 */               st.executeUpdate(sql);
/*      */             }
/* 1930 */             boolean existUserPriv = Verification.CheckIsExistUserPriv(conn, driver, url, username, password, "1");
/* 1931 */             if (existUserPriv == true) {
/* 1932 */               String sql = "update `user_priv` set FUNC_ID_STR='1,4,147,148,7,8,9,16,2011,2005,2044,11,130,5,131,3022,134,37,135,136,2002,2003,3023,24,196,105,119,80,2024,2025,2026,2031,2032,2033,2034,2013,2014,2015,43,17,18,19,15,36,76,77,27,60,481,502,504,505,503,26,506,508,2043,85,86,2006,88,87,138,89,222,137,126,179,607,539,127,238,128,2040,2041,90,91,92,93,94,95,96,118,3001,3002,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,3013,3014,3015,3016,3024,3026,3027,3028,3017,3018,3019,3020,56,2001,30,31,33,32,3029,3030,2007,2008,2009,2010,57,197,78,2047,178,104,121,99,2042,2004,626,38,' where USER_PRIV ='1';";
/* 1933 */               Statement st = conn.createStatement();
/* 1934 */               st.executeUpdate(sql);
/*      */             }
/* 1936 */             boolean isExistUserFunction = Verification.CheckIsExistUserFunction(conn, driver, url, username, password, "1");
/* 1937 */             if (isExistUserFunction == true) {
/* 1938 */               String sql = "UPDATE `user_function` SET `user_func_id_str`='1,4,147,148,7,8,9,16,2011,2005,2044,11,130,5,131,3022,134,37,135,136,2002,2003,3023,24,196,105,119,80,2024,2025,2026,2031,2032,2033,2034,2013,2014,2015,43,17,18,19,15,36,76,77,27,60,481,502,504,505,503,26,506,508,2043,85,86,2006,88,87,138,89,222,137,126,179,607,539,127,238,128,2040,2041,90,91,92,93,94,95,96,118,3001,3002,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,3013,3014,3015,3016,3024,3026,3027,3028,3017,3018,3019,3020,56,2001,30,31,33,32,3029,3030,2007,2008,2009,2010,57,197,78,2047,178,104,121,99,2042,2004,626,38,' WHERE `uid`='1';";
/* 1939 */               Statement st = conn.createStatement();
/* 1940 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1946 */             boolean checkIsExistAttend = Verification.CheckIsExistfield(conn, driver, url, username, password, "attachment", "SIZE");
/* 1947 */             if (!checkIsExistAttend) {
/* 1948 */               String sql = "alter table `attachment` add SIZE varchar(255) comment'附件大小';";
/* 1949 */               Statement st = conn.createStatement();
/* 1950 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1955 */             boolean existTable = Verification.CheckIsExistTable(conn, driver, url, username, password, "htmldocument");
/* 1956 */             if (!existTable) {
/* 1957 */               String sql = "CREATE TABLE IF NOT EXISTS `htmldocument` (\n  `AutoNo` int(11) NOT NULL AUTO_INCREMENT,\n  `DocumentID` varchar(50) DEFAULT NULL,\n  `XYBH` varchar(64) DEFAULT NULL,\n  `BMJH` varchar(20) DEFAULT NULL,\n  `JF` varchar(128) DEFAULT NULL,\n  `YF` varchar(128) DEFAULT NULL,\n  `HZNR` text,\n  `QLZR` text,\n  `CPMC` varchar(254) DEFAULT NULL,\n  `DGSL` varchar(254) DEFAULT NULL,\n  `DGRQ` varchar(254) DEFAULT NULL,\n  PRIMARY KEY (`AutoNo`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;";
/*      */ 
/* 1971 */               Statement st = conn.createStatement();
/* 1972 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 1977 */             boolean existTable_1 = Verification.CheckIsExistTable(conn, driver, url, username, password, "htmlhistory");
/* 1978 */             if (!existTable_1) {
/* 1979 */               String sql = "CREATE TABLE IF NOT EXISTS `htmlhistory` (\n  `AutoNo` int(11) NOT NULL AUTO_INCREMENT,\n  `DocumentID` varchar(50) DEFAULT NULL,\n  `SignatureID` varchar(50) DEFAULT NULL,\n  `SignatureName` varchar(50) DEFAULT NULL,\n  `SignatureUnit` varchar(50) DEFAULT NULL,\n  `SignatureUser` varchar(50) DEFAULT NULL,\n  `KeySN` varchar(50) DEFAULT NULL,\n  `SignatureSN` varchar(200) DEFAULT NULL,\n  `SignatureGUID` varchar(50) DEFAULT NULL,\n  `IP` varchar(50) DEFAULT NULL,\n  `LogType` varchar(20) DEFAULT NULL,\n  `LogTime` varchar(20) DEFAULT NULL,\n  PRIMARY KEY (`AutoNo`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;";
/*      */ 
/* 1994 */               Statement st = conn.createStatement();
/* 1995 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2000 */             boolean existTable_2 = Verification.CheckIsExistTable(conn, driver, url, username, password, "htmlsignature");
/* 2001 */             if (!existTable_2) {
/* 2002 */               String sql = "CREATE TABLE IF NOT EXISTS `htmlsignature` (\n  `DocumentID` varchar(254) DEFAULT NULL,\n  `Signature` text,\n  `SignatureID` varchar(64) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;";
/*      */ 
/* 2007 */               Statement st = conn.createStatement();
/* 2008 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2013 */             boolean existTable_3 = Verification.CheckIsExistTable(conn, driver, url, username, password, "htmlsignature");
/* 2014 */             if (!existTable_3) {
/* 2015 */               String sql = "CREATE TABLE IF NOT EXISTS `htmlsignature` (\n  `DocumentID` varchar(254) DEFAULT NULL,\n  `Signature` text,\n  `SignatureID` varchar(64) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;";
/*      */ 
/* 2020 */               Statement st = conn.createStatement();
/* 2021 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2026 */             boolean existTable_4 = Verification.CheckIsExistTable(conn, driver, url, username, password, "kg_relation_keysign");
/* 2027 */             if (!existTable_4)
/*      */             {
/* 2029 */               String sql = "CREATE TABLE IF NOT EXISTS `kg_relation_keysign` (\n  `RELATION_ID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '关系ID',  `KEY_ID` int(11) DEFAULT NULL,  `SIGN_ID` int(11) DEFAULT NULL,  PRIMARY KEY (`RELATION_ID`)) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;";
/*      */ 
/* 2035 */               Statement st = conn.createStatement();
/* 2036 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2041 */             boolean b = Verification.CheckIsExistKgSign(conn, driver, url, username, password, "1");
/* 2042 */             if (!b) {
/* 2043 */               String sql = "INSERT INTO `kg_relation_keysign` VALUES ('1', '1', '1');";
/* 2044 */               Statement st = conn.createStatement();
/* 2045 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2050 */             boolean check_1 = Verification.CheckIsExistKgSign(conn, driver, url, username, password, "1");
/* 2051 */             if (!check_1) {
/* 2052 */               String sql = "INSERT INTO `kg_relation_keysign` VALUES ('1', '1', '1');";
/* 2053 */               Statement st = conn.createStatement();
/* 2054 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2059 */             boolean check_2 = Verification.CheckIsExistKgSign(conn, driver, url, username, password, "2");
/* 2060 */             if (!check_2) {
/* 2061 */               String sql = "INSERT INTO `kg_relation_keysign` VALUES ('2', '1', '2');";
/* 2062 */               Statement st = conn.createStatement();
/* 2063 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2068 */             boolean check_3 = Verification.CheckIsExistKgSign(conn, driver, url, username, password, "3");
/* 2069 */             if (!check_3) {
/* 2070 */               String sql = "INSERT INTO `kg_relation_keysign` VALUES ('3', '1', '3');";
/* 2071 */               Statement st = conn.createStatement();
/* 2072 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2077 */             boolean check_4 = Verification.CheckIsExistKgSign(conn, driver, url, username, password, "4");
/* 2078 */             if (!check_4) {
/* 2079 */               String sql = "INSERT INTO `kg_relation_keysign` VALUES ('4', '1', '5');";
/* 2080 */               Statement st = conn.createStatement();
/* 2081 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2086 */             boolean check_5 = Verification.CheckIsExistKgSign(conn, driver, url, username, password, "5");
/* 2087 */             if (!check_5) {
/* 2088 */               String sql = "INSERT INTO `kg_relation_keysign` VALUES ('5', '2', '4');";
/* 2089 */               Statement st = conn.createStatement();
/* 2090 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2095 */             boolean existTable_5 = Verification.CheckIsExistTable(conn, driver, url, username, password, "kg_relation_keyuser");
/* 2096 */             if (!existTable_5) {
/* 2097 */               String sql = "CREATE TABLE IF NOT EXISTS `kg_relation_keyuser` (\n  `KEY_USER_ID` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `USER_ID` int(11) DEFAULT NULL COMMENT '用户UID',\n  `KEY_ID` int(11) DEFAULT NULL COMMENT 'keyId',\n  PRIMARY KEY (`KEY_USER_ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;";
/*      */ 
/* 2103 */               Statement st = conn.createStatement();
/* 2104 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2109 */             boolean check_6 = Verification.CheckIsExistKgkeyUser(conn, driver, url, username, password, "1");
/* 2110 */             if (!check_6) {
/* 2111 */               String sql = "INSERT INTO `kg_relation_keyuser` VALUES ('1', '1', '1');";
/* 2112 */               Statement st = conn.createStatement();
/* 2113 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2118 */             boolean check_7 = Verification.CheckIsExistKgkeyUser(conn, driver, url, username, password, "2");
/* 2119 */             if (!check_7) {
/* 2120 */               String sql = "INSERT INTO `kg_relation_keyuser` VALUES ('2', '1', '2');";
/* 2121 */               Statement st = conn.createStatement();
/* 2122 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2127 */             boolean existTable_6 = Verification.CheckIsExistTable(conn, driver, url, username, password, "kg_signature");
/* 2128 */             if (!existTable_6) {
/* 2129 */               String sql = "CREATE TABLE IF NOT EXISTS `kg_signature` (\n  `SIGNATURE_ID` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `SIGNATURE_NAME` varchar(255) DEFAULT NULL COMMENT '签章名称',\n  `SIGNATURE_KGID` varchar(255) DEFAULT NULL COMMENT '金格签章id',\n  `SIGNATURE_STATUS` int(4) DEFAULT '0' COMMENT '使用状态 0正常 -1禁制使用',\n  PRIMARY KEY (`SIGNATURE_ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;";
/*      */ 
/* 2136 */               Statement st = conn.createStatement();
/* 2137 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2142 */             boolean check_8 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "1");
/* 2143 */             if (!check_8) {
/* 2144 */               String sql = "INSERT INTO `kg_signature` VALUES ('1', '金格演示公章', 'BCxhL9mkEgv2dFTcpQHz8uUtNiqIXG35+rYJj1lfeb/KO4=yaWV0DSAPnw67oZsRM', '0');";
/* 2145 */               Statement st = conn.createStatement();
/* 2146 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2151 */             boolean check_12 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "2");
/* 2152 */             if (!check_12) {
/* 2153 */               String sql = "INSERT INTO `kg_signature` VALUES ('2', '金格演示合同章', 'M=dUfvWPYlTLAOt70V9p1x5nRFm2aizZc3b/w+8SGhXj6JEoIQyNHCkrsguDeqB4K', '0');";
/* 2154 */               Statement st = conn.createStatement();
/* 2155 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2160 */             boolean check_9 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "3");
/* 2161 */             if (!check_9) {
/* 2162 */               String sql = "INSERT INTO `kg_signature` VALUES ('3', '金格科技私章1X2.24', '0myIz5atpgOPbM8wYqiLWnAuBJXDrSjE9U376VFkT=KxeRhf+vosNC1Gc4/HdZQl2', '0');";
/* 2163 */               Statement st = conn.createStatement();
/* 2164 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2169 */             boolean check_10 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "4");
/* 2170 */             if (!check_10) {
/* 2171 */               String sql = "INSERT INTO `kg_signature` VALUES ('4', '金格演示发票专用章', '0wAeTICLvyhqi1KJkOgsarYNQ5BUGEmSV8Z23P94lfno=M6pjFDdxuz+/cX7bHWRt', '0');";
/* 2172 */               Statement st = conn.createStatement();
/* 2173 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2178 */             boolean check_11 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "5");
/* 2179 */             if (!check_11) {
/* 2180 */               String sql = "INSERT INTO `kg_signature` VALUES ('5', '金格演示合同章1', '8x2=rAUbHvF3/4dQDaptogRz70mfMI6LNCsnKV9SqYiPWXZE1euhyTkj+JOwlGB5c', '0');";
/* 2181 */               Statement st = conn.createStatement();
/* 2182 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2187 */             boolean existTable_7 = Verification.CheckIsExistTable(conn, driver, url, username, password, "kg_signkey");
/* 2188 */             if (!existTable_7) {
/* 2189 */               String sql = "CREATE TABLE IF NOT EXISTS `kg_signkey` (\n  `SIGNKEY_ID` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `SIGNKEY_NAME` varchar(255) DEFAULT NULL COMMENT '名称',\n  `SIGNKEY_KEYSN` varchar(255) DEFAULT NULL COMMENT '金格签章keysn',\n  `SIGNKEY_STATUS` int(4) DEFAULT '0' COMMENT '使用状态 0正常 -1 停止使用',\n  PRIMARY KEY (`SIGNKEY_ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;";
/*      */ 
/* 2196 */               Statement st = conn.createStatement();
/* 2197 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2202 */             boolean check_13 = Verification.CheckIsExistkgSignKey(conn, driver, url, username, password, "1");
/* 2203 */             if (!check_13) {
/* 2204 */               String sql = "INSERT INTO `kg_signkey` VALUES ('1', '测试盘1', 'C84CF78C359E757E', '0');";
/* 2205 */               Statement st = conn.createStatement();
/* 2206 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2211 */             boolean check_14 = Verification.CheckIsExistkgSignKey(conn, driver, url, username, password, "2");
/* 2212 */             if (!check_14) {
/* 2213 */               String sql = "INSERT INTO `kg_signkey` VALUES ('2', '测试盘2', '44871127553E5D00', '0');";
/* 2214 */               Statement st = conn.createStatement();
/* 2215 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2221 */             boolean existfield1 = Verification.CheckIsExistfield(conn, driver, url, username, password, "user_ext", "EMAIL_RECENT_LINKMAN");
/* 2222 */             if (existfield1 == true) {
/* 2223 */               String sql = "ALTER TABLE user_ext  MODIFY COLUMN EMAIL_RECENT_LINKMAN mediumtext NOT NULL;";
/* 2224 */               Statement st = conn.createStatement();
/* 2225 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2230 */             boolean infoCenterOrder = Verification.CheckIsExistTable(conn, driver, url, username, password, "info_center");
/* 2231 */             if (!infoCenterOrder) {
/* 2232 */               String sql = "CREATE TABLE IF NOT EXISTS `info_center` (\n  `INFO_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增',\n  `INFO_NO` int(11) NOT NULL DEFAULT '0' COMMENT '默认应用序号',\n  `INFO_NAME1` varchar(50) NOT NULL COMMENT '应用名称（简体中文）',\n  `INFO_NAME2` varchar(50) NOT NULL COMMENT '应用名称（英文）',\n  `INFO_NAME3` varchar(50) NOT NULL COMMENT '应用名称（繁体中文）',\n  `INFO_NAME4` varchar(50) NOT NULL COMMENT '应用名称',\n  `INFO_NAME5` varchar(50) NOT NULL COMMENT '应用名称',\n  `INFO_FUNC_ID` int(11) NOT NULL DEFAULT '0' COMMENT '对应的FUNC_ID',\n  PRIMARY KEY (`INFO_ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COMMENT='首页信息表';";
/*      */ 
/* 2243 */               Statement st = conn.createStatement();
/* 2244 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2249 */             boolean infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "1");
/* 2250 */             if (!infoCenter) {
/* 2251 */               String sql = "INSERT INTO `info_center` VALUES ('1', '1', '公告通知', 'Notice', '公告通知', '', '', '4');";
/* 2252 */               Statement st = conn.createStatement();
/* 2253 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2258 */             boolean infoCenter2 = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "2");
/* 2259 */             if (!infoCenter2) {
/* 2260 */               String sql = "INSERT INTO `info_center` VALUES ('2', '2', '新闻', 'News', '新聞', '', '', '147');";
/* 2261 */               Statement st = conn.createStatement();
/* 2262 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2267 */             boolean infoCenter3 = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "3");
/* 2268 */             if (!infoCenter3) {
/* 2269 */               String sql = "INSERT INTO `info_center` VALUES ('3', '3', '邮件箱', 'Email', '郵件箱', '', '', '1');";
/* 2270 */               Statement st = conn.createStatement();
/* 2271 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2276 */             boolean infoCenter4 = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "4");
/* 2277 */             if (!infoCenter4) {
/* 2278 */               String sql = "INSERT INTO `info_center` VALUES ('4', '4', '待办流程', 'Backlog process', '待辦流程', '', '', '5');";
/* 2279 */               Statement st = conn.createStatement();
/* 2280 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2285 */             boolean infoCenter5 = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "5");
/* 2286 */             if (!infoCenter5) {
/* 2287 */               String sql = "INSERT INTO `info_center` VALUES ('5', '5', '日程安排', 'Schedule', '日程安排', '', '', '8');";
/* 2288 */               Statement st = conn.createStatement();
/* 2289 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2294 */             boolean infoCenter6 = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "6");
/* 2295 */             if (!infoCenter6) {
/* 2296 */               String sql = "INSERT INTO `info_center` VALUES ('6', '6', '常用功能', 'Common function', '常用功能', '', '', '0');";
/* 2297 */               Statement st = conn.createStatement();
/* 2298 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2303 */             boolean infoCenter7 = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "7");
/* 2304 */             if (!infoCenter7) {
/* 2305 */               String sql = "INSERT INTO `info_center` VALUES ('7', '7', '日志', 'Log', '日誌', '', '', '9');";
/* 2306 */               Statement st = conn.createStatement();
/* 2307 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2312 */             boolean infoCenter8 = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "8");
/* 2313 */             if (!infoCenter8) {
/* 2314 */               String sql = "INSERT INTO `info_center` VALUES ('8', '8', '文件柜', 'File Cabinet', '文件櫃', '', '', '15');";
/* 2315 */               Statement st = conn.createStatement();
/* 2316 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2321 */             boolean infoCenter9 = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "9");
/* 2322 */             if (!infoCenter9) {
/* 2323 */               String sql = "INSERT INTO `info_center` VALUES ('9', '9', '网络硬盘', 'Network Disk', '網絡硬盤', '', '', '76');";
/* 2324 */               Statement st = conn.createStatement();
/* 2325 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2330 */             boolean b1 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attend_out", "LEADER_ID");
/* 2331 */             if (b1 == true) {
/* 2332 */               String sql = "DROP INDEX LEADER_ID ON attend_out;";
/* 2333 */               Statement st = conn.createStatement();
/* 2334 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2340 */             boolean existInfoCenter = Verification.CheckIsExistfield(conn, driver, url, username, password, "attend_out", "LEADER_ID");
/* 2341 */             if (existInfoCenter == true) {
/* 2342 */               String sql = "ALTER TABLE attend_out  MODIFY COLUMN LEADER_ID text NOT NULL;";
/* 2343 */               Statement st = conn.createStatement();
/* 2344 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2350 */             boolean b2 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attend_leave", "LEADER_ID");
/* 2351 */             if (b2 == true) {
/* 2352 */               String sql = "DROP INDEX LEADER_ID ON attend_leave;";
/* 2353 */               Statement st = conn.createStatement();
/* 2354 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2360 */             boolean existInfoCenter2 = Verification.CheckIsExistfield(conn, driver, url, username, password, "attend_leave", "LEADER_ID");
/* 2361 */             if (existInfoCenter2 == true) {
/* 2362 */               String sql = "ALTER TABLE attend_leave  MODIFY COLUMN LEADER_ID text NOT NULL;";
/* 2363 */               Statement st = conn.createStatement();
/* 2364 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2371 */             boolean existInfoCenter3 = Verification.CheckIsExistfield(conn, driver, url, username, password, "attend_evection", "LEADER_ID");
/* 2372 */             if (existInfoCenter3 == true) {
/* 2373 */               String sql = "ALTER TABLE attend_evection  MODIFY COLUMN LEADER_ID text NOT NULL;";
/* 2374 */               Statement st = conn.createStatement();
/* 2375 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2381 */             boolean widget = Verification.CheckIsExistWidget(conn, driver, url, username, password, "8");
/* 2382 */             if (!widget) {
/* 2383 */               String sql = "INSERT INTO `widget` (`ID`, `NAME`, `AID`, `TID`, `DATA`, `IS_SET`, `IS_ON`, `NO`) VALUES ('8', '公文', '0', '0', 'document', '1', '1', '7');";
/* 2384 */               Statement st = conn.createStatement();
/* 2385 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2390 */             boolean user_1 = Verification.CheckIsExistUser(conn, driver, url, username, password, "1");
/* 2391 */             if (user_1 == true) {
/* 2392 */               String sql = "UPDATE user SET NOT_MOBILE_LOGIN  = 0 WHERE UID =1;";
/* 2393 */               Statement st = conn.createStatement();
/* 2394 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2399 */             boolean user_2 = Verification.CheckIsExistUser(conn, driver, url, username, password, "106");
/* 2400 */             if (user_2 == true) {
/* 2401 */               String sql = "UPDATE user SET NOT_MOBILE_LOGIN  = 0 WHERE UID =106;";
/* 2402 */               Statement st = conn.createStatement();
/* 2403 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2408 */             boolean user_3 = Verification.CheckIsExistUser(conn, driver, url, username, password, "107");
/* 2409 */             if (user_3 == true) {
/* 2410 */               String sql = "UPDATE user SET NOT_MOBILE_LOGIN  = 0 WHERE UID =107;";
/* 2411 */               Statement st = conn.createStatement();
/* 2412 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2417 */             boolean user_4 = Verification.CheckIsExistUser(conn, driver, url, username, password, "108");
/* 2418 */             if (user_4 == true) {
/* 2419 */               String sql = "UPDATE user SET NOT_MOBILE_LOGIN  = 0 WHERE UID =108;";
/* 2420 */               Statement st = conn.createStatement();
/* 2421 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2426 */             boolean user_5 = Verification.CheckIsExistUser(conn, driver, url, username, password, "109");
/* 2427 */             if (user_5 == true) {
/* 2428 */               String sql = "UPDATE user SET NOT_MOBILE_LOGIN  = 0 WHERE UID =109;";
/* 2429 */               Statement st = conn.createStatement();
/* 2430 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2435 */             boolean user_6 = Verification.CheckIsExistUser(conn, driver, url, username, password, "110");
/* 2436 */             if (user_6 == true) {
/* 2437 */               String sql = "UPDATE user SET NOT_MOBILE_LOGIN  = 0 WHERE UID =110;";
/* 2438 */               Statement st = conn.createStatement();
/* 2439 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2444 */             boolean user_7 = Verification.CheckIsExistUser(conn, driver, url, username, password, "111");
/* 2445 */             if (user_7 == true) {
/* 2446 */               String sql = "UPDATE user SET NOT_MOBILE_LOGIN  = 0 WHERE UID =111;";
/* 2447 */               Statement st = conn.createStatement();
/* 2448 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2453 */             boolean user_8 = Verification.CheckIsExistUser(conn, driver, url, username, password, "112");
/* 2454 */             if (user_8 == true) {
/* 2455 */               String sql = "UPDATE user SET NOT_MOBILE_LOGIN  = 0 WHERE UID =112;";
/* 2456 */               Statement st = conn.createStatement();
/* 2457 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2462 */             boolean user_9 = Verification.CheckIsExistUser(conn, driver, url, username, password, "113");
/* 2463 */             if (user_9 == true) {
/* 2464 */               String sql = "UPDATE user SET NOT_MOBILE_LOGIN  = 0 WHERE UID =113;";
/* 2465 */               Statement st = conn.createStatement();
/* 2466 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2470 */             boolean user_10 = Verification.CheckIsExistUser(conn, driver, url, username, password, "114");
/* 2471 */             if (user_10 == true) {
/* 2472 */               String sql = "UPDATE user SET NOT_MOBILE_LOGIN  = 0 WHERE UID =114;";
/* 2473 */               Statement st = conn.createStatement();
/* 2474 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2479 */             boolean isExistFunction = Verification.CheckIsExistFunction(conn, driver, url, username, password, "56");
/* 2480 */             if (isExistFunction == true) {
/* 2481 */               String sql = "UPDATE sys_function SET FUNC_CODE ='@unitsetup' WHERE FUNC_ID =56;";
/* 2482 */               Statement st = conn.createStatement();
/* 2483 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2488 */             boolean isExistFunction1 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "57");
/* 2489 */             if (isExistFunction1 == true) {
/* 2490 */               String sql = "UPDATE sys_function SET FUNC_CODE ='@officesetting' WHERE FUNC_ID =57;";
/* 2491 */               Statement st = conn.createStatement();
/* 2492 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2497 */             boolean existFunction1 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "134");
/* 2498 */             if (existFunction1 == true) {
/* 2499 */               String sql = "UPDATE sys_function SET FUNC_CODE ='@workflowsetting' WHERE FUNC_ID =134;";
/* 2500 */               Statement st = conn.createStatement();
/* 2501 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2506 */             boolean existFunction2 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2007");
/* 2507 */             if (existFunction2 == true) {
/* 2508 */               String sql = "UPDATE sys_function SET FUNC_CODE ='@mechanismsetting' WHERE FUNC_ID =2007;";
/* 2509 */               Statement st = conn.createStatement();
/* 2510 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2515 */             boolean existFunction3 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3006");
/* 2516 */             if (existFunction3 == true) {
/* 2517 */               String sql = "UPDATE sys_function SET FUNC_CODE ='@receiptmanagement' WHERE FUNC_ID =3006;";
/* 2518 */               Statement st = conn.createStatement();
/* 2519 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2524 */             boolean existFunction5 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "502");
/* 2525 */             if (existFunction5 == true) {
/* 2526 */               String sql = "UPDATE sys_function SET FUNC_CODE ='@hr/training/plan' WHERE FUNC_ID =502;";
/* 2527 */               Statement st = conn.createStatement();
/* 2528 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2533 */             boolean table = Verification.CheckIsExistTable(conn, driver, url, username, password, "app_log");
/* 2534 */             if (!table) {
/* 2535 */               String sql = "CREATE TABLE IF NOT EXISTS `app_log` (\n  `LOG_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '唯一自增ID',\n  `USER_ID` varchar(20) NOT NULL DEFAULT '' COMMENT 'OA用户名',\n  `TIME` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '操作时间',\n  `MODULE` varchar(10) NOT NULL DEFAULT '' COMMENT '模块id',\n  `OPP_ID` varchar(20) NOT NULL DEFAULT '' COMMENT '操作记录的id',\n  `TYPE` varchar(10) NOT NULL DEFAULT '' COMMENT '操作类型',\n  `REMARK` mediumtext NOT NULL COMMENT '备注',\n  PRIMARY KEY (`LOG_ID`),\n  KEY `MODULE_OPP_USER_TYPE` (`MODULE`,`OPP_ID`,`USER_ID`,`TYPE`)\n) ENGINE=InnoDB AUTO_INCREMENT=1301 DEFAULT CHARSET=gbk COMMENT='各模块操作日志表';";
/*      */ 
/* 2546 */               Statement st = conn.createStatement();
/* 2547 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2552 */             boolean isExistCode = Verification.CheckIsExistCode(conn, driver, url, username, password, "function", "");
/* 2553 */             if (!isExistCode) {
/* 2554 */               String sql = "INSERT INTO `sys_code` (`CODE_NO`, `CODE_NAME`, `CODE_NAME1`, `CODE_NAME2`, `CODE_NAME3`, `CODE_NAME4`, `CODE_NAME5`, `CODE_NAME6`, `CODE_ORDER`, `PARENT_NO`, `CODE_FLAG`, `CODE_EXT`) VALUES ('function', '职能', NULL, NULL, NULL, NULL, NULL, NULL, '01', '', '0', '');";
/* 2555 */               Statement st = conn.createStatement();
/* 2556 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2561 */             boolean isExistCode1 = Verification.CheckIsExistCode(conn, driver, url, username, password, "1", "function");
/* 2562 */             if (!isExistCode1) {
/* 2563 */               String sql = "INSERT INTO `sys_code` (`CODE_NO`, `CODE_NAME`, `CODE_NAME1`, `CODE_NAME2`, `CODE_NAME3`, `CODE_NAME4`, `CODE_NAME5`, `CODE_NAME6`, `CODE_ORDER`, `PARENT_NO`, `CODE_FLAG`, `CODE_EXT`) VALUES ('1', '管理', NULL, NULL, NULL, NULL, NULL, NULL, '01', 'function', '0', '');";
/* 2564 */               Statement st = conn.createStatement();
/* 2565 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2570 */             boolean isExistCode2 = Verification.CheckIsExistCode(conn, driver, url, username, password, "2", "function");
/* 2571 */             if (!isExistCode2) {
/* 2572 */               String sql = "INSERT INTO `sys_code` (`CODE_NO`, `CODE_NAME`, `CODE_NAME1`, `CODE_NAME2`, `CODE_NAME3`, `CODE_NAME4`, `CODE_NAME5`, `CODE_NAME6`, `CODE_ORDER`, `PARENT_NO`, `CODE_FLAG`, `CODE_EXT`) VALUES ('2', '技术', NULL, NULL, NULL, NULL, NULL, NULL, '02', 'function', '0', '');";
/* 2573 */               Statement st = conn.createStatement();
/* 2574 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2579 */             boolean isExistCode3 = Verification.CheckIsExistCode(conn, driver, url, username, password, "3", "function");
/* 2580 */             if (!isExistCode3) {
/* 2581 */               String sql = "INSERT INTO `sys_code` (`CODE_NO`, `CODE_NAME`, `CODE_NAME1`, `CODE_NAME2`, `CODE_NAME3`, `CODE_NAME4`, `CODE_NAME5`, `CODE_NAME6`, `CODE_ORDER`, `PARENT_NO`, `CODE_FLAG`, `CODE_EXT`) VALUES ('3', '行政', NULL, NULL, NULL, NULL, NULL, NULL, '03', 'function', '0', '');";
/* 2582 */               Statement st = conn.createStatement();
/* 2583 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2588 */             boolean existFunctionfu = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3029");
/* 2589 */             if (!existFunctionfu) {
/* 2590 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`, `ISOPEN_NEW`) VALUES ('3029', 'z00411', '岗位管理', 'post management', '崗位管理', NULL, NULL, NULL, 'sys/getPostmanagement', '', '0');";
/* 2591 */               Statement st = conn.createStatement();
/* 2592 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2597 */             boolean existFunction4 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3030");
/* 2598 */             if (!existFunction4) {
/* 2599 */               String sql = "INSERT INTO `sys_function` (`FUNC_ID`, `MENU_ID`, `FUNC_NAME`, `FUNC_NAME1`, `FUNC_NAME2`, `FUNC_NAME3`, `FUNC_NAME4`, `FUNC_NAME5`, `FUNC_CODE`, `FUNC_EXT`, `ISOPEN_NEW`) VALUES ('3030', 'z00412', '职务管理', 'Job management', '職務管理', NULL, NULL, NULL, 'duties/dutiesjsp', '', NULL);";
/* 2600 */               Statement st = conn.createStatement();
/* 2601 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2607 */             boolean isExistTablez = Verification.CheckIsExistTable(conn, driver, url, username, password, "user_post");
/* 2608 */             if (!isExistTablez) {
/* 2609 */               String sql = "CREATE TABLE IF NOT EXISTS `user_post` (\n  `POST_ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增id',\n  `POST_NAME` varchar(255) DEFAULT NULL COMMENT '职务名称',\n  `TYPE` int(11) DEFAULT NULL COMMENT '职务类型',\n  `LEVEL` varchar(255) DEFAULT NULL COMMENT '职务级别',\n  `POST_NO` varchar(255) DEFAULT NULL COMMENT '职务编号',\n  `DEPT_ID` int(11) DEFAULT NULL COMMENT '所属部门',\n  `DUTY` varchar(255) DEFAULT NULL COMMENT '职责',\n  `DESCRIPTION` text COMMENT '职务描述',\n  `ATTACHMENT_ID` varchar(255) DEFAULT NULL COMMENT '附件id',\n  `ATTACHMENT_NAME` varchar(255) DEFAULT NULL COMMENT '附件名称',\n  PRIMARY KEY (`POST_ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;";
/*      */ 
/* 2622 */               Statement st = conn.createStatement();
/* 2623 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2628 */             boolean isExistJob = Verification.CheckIsExistTable(conn, driver, url, username, password, "user_job");
/* 2629 */             if (!isExistJob) {
/* 2630 */               String sql = "CREATE TABLE IF NOT EXISTS `user_job` (\n  `JOB_ID` int(11) NOT NULL AUTO_INCREMENT,\n  `JOB_NAME` varchar(255) DEFAULT NULL,\n  `TYPE` int(11) DEFAULT NULL,\n  `LEVEL` varchar(255) DEFAULT NULL,\n  `JOB_NO` varchar(255) DEFAULT NULL,\n  `DEPT_ID` int(11) DEFAULT NULL,\n  `JOB_PLAN` varchar(255) DEFAULT NULL,\n  `DUTY` varchar(255) DEFAULT NULL,\n  `DESCRIPTION` text,\n  `ATTACHMENT_ID` varchar(255) DEFAULT NULL,\n  `ATTACHMENT_NAME` varchar(255) DEFAULT NULL,\n  PRIMARY KEY (`JOB_ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n";
/*      */ 
/* 2644 */               Statement st = conn.createStatement();
/* 2645 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2657 */             boolean existCode = Verification.CheckCode(conn, driver, url, username, password, "976");
/* 2658 */             if (!existCode) {
/* 2659 */               String sql = "INSERT INTO `sys_code` VALUES ('976', '141', '加班申请', null, null, null, null, null, null, '141', 'KQQJTYPE', '0', '');";
/* 2660 */               Statement st = conn.createStatement();
/* 2661 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2668 */             boolean function = Verification.CheckIsExistFunction(conn, driver, url, username, password, "539");
/* 2669 */             if (function == true) {
/* 2670 */               String sql = "UPDATE sys_function SET FUNC_NAME1='Office Distribution' WHERE FUNC_ID =539;";
/* 2671 */               Statement st = conn.createStatement();
/* 2672 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2677 */             boolean checkIsExistFunctionq = Verification.CheckIsExistFunction(conn, driver, url, username, password, "179");
/* 2678 */             if (checkIsExistFunctionq == true) {
/* 2679 */               String sql = "UPDATE sys_function SET FUNC_NAME1='Office supplies application' WHERE FUNC_ID =179;";
/* 2680 */               Statement st = conn.createStatement();
/* 2681 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2686 */             boolean checkIsExistFunction1 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3026");
/* 2687 */             if (checkIsExistFunction1 == true) {
/* 2688 */               String sql = "UPDATE sys_function SET FUNC_NAME1='supervision of the record',FUNC_NAME2='案卷管理' WHERE FUNC_ID =3026;";
/* 2689 */               Statement st = conn.createStatement();
/* 2690 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2695 */             boolean checkIsExistFunction2 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3027");
/* 2696 */             if (checkIsExistFunction2 == true) {
/* 2697 */               String sql = "UPDATE sys_function SET FUNC_NAME1='file management',FUNC_NAME2='文件管理' WHERE FUNC_ID =3027;";
/* 2698 */               Statement st = conn.createStatement();
/* 2699 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2704 */             boolean checkIsExistFunction3 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3028");
/* 2705 */             if (checkIsExistFunction3 == true) {
/* 2706 */               String sql = "UPDATE sys_function SET FUNC_NAME1='Archives destruction',FUNC_NAME2='檔案銷毀' WHERE FUNC_ID =3028;";
/* 2707 */               Statement st = conn.createStatement();
/* 2708 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2713 */             boolean checkIsExistFunction4 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3023");
/* 2714 */             if (checkIsExistFunction4 == true) {
/* 2715 */               String sql = "UPDATE sys_function SET FUNC_NAME2='郵件統計' WHERE FUNC_ID =3023;";
/* 2716 */               Statement st = conn.createStatement();
/* 2717 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2724 */             boolean isExistfield_10 = Verification.CheckIsExistfield(conn, driver, url, username, password, "user", "MYTABLE_MID");
/* 2725 */             if (!isExistfield_10) {
/* 2726 */               String sql = "alter table `user` add MYTABLE_MID varchar(200) DEFAULT 'ALL' comment'中间的桌面模块';";
/* 2727 */               Statement st = conn.createStatement();
/* 2728 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2734 */             boolean isExistfield_11 = Verification.CheckIsExistfield(conn, driver, url, username, password, "user", "ID_NUMBER");
/* 2735 */             if (!isExistfield_11) {
/* 2736 */               String sql = "alter table `user` add ID_NUMBER varchar(100) DEFAULT NULL comment'身份证号';";
/* 2737 */               Statement st = conn.createStatement();
/* 2738 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2744 */             boolean isExistfield_12 = Verification.CheckIsExistfield(conn, driver, url, username, password, "user", "TRA_NUMBER");
/* 2745 */             if (!isExistfield_12) {
/* 2746 */               String sql = "alter table `user` add TRA_NUMBER varchar(100) DEFAULT NULL comment'培训编号';";
/* 2747 */               Statement st = conn.createStatement();
/* 2748 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2754 */             boolean isExistfield_13 = Verification.CheckIsExistfield(conn, driver, url, username, password, "user", "SUBJECT");
/* 2755 */             if (!isExistfield_13) {
/* 2756 */               String sql = "alter table `user` add SUBJECT varchar(100) DEFAULT NULL comment'学科';";
/* 2757 */               Statement st = conn.createStatement();
/* 2758 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2765 */             boolean IMexist = Verification.CheckIsExistfield(conn, driver, url, username, password, "im_room", "ROOM_STATUS");
/* 2766 */             if (!IMexist) {
/* 2767 */               String sql = "alter table im_room add ROOM_STATUS int default 0 comment '群状态（0：正常，-1：群解散）';";
/* 2768 */               Statement st = conn.createStatement();
/* 2769 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2776 */             boolean spaceLimit = Verification.CheckIsExistfield(conn, driver, url, username, password, "file_sort", "SPACE_LIMIT");
/* 2777 */             if (!spaceLimit) {
/* 2778 */               String sql = "alter table file_sort add SPACE_LIMIT int(11)";
/* 2779 */               Statement st = conn.createStatement();
/* 2780 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2786 */             boolean fileSort = Verification.CheckIsExistfield(conn, driver, url, username, password, "file_content", "FILE_SIZE");
/* 2787 */             if (!fileSort) {
/* 2788 */               String sql = "alter table file_content add FILE_SIZE varchar(255) DEFAULT NULL COMMENT '文件大小'";
/* 2789 */               Statement st = conn.createStatement();
/* 2790 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2795 */             boolean sys_function = Verification.CheckIsExistFunction(conn, driver, url, username, password, "3014");
/* 2796 */             if (sys_function == true) {
/* 2797 */               String sql = "UPDATE sys_function SET FUNC_CODE ='@document/setting' WHERE FUNC_ID =3014;";
/* 2798 */               Statement st = conn.createStatement();
/* 2799 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2804 */             boolean drop_table = Verification.CheckIsExistTable(conn, driver, url, username, password, "kg_signature");
/* 2805 */             if (drop_table == true) {
/* 2806 */               String sql = "DROP TABLE IF EXISTS `kg_signature`;";
/* 2807 */               Statement st = conn.createStatement();
/* 2808 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2813 */             boolean create_table = Verification.CheckIsExistTable(conn, driver, url, username, password, "kg_signature");
/* 2814 */             if (!create_table) {
/* 2815 */               String sql = "CREATE TABLE IF NOT EXISTS `kg_signature` (\n  `SIGNATURE_ID` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `SIGNATURE_NAME` varchar(255) DEFAULT NULL COMMENT '签章名称',\n  `SIGNATURE_UNIT` varchar(255) DEFAULT NULL COMMENT '单位名称',\n  `SIGNATURE_KGID` varchar(255) DEFAULT NULL COMMENT '金格签章id',\n  `SIGNATURE_STATUS` int(4) DEFAULT '0' COMMENT '使用状态 0正常，1禁制使用，-1删除',\n  PRIMARY KEY (`SIGNATURE_ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;";
/*      */ 
/* 2823 */               Statement st = conn.createStatement();
/* 2824 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2829 */             boolean insert = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "1");
/* 2830 */             if (!insert) {
/* 2831 */               String sql = "INSERT INTO `kg_signature` VALUES ('1', '金格演示公章', '北京高速波科技有限公司', 'BCxhL9mkEgv2dFTcpQHz8uUtNiqIXG35+rYJj1lfeb/KO4=yaWV0DSAPnw67oZsRM', '-1');";
/* 2832 */               Statement st = conn.createStatement();
/* 2833 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2838 */             boolean insert_1 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "2");
/* 2839 */             if (!insert_1) {
/* 2840 */               String sql = "INSERT INTO `kg_signature` VALUES ('2', '金格演示合同章', '北京高速波科技有限公司', 'M=dUfvWPYlTLAOt70V9p1x5nRFm2aizZc3b/w+8SGhXj6JEoIQyNHCkrsguDeqB4K', '0');";
/* 2841 */               Statement st = conn.createStatement();
/* 2842 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2847 */             boolean insert_2 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "3");
/* 2848 */             if (!insert_2) {
/* 2849 */               String sql = "INSERT INTO `kg_signature` VALUES ('3', '金格科技私章1X2.24', '北京高速波科技有限公司', '0myIz5atpgOPbM8wYqiLWnAuBJXDrSjE9U376VFkT=KxeRhf+vosNC1Gc4/HdZQl2', '0');";
/* 2850 */               Statement st = conn.createStatement();
/* 2851 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2856 */             boolean insert_3 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "4");
/* 2857 */             if (!insert_3) {
/* 2858 */               String sql = "INSERT INTO `kg_signature` VALUES ('4', '金格演示发票专用章', '北京高速波科技有限公司', '0wAeTICLvyhqi1KJkOgsarYNQ5BUGEmSV8Z23P94lfno=M6pjFDdxuz+/cX7bHWRt', '0');";
/* 2859 */               Statement st = conn.createStatement();
/* 2860 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2865 */             boolean insert_4 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "5");
/* 2866 */             if (!insert_4) {
/* 2867 */               String sql = "INSERT INTO `kg_signature` VALUES ('5', '金格演示合同章1', '北京高速波科技有限公司', '8x2=rAUbHvF3/4dQDaptogRz70mfMI6LNCsnKV9SqYiPWXZE1euhyTkj+JOwlGB5c', '0');";
/* 2868 */               Statement st = conn.createStatement();
/* 2869 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2874 */             boolean insert_5 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "6");
/* 2875 */             if (!insert_5) {
/* 2876 */               String sql = "INSERT INTO `kg_signature` VALUES ('6', '演示公章', '南京有限公司', '3KLmcTy0VR5FjgoAWeb7YBO24C1JsU8iqfzrQ9dNanu=MG/Sxk6ZwhtDEHXvlP+Ip', '0');";
/* 2877 */               Statement st = conn.createStatement();
/* 2878 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2883 */             boolean insert_6 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "7");
/* 2884 */             if (!insert_6) {
/* 2885 */               String sql = "INSERT INTO `kg_signature` VALUES ('7', '演示发票专用章', '有限公司', 'PFxBSYkjo80hi4H15=mfzdM97bX6GK3URc/+ENOnDAqQIvsTtaJZLwuyeglrWCVp2', '0');";
/* 2886 */               Statement st = conn.createStatement();
/* 2887 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2892 */             boolean insert_7 = Verification.CheckIsExistkgSignature(conn, driver, url, username, password, "8");
/* 2893 */             if (!insert_7) {
/* 2894 */               String sql = "INSERT INTO `kg_signature` VALUES ('8', '演示合同章', '科技有限公司', 'xytDQgAwfJ23=GvXWd1jShRl7BEeMib0+No/4UK9aT8CpcHm6VsOkqIuP5nLFYrzZ', '0');";
/* 2895 */               Statement st = conn.createStatement();
/* 2896 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2901 */             boolean Code = Verification.CheckIsExistCode(conn, driver, url, username, password, "01", "NOTIFY");
/* 2902 */             if (Code == true) {
/* 2903 */               String sql = "UPDATE `sys_code` SET`CODE_NO`='02', `CODE_ORDER`='02' WHERE `CODE_ID`='545';";
/* 2904 */               Statement st = conn.createStatement();
/* 2905 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2910 */             boolean Code_1 = Verification.CheckIsExistCode(conn, driver, url, username, password, "02", "NOTIFY");
/* 2911 */             if (Code_1 == true) {
/* 2912 */               String sql = "UPDATE `sys_code` SET`CODE_NO`='01', `CODE_ORDER`='01' WHERE `CODE_ID`='546';";
/* 2913 */               Statement st = conn.createStatement();
/* 2914 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2919 */             boolean sys_menu = Verification.CheckIsExistMenu(conn, driver, url, username, password, "70");
/* 2920 */             if (sys_menu == true) {
/* 2921 */               String sql = "UPDATE `sys_menu` SET`IMAGE`='record' WHERE `MENU_ID`='70';";
/* 2922 */               Statement st = conn.createStatement();
/* 2923 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2928 */             boolean num_1infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "1");
/* 2929 */             if (num_1infoCenter == true) {
/* 2930 */               String sql = "UPDATE `info_center` SET `INFO_ID`='1', `INFO_NO`='1', `INFO_NAME1`='公告通知', `INFO_NAME2`='Notice', `INFO_NAME3`='公告通知', `INFO_NAME4`='', `INFO_NAME5`='', `INFO_FUNC_ID`='4' WHERE (`INFO_ID`='1');";
/* 2931 */               Statement st = conn.createStatement();
/* 2932 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2937 */             boolean num_2infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "2");
/* 2938 */             if (num_2infoCenter == true) {
/* 2939 */               String sql = "UPDATE `info_center` SET `INFO_ID`='2', `INFO_NO`='2', `INFO_NAME1`='新闻', `INFO_NAME2`='News', `INFO_NAME3`='新聞', `INFO_NAME4`='', `INFO_NAME5`='', `INFO_FUNC_ID`='147' WHERE (`INFO_ID`='2');";
/* 2940 */               Statement st = conn.createStatement();
/* 2941 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2946 */             boolean num_3infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "3");
/* 2947 */             if (num_3infoCenter == true) {
/* 2948 */               String sql = "UPDATE `info_center` SET `INFO_ID`='3', `INFO_NO`='3', `INFO_NAME1`='邮件箱', `INFO_NAME2`='Email', `INFO_NAME3`='郵件箱', `INFO_NAME4`='', `INFO_NAME5`='', `INFO_FUNC_ID`='1' WHERE (`INFO_ID`='3');";
/* 2949 */               Statement st = conn.createStatement();
/* 2950 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2955 */             boolean num_4infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "4");
/* 2956 */             if (num_4infoCenter == true) {
/* 2957 */               String sql = "UPDATE `info_center` SET `INFO_ID`='4', `INFO_NO`='4', `INFO_NAME1`='待办流程', `INFO_NAME2`='Backlog process', `INFO_NAME3`='待辦流程', `INFO_NAME4`='', `INFO_NAME5`='', `INFO_FUNC_ID`='5' WHERE (`INFO_ID`='4');";
/* 2958 */               Statement st = conn.createStatement();
/* 2959 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2964 */             boolean num_5infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "5");
/* 2965 */             if (num_5infoCenter == true) {
/* 2966 */               String sql = "UPDATE `info_center` SET `INFO_ID`='5', `INFO_NO`='5', `INFO_NAME1`='日程安排', `INFO_NAME2`='Schedule', `INFO_NAME3`='日程安排', `INFO_NAME4`='', `INFO_NAME5`='', `INFO_FUNC_ID`='8' WHERE (`INFO_ID`='5');";
/* 2967 */               Statement st = conn.createStatement();
/* 2968 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2973 */             boolean num_6infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "6");
/* 2974 */             if (num_6infoCenter == true) {
/* 2975 */               String sql = "UPDATE `info_center` SET `INFO_ID`='6', `INFO_NO`='6', `INFO_NAME1`='常用功能', `INFO_NAME2`='Common function', `INFO_NAME3`='常用功能', `INFO_NAME4`='', `INFO_NAME5`='', `INFO_FUNC_ID`='0' WHERE (`INFO_ID`='6');";
/* 2976 */               Statement st = conn.createStatement();
/* 2977 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2982 */             boolean num_7infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "7");
/* 2983 */             if (num_7infoCenter == true) {
/* 2984 */               String sql = "UPDATE `info_center` SET `INFO_ID`='7', `INFO_NO`='7', `INFO_NAME1`='日志', `INFO_NAME2`='Log', `INFO_NAME3`='日誌', `INFO_NAME4`='', `INFO_NAME5`='', `INFO_FUNC_ID`='9' WHERE (`INFO_ID`='7');";
/* 2985 */               Statement st = conn.createStatement();
/* 2986 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 2991 */             boolean num_8infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "8");
/* 2992 */             if (num_8infoCenter == true) {
/* 2993 */               String sql = "UPDATE `info_center` SET `INFO_ID`='8', `INFO_NO`='8', `INFO_NAME1`='文件柜', `INFO_NAME2`='File Cabinet', `INFO_NAME3`='文件櫃', `INFO_NAME4`='', `INFO_NAME5`='', `INFO_FUNC_ID`='15' WHERE (`INFO_ID`='8');";
/* 2994 */               Statement st = conn.createStatement();
/* 2995 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3000 */             boolean num_9infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "9");
/* 3001 */             if (num_9infoCenter == true) {
/* 3002 */               String sql = "UPDATE `info_center` SET `INFO_ID`='9', `INFO_NO`='9', `INFO_NAME1`='网络硬盘', `INFO_NAME2`='Network Disk', `INFO_NAME3`='網絡硬盤', `INFO_NAME4`='', `INFO_NAME5`='', `INFO_FUNC_ID`='76' WHERE (`INFO_ID`='9');";
/* 3003 */               Statement st = conn.createStatement();
/* 3004 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3009 */             boolean num_10infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "10");
/* 3010 */             if (!num_10infoCenter) {
/* 3011 */               String sql = "INSERT INTO `info_center` (`INFO_ID`, `INFO_NO`, `INFO_NAME1`, `INFO_NAME2`, `INFO_NAME3`, `INFO_NAME4`, `INFO_NAME5`, `INFO_FUNC_ID`) VALUES ('10', '10', '会议通知', 'Meeting notice', '會議通知', '', '', '-1');";
/* 3012 */               Statement st = conn.createStatement();
/* 3013 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3018 */             boolean num_11infoCenter = Verification.CheckIsExistInfoCenter(conn, driver, url, username, password, "11");
/* 3019 */             if (!num_11infoCenter) {
/* 3020 */               String sql = "INSERT INTO `info_center` VALUES ('11', '11', '待办公文', 'To do document', '待辦公文', '', '', '3003');";
/* 3021 */               Statement st = conn.createStatement();
/* 3022 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3027 */             boolean checkIsExistfield2 = Verification.CheckIsExistfield(conn, driver, url, username, password, "schedule", "schedule_type");
/* 3028 */             if (checkIsExistfield2 == true) {
/* 3029 */               String sql = "ALTER TABLE `schedule`MODIFY COLUMN `schedule_type`  varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '活动类别' AFTER `create_time`;";
/* 3030 */               Statement st = conn.createStatement();
/* 3031 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3037 */             boolean checkIsExistportals = Verification.CheckIsExistTable(conn, driver, url, username, password, "portals1");
/* 3038 */             if (!checkIsExistportals) {
/* 3039 */               String sql = "alter table portals rename portals1";
/* 3040 */               Statement st = conn.createStatement();
/* 3041 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3046 */             boolean checkIsExistportals2 = Verification.CheckIsExistTable(conn, driver, url, username, password, "portals");
/* 3047 */             if (!checkIsExistportals2) {
/* 3048 */               String sql = "CREATE TABLE IF NOT EXISTS `portals` (\n  `portals_id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',\n  `portals_no` int(11) DEFAULT NULL COMMENT '排序号',\n  `portal_name` varchar(255) DEFAULT NULL COMMENT '门户名称',\n  `portal_type` int(11) DEFAULT NULL COMMENT '门户类型（0：系统门户；1：自定义门户）',\n  `portal_link` varchar(255) DEFAULT NULL COMMENT '系统门户关联地址',\n  `module_id` varchar(255) DEFAULT NULL COMMENT '自定义门户关联id',\n  `use_flag` int(11) DEFAULT NULL COMMENT '启用标记(0-停用,1-启用)',\n  `access_priv_dept` varchar(255) DEFAULT NULL COMMENT '授权部门',\n  `access_priv_priv` varchar(255) DEFAULT NULL COMMENT '授权角色',\n  `access_priv_user` varchar(255) DEFAULT NULL COMMENT '授权用户',\n  `access_priv` int(1) DEFAULT '0' COMMENT '是否授权（0所有人1指定授权）',\n  PRIMARY KEY (`portals_id`)\n) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;";
/*      */ 
/* 3062 */               Statement st = conn.createStatement();
/* 3063 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3068 */             boolean checkIsExistPriv = Verification.CheckIsExistfield(conn, driver, url, username, password, "portals", "access_priv");
/* 3069 */             if (!checkIsExistPriv) {
/* 3070 */               String sql = "alter table `portals` add access_priv int(1) DEFAULT '0' comment'是否授权（0所有人1指定授权）'";
/* 3071 */               Statement st = conn.createStatement();
/* 3072 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3077 */             boolean CheckIsExistPara = Verification.CheckIsExistParam(conn, driver, url, username, password, "PORTALS_TIME");
/* 3078 */             if (!CheckIsExistPara) {
/* 3079 */               String sql = "INSERT INTO `sys_para` (`PARA_NAME`, `PARA_VALUE`) VALUES ('PORTALS_TIME', '0');";
/* 3080 */               Statement st = conn.createStatement();
/* 3081 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3087 */             boolean IsExistfiled = Verification.CheckIsExistfield(conn, driver, url, username, password, "office_products", "PRO_ORDER");
/* 3088 */             if (IsExistfiled == true) {
/* 3089 */               String sql = "ALTER TABLE office_products  MODIFY COLUMN PRO_ORDER VARCHAR(11)";
/* 3090 */               Statement st = conn.createStatement();
/* 3091 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3097 */             boolean IsExistfiled_1 = Verification.CheckIsExistfield(conn, driver, url, username, password, "edu_training_plan", "T_BCWS");
/* 3098 */             if (IsExistfiled_1 == true) {
/* 3099 */               String sql = "ALTER TABLE edu_training_plan  MODIFY COLUMN T_BCWS decimal(65)";
/* 3100 */               Statement st = conn.createStatement();
/* 3101 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3107 */             boolean por_1 = Verification.CheckIsExistPor(conn, driver, url, username, password, "1");
/* 3108 */             if (!por_1) {
/* 3109 */               String sql = "INSERT INTO `portals` VALUES ('1', '1', '内网门户', '0', '', '', '1', '', '', '', '0')";
/* 3110 */               Statement st = conn.createStatement();
/* 3111 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3117 */             boolean por_2 = Verification.CheckIsExistPor(conn, driver, url, username, password, "2");
/* 3118 */             if (!por_2) {
/* 3119 */               String sql = "INSERT INTO `portals` VALUES ('2', '2', '工作门户', '0', '', '', '1', '', '', '', '0')";
/* 3120 */               Statement st = conn.createStatement();
/* 3121 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3127 */             boolean por_3 = Verification.CheckIsExistPor(conn, driver, url, username, password, "3");
/* 3128 */             if (!por_3) {
/* 3129 */               String sql = "INSERT INTO `portals` VALUES ('3', '3', '应用门户', '0', '', '', '1', '', '', '', '0')";
/* 3130 */               Statement st = conn.createStatement();
/* 3131 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3137 */             boolean por_4 = Verification.CheckIsExistPor(conn, driver, url, username, password, "4");
/* 3138 */             if (!por_4) {
/* 3139 */               String sql = "INSERT INTO `portals` VALUES ('4', '4', '管理门户', '0', '', '', '1', '', '', '', '0')";
/* 3140 */               Statement st = conn.createStatement();
/* 3141 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3146 */             boolean function1 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2042");
/* 3147 */             if (!function1) {
/* 3148 */               String sql = "INSERT INTO `sys_function` VALUES ('2042', 'z070', '短信设置', 'SMS settings', '簡訊設定', '', '', '', 'smsSettings/index', '', '0')";
/* 3149 */               Statement st = conn.createStatement();
/* 3150 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3155 */             boolean function2 = Verification.CheckIsExistFunction(conn, driver, url, username, password, "2047");
/* 3156 */             if (!function2) {
/* 3157 */               String sql = "INSERT INTO `sys_function` VALUES ('2047', 'z032', '门户设置', 'Portal settings', '門戶設定', null, null, null, 'portals/index', '', '0')";
/* 3158 */               Statement st = conn.createStatement();
/* 3159 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3164 */             boolean table_exist = Verification.CheckIsExistTable(conn, driver, url, username, password, "document_org");
/*      */             String sql;
/* 3165 */             if (!table_exist) {
/* 3166 */               sql = "CREATE TABLE IF NOT EXISTS `document_org` (\n  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增字段',\n  `title` varchar(255) DEFAULT NULL COMMENT '标题',\n  `key_word` varchar(255) DEFAULT NULL COMMENT '主题词',\n  `unit` varchar(255) DEFAULT NULL COMMENT '来文单位/发文单位',\n  `doc_no` varchar(255) DEFAULT NULL COMMENT '文号',\n  `urgency` varchar(255) DEFAULT NULL COMMENT '紧急程度(0急件1特急2加急)',\n  `secrecy` varchar(255) DEFAULT NULL COMMENT '机密等级(0秘密1机密2绝密)',\n  `main_delivery` varchar(255) DEFAULT NULL COMMENT '主送',\n  `copy_delivery` varchar(255) DEFAULT NULL COMMENT '抄送',\n  `deadline` int(11) DEFAULT NULL COMMENT '保存期限',\n  `copies` int(11) DEFAULT NULL COMMENT '份数',\n  `remark` text COMMENT '附注',\n  `creater` varchar(255) DEFAULT NULL COMMENT '发文人',\n  `create_dept` varchar(255) DEFAULT NULL COMMENT '发文部门',\n  `print_dept` varchar(255) DEFAULT NULL COMMENT '印发机关',\n  `print_date` date DEFAULT NULL COMMENT '印发日期',\n  `document_type` varchar(255) DEFAULT NULL COMMENT '公文类型(1收文0发文)',\n  `dispatch_type` varchar(255) DEFAULT NULL COMMENT '公文种类(公告、通告、通知。。。)',\n  `main_file` varchar(255) DEFAULT NULL COMMENT '正文ID',\n  `main_file_name` varchar(255) DEFAULT NULL COMMENT '正文名称',\n  `pages` int(11) DEFAULT NULL COMMENT '正文页数',\n  `content` text COMMENT '正文内容',\n  `main_aip_file` varchar(255) DEFAULT NULL COMMENT '版式正文ID',\n  `main_aip_file_name` varchar(255) DEFAULT NULL COMMENT '版式正文名称',\n  `public_flag` varchar(255) DEFAULT NULL COMMENT '拟公开属性（0不予公开1依申请公开2主动公开）',\n  `print_copies` int(11) DEFAULT NULL COMMENT '打印份数',\n  `print_user` varchar(11) DEFAULT NULL COMMENT '打印人',\n  `flow_id` int(11) DEFAULT NULL COMMENT '流程类型',\n  `run_id` int(11) DEFAULT NULL COMMENT '流水号',\n  `flow_run_name` varchar(255) DEFAULT NULL COMMENT '流程名称',\n  `flow_status` varchar(255) DEFAULT '0' COMMENT '流程状态（办理中0、已结束1）',\n  `flow_prcs` varchar(255) DEFAULT '1' COMMENT '流程步骤（当前处于什么步骤）',\n  `cur_user_id` varchar(255) DEFAULT NULL COMMENT '当前经办人id',\n  `all_user_id` varchar(255) DEFAULT NULL COMMENT '全部经办人id',\n  `transfer_flag` int(1) DEFAULT NULL COMMENT '转交状态(0-未转交 1-已转交)',\n  `org_flag` int(1) DEFAULT NULL COMMENT '是否是上级组织（0-不是上级组织 1-上级组织）',\n  `transfer_org` varchar(255) DEFAULT NULL COMMENT '转交组织',\n  `transfer_user` varchar(255) DEFAULT NULL COMMENT '转交人',\n  `transfer_receive_org` varchar(255) DEFAULT NULL COMMENT '转交后的接收组织',\n  `transfer_receive_user` varchar(255) DEFAULT NULL COMMENT '转交后的接收人',\n  `transfer_time` datetime DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '转交时间',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;";
/*      */             }
/*      */ 
/* 3216 */             boolean isExistTable_6 = Verification.CheckIsExistTable(conn, driver, url, username, password, "sms_settings");
/* 3217 */             if (!isExistTable_6) {
/* 3218 */               sql = "CREATE TABLE IF NOT EXISTS `sms_settings` (\n  `ID` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增ID',\n  `NAME` varchar(255) DEFAULT NULL COMMENT '网关名称',\n  `PROTOCOL` varchar(255) DEFAULT NULL COMMENT '协议',\n  `HOST` varchar(255) DEFAULT NULL COMMENT '主机',\n  `PORT` varchar(255) DEFAULT '' COMMENT '接口',\n  `USERNAME` varchar(255) DEFAULT '' COMMENT '账号参数名',\n  `PWD` varchar(255) DEFAULT NULL COMMENT '密码参数名',\n  `CONTENT_FIELD` varchar(255) DEFAULT NULL COMMENT '内容字段参数名',\n  `CODE` varchar(255) DEFAULT NULL COMMENT '内容编码参数名',\n  `MOBILE` varchar(255) DEFAULT NULL COMMENT '接收号码参数名',\n  `TIME_CONTENT` varchar(20) DEFAULT NULL,\n  `SIGN` varchar(255) DEFAULT NULL COMMENT '签名参数名',\n  `LOCATION` varchar(100) DEFAULT NULL COMMENT '签名位置',\n  `EXTEND_1` varchar(255) DEFAULT '' COMMENT '扩展参数1:',\n  `EXTEND_2` varchar(255) DEFAULT NULL COMMENT '扩展参数2:',\n  `EXTEND_3` varchar(255) DEFAULT NULL COMMENT '扩展参数3',\n  `EXTEND_4` varchar(255) DEFAULT NULL COMMENT '扩展参数4',\n  `EXTEND_5` varchar(255) DEFAULT NULL COMMENT '扩展参数5',\n  `STATE` varchar(100) DEFAULT '' COMMENT '状态',\n  PRIMARY KEY (`ID`)\n) ENGINE=InnoDB AUTO_INCREMENT=39 DEFAULT CHARSET=utf8;";
/*      */ 
/* 3240 */               Statement st = conn.createStatement();
/* 3241 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3248 */             boolean index_1 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "flow_run_prcs", "OP_FLAG");
/* 3249 */             if (!index_1) {
/* 3250 */               sql = "ALTER TABLE `flow_run_prcs` ADD INDEX OP_FLAG (`OP_FLAG`)";
/* 3251 */               Statement st = conn.createStatement();
/* 3252 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3259 */             boolean index_2 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "flow_run_prcs", "TIME_OUT_FLAG");
/* 3260 */             if (!index_2) {
/* 3261 */               sql = "ALTER TABLE `flow_run_prcs` ADD INDEX TIME_OUT_FLAG (`TIME_OUT_FLAG`)";
/* 3262 */               Statement st = conn.createStatement();
/* 3263 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3270 */             boolean index_3 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "flow_run_prcs", "CHILD_RUN");
/* 3271 */             if (!index_3) {
/* 3272 */               sql = "ALTER TABLE `flow_run_prcs` ADD INDEX CHILD_RUN (`CHILD_RUN`)";
/* 3273 */               Statement st = conn.createStatement();
/* 3274 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3281 */             boolean index_4 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "flow_run_prcs", "TIME_OUT");
/* 3282 */             if (!index_4) {
/* 3283 */               sql = "ALTER TABLE `flow_run_prcs` ADD INDEX TIME_OUT (`TIME_OUT`)";
/* 3284 */               Statement st = conn.createStatement();
/* 3285 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3292 */             boolean index_5 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "file_sort", "SORT_TYPE");
/* 3293 */             if (!index_5) {
/* 3294 */               sql = "ALTER TABLE `file_sort` ADD INDEX SORT_TYPE (`SORT_TYPE`)";
/* 3295 */               Statement st = conn.createStatement();
/* 3296 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3303 */             boolean index_6 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "flow_run", "DEL_FLAG");
/* 3304 */             if (!index_6) {
/* 3305 */                 sql = "ALTER TABLE `flow_run` ADD INDEX DEL_FLAG (`DEL_FLAG`)";
/* 3306 */               Statement st = conn.createStatement();
/* 3307 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3314 */             boolean index_7 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "user", "DEPT_ID_OTHER");
/* 3315 */             if (!index_7) {
/* 3316 */               sql = "ALTER TABLE `user` ADD INDEX DEPT_ID_OTHER (`DEPT_ID_OTHER`)";
/* 3317 */               Statement st = conn.createStatement();
/* 3318 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3325 */             boolean index_8 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "file_content", "CREATER");
/* 3326 */             if (!index_8) {
/* 3327 */                 sql = "ALTER TABLE `file_content` ADD INDEX CREATER (`CREATER`)";
/* 3328 */               Statement st = conn.createStatement();
/* 3329 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3336 */             boolean index_9 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "email", "READ_FLAG");
/* 3337 */             if (!index_9) {
/* 3338 */               sql = "ALTER TABLE `email` ADD INDEX READ_FLAG (`READ_FLAG`)";
/* 3339 */               Statement st = conn.createStatement();
/* 3340 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3347 */             boolean index_10 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attend_config", "DUTY_TYPE");
/* 3348 */             if (!index_10) {
/* 3349 */                 sql = "ALTER TABLE `attend_config` ADD INDEX DUTY_TYPE (`DUTY_TYPE`)";
/* 3350 */               Statement st = conn.createStatement();
/* 3351 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3358 */             boolean index_11 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attend", "UID");
/* 3359 */             if (!index_11) {
/* 3360 */               sql = "ALTER TABLE `attend` ADD INDEX UID (`UID`)";
/* 3361 */               Statement st = conn.createStatement();
/* 3362 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3369 */             boolean index_12 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attend", "DATE");
/* 3370 */             if (!index_12) {
/* 3371 */               sql = "ALTER TABLE `attend` ADD INDEX DATE (`DATE`)";
/* 3372 */               Statement st = conn.createStatement();
/* 3373 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3380 */             boolean index_13 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attendance_overtime", "RUN_ID");
/* 3381 */             if (!index_13) {
/* 3382 */               sql = "ALTER TABLE `attendance_overtime` ADD INDEX RUN_ID (`RUN_ID`)";
/* 3383 */               Statement st = conn.createStatement();
/* 3384 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3391 */             boolean index_14 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attendance_overtime", "ALLOW");
/* 3392 */             if (!index_14) {
/* 3393 */               sql = "ALTER TABLE `attendance_overtime` ADD INDEX ALLOW (`ALLOW`)";
/* 3394 */               Statement st = conn.createStatement();
/* 3395 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3402 */             boolean index_15 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "news", "PUBLISH");
/* 3403 */             if (!index_15) {
/* 3404 */              sql = "ALTER TABLE `news` ADD INDEX PUBLISH (`PUBLISH`)";
/* 3405 */               Statement st = conn.createStatement();
/* 3406 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3413 */             boolean index_16 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attend_evection", "RUN_ID");
/* 3414 */             if (!index_16) {
/* 3415 */               sql = "ALTER TABLE `attend_evection` ADD INDEX RUN_ID (`RUN_ID`)";
/* 3416 */               Statement st = conn.createStatement();
/* 3417 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3424 */             boolean index_17 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attend_evection", "ALLOW");
/* 3425 */             if (!index_17) {
/* 3426 */                sql = "ALTER TABLE `attend_evection` ADD INDEX ALLOW (`ALLOW`)";
/* 3427 */               Statement st = conn.createStatement();
/* 3428 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3435 */             boolean index_18 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attend_leave", "RUN_ID");
/* 3436 */             if (!index_18) {
/* 3437 */                sql = "ALTER TABLE `attend_leave` ADD INDEX RUN_ID (`RUN_ID`)";
/* 3438 */               Statement st = conn.createStatement();
/* 3439 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3446 */             boolean index_19 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attend_leave", "ALLOW");
/* 3447 */             if (!index_19) {
/* 3448 */                sql = "ALTER TABLE `attend_leave` ADD INDEX ALLOW (`ALLOW`)";
/* 3449 */               Statement st = conn.createStatement();
/* 3450 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3457 */             boolean index_20 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attend_out", "RUN_ID");
/* 3458 */             if (!index_20) {
/* 3459 */                sql = "ALTER TABLE `attend_out` ADD INDEX RUN_ID (`RUN_ID`)";
/* 3460 */               Statement st = conn.createStatement();
/* 3461 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3468 */             boolean index_21 = Verification.CheckIsExistIndex(conn, driver, url, username, password, "attend_out", "ALLOW");
/* 3469 */             if (!index_21) {
/* 3470 */                sql = "ALTER TABLE `attend_out` ADD INDEX ALLOW (`ALLOW`)";
/* 3471 */               Statement st = conn.createStatement();
/* 3472 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3479 */             boolean isExistfield1 = Verification.CheckIsExistfield(conn, driver, url, username, password, "department", "DEPT_CODE");
/* 3480 */             if (!isExistfield1) {
/* 3481 */                sql = "ALTER TABLE department ADD DEPT_CODE VARCHAR(255) comment '部门编码'";
/* 3482 */               Statement st = conn.createStatement();
/* 3483 */               st.executeUpdate(sql);
/*      */             }
/*      */ 
/* 3486 */             Version version = new Version();
/* 3487 */             version.setVer("2018.03.16.1");
/* 3488 */             this.versionMapper.editVer(version);
/*      */ 
/* 3491 */             conn.close();
/*      */           }
/*      */         }
/*      */       }
/*      */     } catch (Exception e) {
/* 3496 */       json.setFlag(1);
/* 3497 */       json.setMsg(e.getMessage());
/* 3498 */       e.printStackTrace();
/* 3499 */       L.e(new Object[] { "updateResourceLog:" + e });
/*      */     }
/*      */ 
/* 3502 */     return json;
/*      */   }
/*      */ 
/*      */   public void downLog(HttpServletResponse response, HttpServletRequest request)
/*      */   {
/*      */     try {
/* 3508 */       String classpath = getClass().getResource("/").getPath();
/* 3509 */       String webappRoot = classpath.replaceAll("WEB-INF/classes/", "ui/file/properties/");
/* 3510 */       File file = new File(webappRoot + "jdbc.txt");
/* 3511 */       String urltd_oa = new String();
/* 3512 */       String unametd_oa = new String();
/* 3513 */       String passwordtd_oa = new String();
/*      */ 
/* 3515 */       if ((file.isFile()) && (file.exists()))
/*      */       {
/* 3517 */         InputStreamReader read = new InputStreamReader(new FileInputStream(file));
/*      */ 
/* 3519 */         BufferedReader bufferedReader = new BufferedReader(read);
/* 3520 */         String lineTxt = null;
/* 3521 */         int i = 1;
/* 3522 */         while ((lineTxt = bufferedReader.readLine()) != null) {
/* 3523 */           if (i == 1) {
/* 3524 */             urltd_oa = lineTxt;
/*      */           }
/* 3526 */           else if (i == 2)
/* 3527 */             unametd_oa = lineTxt;
/*      */           else {
/* 3529 */             passwordtd_oa = lineTxt;
/*      */           }
/* 3531 */           i++;
/*      */         }
/* 3533 */         read.close();
/*      */       }
/* 3535 */       Properties props = Resources.getResourceAsProperties("jdbc-sql.properties");
/* 3536 */       String url = urltd_oa;
/* 3537 */       String driver = props.getProperty("driverClassName");
/* 3538 */       String username = unametd_oa;
/* 3539 */       String password = passwordtd_oa;
/* 3540 */       Class.forName(driver).newInstance();
/* 3541 */       Connection conn = DriverManager.getConnection(url, username, password);
/* 3542 */       Statement st = conn.createStatement();
/* 3543 */       String sql_2 = "select * from str_status where STATE =1";
/* 3544 */       ResultSet rs = st.executeQuery(sql_2);
/* 3545 */       List strstatus = new ArrayList();
/* 3546 */       Object object1 = new Object();
/* 3547 */       Object object2 = new Object();
/* 3548 */       while (rs.next()) {
/* 3549 */         Strstatus strstatus1 = new Strstatus();
/* 3550 */         object1 = rs.getObject(1);
/* 3551 */         object2 = rs.getObject(4);
/* 3552 */         strstatus1.setId(Integer.valueOf(((Integer)object1).intValue()));
/* 3553 */         strstatus1.setStringSql(object2.toString());
/* 3554 */         strstatus.add(strstatus1);
/*      */       }
/* 3556 */       HSSFWorkbook workbook1 = ExcelUtil.makeExcelHead("异常sql语句", 9);
/* 3557 */       String[] secondTitles = { "序号", "异常语句" };
/* 3558 */       HSSFWorkbook workbook2 = ExcelUtil.makeSecondHead(workbook1, secondTitles);
/* 3559 */       String[] beanProperty = { "id", "stringSql" };
/* 3560 */       HSSFWorkbook workbook = null;
/* 3561 */       workbook = ExcelUtil.exportExcelData(workbook2, strstatus, beanProperty);
/* 3562 */       OutputStream out = response.getOutputStream();
/* 3563 */       String filename = "异常sql语句.xls";
/* 3564 */       filename = FileUtils.encodeDownloadFilename(filename, request.getHeader("user-agent"));
/* 3565 */       response.setContentType("application/vnd.ms-excel;charset=UTF-8");
/* 3566 */       response.setHeader("content-disposition", "attachment;filename=" + filename);
/* 3567 */       workbook.write(out);
/* 3568 */       out.close();
/*      */     }
/*      */     catch (Exception e) {
/* 3571 */       e.printStackTrace();
/*      */     }
/*      */   }
/*      */ }

/* Location:           D:\xoa\webapps\ROOT\WEB-INF\classes\
 * Qualified Name:     com.xoa.service.common.impl.SysCodeServiceImpl
 * JD-Core Version:    0.6.0
 */