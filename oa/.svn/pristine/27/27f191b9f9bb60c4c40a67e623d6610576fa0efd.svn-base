<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.address.AddressMapper">
    <resultMap id="BaseResultMap" type="com.xoa.model.address.Address">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="ADD_ID" property="addId" jdbcType="INTEGER"/>
        <result column="USER_ID" property="userId" jdbcType="VARCHAR"/>
        <result column="GROUP_ID" property="groupId" jdbcType="INTEGER"/>
        <result column="PSN_NAME" property="psnName" jdbcType="VARCHAR"/>
        <result column="SEX" property="sex" jdbcType="CHAR"/>
        <result column="NICK_NAME" property="nickName" jdbcType="VARCHAR"/>
        <result column="BIRTHDAY" property="birthday" jdbcType="DATE"/>
        <result column="MINISTRATION" property="ministration" jdbcType="VARCHAR"/>
        <result column="MATE" property="mate" jdbcType="VARCHAR"/>
        <result column="CHILD" property="child" jdbcType="VARCHAR"/>
        <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR"/>
        <result column="ADD_DEPT" property="addDept" jdbcType="VARCHAR"/>
        <result column="POST_NO_DEPT" property="postNoDept" jdbcType="VARCHAR"/>
        <result column="TEL_NO_DEPT" property="telNoDept" jdbcType="VARCHAR"/>
        <result column="FAX_NO_DEPT" property="faxNoDept" jdbcType="VARCHAR"/>
        <result column="ADD_HOME" property="addHome" jdbcType="VARCHAR"/>
        <result column="POST_NO_HOME" property="postNoHome" jdbcType="VARCHAR"/>
        <result column="TEL_NO_HOME" property="telNoHome" jdbcType="VARCHAR"/>
        <result column="MOBIL_NO" property="mobilNo" jdbcType="VARCHAR"/>
        <result column="BP_NO" property="bpNo" jdbcType="VARCHAR"/>
        <result column="EMAIL" property="email" jdbcType="VARCHAR"/>
        <result column="OICQ_NO" property="oicqNo" jdbcType="VARCHAR"/>
        <result column="ICQ_NO" property="icqNo" jdbcType="VARCHAR"/>
        <result column="PSN_NO" property="psnNo" jdbcType="INTEGER"/>
        <result column="SMS_FLAG" property="smsFlag" jdbcType="CHAR"/>
        <result column="ADD_SHARE_NAME" property="addShareName" jdbcType="VARCHAR"/>
        <result column="ADD_START" property="addStart" jdbcType="TIMESTAMP"/>
        <result column="ADD_END" property="addEnd" jdbcType="TIMESTAMP"/>
        <result column="PER_WEB" property="perWeb" jdbcType="VARCHAR"/>
        <result column="AVATAR" property="avatar" javaType="string"/>

        <result column="UID" property="uid" javaType="int"/>
        <result column="USER_NAME" property="userName" javaType="string"/>

        <result column="NOTES" property="notes" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.address.AddressWithBLOBs" extends="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="SHARE_USER" property="shareUser" jdbcType="LONGVARCHAR"/>
        <result column="MANAGE_USER" property="manageUser" jdbcType="LONGVARCHAR"/>
        <result column="ATTACHMENT_ID" property="attachmentId" jdbcType="LONGVARCHAR"/>
        <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <resultMap id="UserResultMap" type="com.xoa.model.users.Users">
        <id column="UID" property="uid" javaType="int"/>
        <result column="USER_ID" property="userId" javaType="string"/>
        <result column="USER_NAME" property="userName" javaType="string"/>
        <result column="USER_NAME_INDEX" property="userNameIndex"
                javaType="string"/>
        <result column="BYNAME" property="byname" javaType="string"/>
        <result column="USEING_KEY" property="useingKey" javaType="string"/>
        <result column="USING_FINGER" property="usingFinger" javaType="string"/>
        <result column="PASSWORD" property="password" javaType="string"/>
        <result column="KEY_SN" property="keySn" javaType="string"/>
        <result column="SECURE_KEY_SN" property="secureKeySn" javaType="string"/>
        <result column="USER_PRIV" property="userPriv" javaType="int"/>
        <result column="USER_PRIV_NO" property="userPrivNo" javaType="short"/>
        <result column="USER_PRIV_NAME" property="userPrivName"
                javaType="string"/>
        <result column="POST_PRIV" property="postPriv" javaType="string"/>
        <result column="POST_DEPT" property="postDept" javaType="string"/>
        <result column="DEPT_ID" property="deptId" javaType="int"/>
        <result column="DEPT_ID_OTHER" property="deptIdOther" javaType="string"/>
        <result column="SEX" property="sex" javaType="string"/>
        <result column="BIRTHDAY" property="birthday"/>
        <result column="IS_LUNAR" property="isLunar" javaType="string"/>
        <result column="TEL_NO_DEPT" property="telNoDept" javaType="string"/>
        <result column="FAX_NO_DEPT" property="faxNoDept" javaType="string"/>
        <result column="ADD_HOME" property="addHome" javaType="string"/>
        <result column="POST_NO_HOME" property="postNoHome" javaType="string"/>
        <result column="TEL_NO_HOME" property="telNoHome" javaType="string"/>
        <result column="MOBIL_NO" property="mobilNo" javaType="string"/>
        <result column="BP_NO" property="bpNo" javaType="string"/>
        <result column="EMAIL" property="email" javaType="string"/>
        <result column="OICQ_NO" property="oicqNo" javaType="string"/>
        <result column="ICQ_NO" property="icqNo" javaType="string"/>
        <result column="MSN" property="msn" javaType="string"/>
        <result column="AVATAR" property="avatar" javaType="string"/>
        <result column="CALL_SOUND" property="callSound" javaType="string"/>
        <result column="LAST_VISIT_TIME" property="lastVisitTime"
                javaType="java.sql.Timestamp"/>
        <result column="SMS_ON" property="smsOn" javaType="string"/>
        <result column="MENU_TYPE" property="menuType" javaType="string"/>
        <result column="LAST_PASS_TIME" property="lastPassTime"
                javaType="java.sql.Timestamp"/>
        <result column="THEME" property="theme" javaType="byte"/>
        <result column="PORTAL" property="portal" javaType="string"/>
        <result column="PANEL" property="panel" javaType="string"/>
        <result column="ONLINE" property="online" javaType="int"/>
        <result column="ON_STATUS" property="onStatus" javaType="string"/>
        <result column="ATTEND_STATUS" property="attendStatus"
                javaType="string"/>
        <result column="MOBIL_NO_HIDDEN" property="mobilNoHidden"
                javaType="string"/>
        <result column="MYTABLE_LEFT" property="mytableLeft" javaType="string"/>
        <result column="MYTABLE_RIGHT" property="mytableRight"
                javaType="string"/>
        <result column="USER_PRIV_OTHER" property="userPrivOther"
                javaType="string"/>
        <result column="USER_NO" property="userNo" javaType="short"/>
        <result column="NOT_LOGIN" property="notLogin" javaType="byte"/>
        <result column="NOT_VIEW_USER" property="notViewUser" javaType="string"/>
        <result column="NOT_VIEW_TABLE" property="notViewTable"
                javaType="string"/>
        <result column="NOT_SEARCH" property="notSearch" javaType="string"/>
        <result column="BKGROUND" property="bkground" javaType="string"/>
        <result column="BIND_IP" property="bindIp" javaType="string"/>
        <result column="LAST_VISIT_IP" property="lastVisitIp" javaType="string"/>
        <result column="MENU_IMAGE" property="menuImage" javaType="string"/>
        <result column="WEATHER_CITY" property="weatherCity" javaType="string"/>
        <result column="SHOW_RSS" property="showRss" javaType="string"/>
        <result column="MENU_EXPAND" property="menuExpand" javaType="string"/>
        <result column="MY_STATUS" property="myStatus" javaType="string"/>
        <result column="LIMIT_LOGIN" property="limitLogin" javaType="string"/>
        <result column="PHOTO" property="photo" javaType="string"/>
        <result column="IM_RANGE" property="imRange" javaType="byte"/>
        <result column="LEAVE_TIME" property="leaveTime" javaType="java.sql.Timestamp"/>
        <result column="SECRET_LEVEL" property="secretLevel" javaType="int"/>
        <result column="NOT_MOBILE_LOGIN" property="notMobileLogin"
        />
        <result column="MANAGE_MODULE_TYPE" property="manageModuleType"
                javaType="string"/>
        <result column="USER_PRIV_TYPE" property="userPrivType"
        />
        <result column="USER_MANAGE_ORGS" property="userManageOrgs"
                javaType="string"/>
        <result column="SHORTCUT" property="shortcut" javaType="string"/>
        <result column="MY_RSS" property="myRss" javaType="string"/>
        <result column="REMARK" property="remark" javaType="string"/>
        <result column="USER_PARA" property="userPara" javaType="string"/>
        <result column="DEPT_NAME" property="deptName" javaType="string"/>
        <result column="DUTY_TYPE" property="dutyType"/>
        <result column="ID_NUMBER" property="idNumber" javaType="string"/>
        <result column="TRA_NUMBER" property="traNumber" javaType="string"/>
        <result column="SUBJECT" property="subject" javaType="string"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        ADD_ID, USER_ID, GROUP_ID, PSN_NAME, SEX, NICK_NAME, BIRTHDAY, MINISTRATION, MATE,
        CHILD, DEPT_NAME, ADD_DEPT, POST_NO_DEPT, TEL_NO_DEPT, FAX_NO_DEPT, ADD_HOME, POST_NO_HOME,
        TEL_NO_HOME, MOBIL_NO, BP_NO, EMAIL, OICQ_NO, ICQ_NO, PSN_NO, SMS_FLAG, ADD_SHARE_NAME,
        ADD_START, ADD_END, PER_WEB
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        NOTES, SHARE_USER, MANAGE_USER, ATTACHMENT_ID, ATTACHMENT_NAME
    </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="com.xoa.model.address.AddressExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from address
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.address.AddressExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from address
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from address
        where ADD_ID = #{addId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from address
        where ADD_ID = #{addId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.xoa.model.address.AddressExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from address
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xoa.model.address.AddressWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into address (ADD_ID, USER_ID, GROUP_ID,
        PSN_NAME, SEX, NICK_NAME,BIRTHDAY,
        MINISTRATION, MATE,
        CHILD, DEPT_NAME, ADD_DEPT,
        POST_NO_DEPT, TEL_NO_DEPT, FAX_NO_DEPT,
        ADD_HOME, POST_NO_HOME, TEL_NO_HOME,
        MOBIL_NO, BP_NO, EMAIL,
        OICQ_NO, ICQ_NO, PSN_NO,
        SMS_FLAG, ADD_SHARE_NAME, ADD_START,
        ADD_END, PER_WEB, NOTES,
        SHARE_USER, MANAGE_USER, ATTACHMENT_ID,
        ATTACHMENT_NAME)
        values (#{addId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER},
        #{psnName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{nickName,jdbcType=VARCHAR},#{birthday,jdbcType=DATE},
        #{ministration,jdbcType=VARCHAR}, #{mate,jdbcType=VARCHAR},
        #{child,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR}, #{addDept,jdbcType=VARCHAR},
        #{postNoDept,jdbcType=VARCHAR}, #{telNoDept,jdbcType=VARCHAR}, #{faxNoDept,jdbcType=VARCHAR},
        #{addHome,jdbcType=VARCHAR}, #{postNoHome,jdbcType=VARCHAR}, #{telNoHome,jdbcType=VARCHAR},
        #{mobilNo,jdbcType=VARCHAR}, #{bpNo,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{oicqNo,jdbcType=VARCHAR}, #{icqNo,jdbcType=VARCHAR}, #{psnNo,jdbcType=INTEGER},
        #{smsFlag,jdbcType=CHAR}, #{addShareName,jdbcType=VARCHAR}, #{addStart,jdbcType=TIMESTAMP},
        #{addEnd,jdbcType=TIMESTAMP}, #{perWeb,jdbcType=VARCHAR}, #{notes,jdbcType=LONGVARCHAR},
        #{shareUser,jdbcType=LONGVARCHAR}, #{manageUser,jdbcType=LONGVARCHAR}, #{attachmentId,jdbcType=LONGVARCHAR},
        #{attachmentName,jdbcType=LONGVARCHAR})
    </insert>

    <insert id="insert" parameterType="com.xoa.model.address.AddressWithBLOBs" databaseId="oracle">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="addId"  order="BEFORE" resultType="int">
            select ADDRESS_ADD_ID_SEQ.nextval as addId from  dual
        </selectKey>
        insert into address (ADD_ID, USER_ID, "GROUP_ID",
        PSN_NAME, SEX, NICK_NAME,
        BIRTHDAY, MINISTRATION, MATE,
        "CHILD", DEPT_NAME, ADD_DEPT,
        POST_NO_DEPT, TEL_NO_DEPT, FAX_NO_DEPT,
        ADD_HOME, POST_NO_HOME, TEL_NO_HOME,
        MOBIL_NO, BP_NO, EMAIL,
        OICQ_NO, ICQ_NO, PSN_NO,
        SMS_FLAG, ADD_SHARE_NAME, ADD_START,
        ADD_END, PER_WEB, NOTES,
        SHARE_USER, MANAGE_USER, ATTACHMENT_ID,
        ATTACHMENT_NAME)
        values (#{addId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER},
        #{psnName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{nickName,jdbcType=VARCHAR},
        #{birthday,jdbcType=DATE}, #{ministration,jdbcType=VARCHAR}, #{mate,jdbcType=VARCHAR},
        #{child,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR}, #{addDept,jdbcType=VARCHAR},
        #{postNoDept,jdbcType=VARCHAR}, #{telNoDept,jdbcType=VARCHAR}, #{faxNoDept,jdbcType=VARCHAR},
        #{addHome,jdbcType=VARCHAR}, #{postNoHome,jdbcType=VARCHAR}, #{telNoHome,jdbcType=VARCHAR},
        #{mobilNo,jdbcType=VARCHAR}, #{bpNo,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{oicqNo,jdbcType=VARCHAR}, #{icqNo,jdbcType=VARCHAR}, #{psnNo,jdbcType=INTEGER},
        #{smsFlag,jdbcType=CHAR}, #{addShareName,jdbcType=VARCHAR}, #{addStart,jdbcType=TIMESTAMP},
        #{addEnd,jdbcType=TIMESTAMP}, #{perWeb,jdbcType=VARCHAR}, #{notes,jdbcType=LONGVARCHAR},
        #{shareUser,jdbcType=LONGVARCHAR}, #{manageUser,jdbcType=LONGVARCHAR}, #{attachmentId,jdbcType=LONGVARCHAR},
        #{attachmentName,jdbcType=LONGVARCHAR})
    </insert>

    <insert id="insert" parameterType="com.xoa.model.address.AddressWithBLOBs" databaseId="dm">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="addId"  order="BEFORE" resultType="int">
            select ADDRESS_ADD_ID_SEQ.nextval as addId from  dual
        </selectKey>
        insert into address (ADD_ID, USER_ID, "GROUP_ID",
        PSN_NAME, SEX, NICK_NAME,
        BIRTHDAY, MINISTRATION, MATE,
        "CHILD", DEPT_NAME, ADD_DEPT,
        POST_NO_DEPT, TEL_NO_DEPT, FAX_NO_DEPT,
        ADD_HOME, POST_NO_HOME, TEL_NO_HOME,
        MOBIL_NO, BP_NO, EMAIL,
        OICQ_NO, ICQ_NO, PSN_NO,
        SMS_FLAG, ADD_SHARE_NAME, ADD_START,
        ADD_END, PER_WEB, NOTES,
        SHARE_USER, MANAGE_USER, ATTACHMENT_ID,
        ATTACHMENT_NAME)
        values (#{addId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER},
        #{psnName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{nickName,jdbcType=VARCHAR},
        #{birthday,jdbcType=DATE}, #{ministration,jdbcType=VARCHAR}, #{mate,jdbcType=VARCHAR},
        #{child,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR}, #{addDept,jdbcType=VARCHAR},
        #{postNoDept,jdbcType=VARCHAR}, #{telNoDept,jdbcType=VARCHAR}, #{faxNoDept,jdbcType=VARCHAR},
        #{addHome,jdbcType=VARCHAR}, #{postNoHome,jdbcType=VARCHAR}, #{telNoHome,jdbcType=VARCHAR},
        #{mobilNo,jdbcType=VARCHAR}, #{bpNo,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{oicqNo,jdbcType=VARCHAR}, #{icqNo,jdbcType=VARCHAR}, #{psnNo,jdbcType=INTEGER},
        #{smsFlag,jdbcType=CHAR}, #{addShareName,jdbcType=VARCHAR}, #{addStart,jdbcType=TIMESTAMP},
        #{addEnd,jdbcType=TIMESTAMP}, #{perWeb,jdbcType=VARCHAR}, #{notes,jdbcType=LONGVARCHAR},
        #{shareUser,jdbcType=LONGVARCHAR}, #{manageUser,jdbcType=LONGVARCHAR}, #{attachmentId,jdbcType=LONGVARCHAR},
        #{attachmentName,jdbcType=LONGVARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.xoa.model.address.Address">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="addId != null">
                ADD_ID,
            </if>
            <if test="userId != null">
                USER_ID,
            </if>
            <if test="groupId != null">
                GROUP_ID,
            </if>
            <if test="psnName != null">
                PSN_NAME,
            </if>
            <if test="sex != null">
                SEX,
            </if>
            <if test="nickName != null">
                NICK_NAME,
            </if>
            <if test="birthday != null">
                BIRTHDAY,
            </if>
            <if test="ministration != null">
                MINISTRATION,
            </if>
            <if test="mate != null">
                MATE,
            </if>
            <if test="child != null">
                CHILD,
            </if>
            <if test="deptName != null">
                DEPT_NAME,
            </if>
            <if test="addDept != null">
                ADD_DEPT,
            </if>
            <if test="postNoDept != null">
                POST_NO_DEPT,
            </if>
            <if test="telNoDept != null">
                TEL_NO_DEPT,
            </if>
            <if test="faxNoDept != null">
                FAX_NO_DEPT,
            </if>
            <if test="addHome != null">
                ADD_HOME,
            </if>
            <if test="postNoHome != null">
                POST_NO_HOME,
            </if>
            <if test="telNoHome != null">
                TEL_NO_HOME,
            </if>
            <if test="mobilNo != null">
                MOBIL_NO,
            </if>
            <if test="bpNo != null">
                BP_NO,
            </if>
            <if test="email != null">
                EMAIL,
            </if>
            <if test="oicqNo != null">
                OICQ_NO,
            </if>
            <if test="icqNo != null">
                ICQ_NO,
            </if>
            <if test="psnNo != null">
                PSN_NO,
            </if>
            <if test="smsFlag != null">
                SMS_FLAG,
            </if>
            <if test="addShareName != null">
                ADD_SHARE_NAME,
            </if>
            <if test="addStart != null">
                ADD_START,
            </if>
            <if test="addEnd != null">
                ADD_END,
            </if>
            <if test="perWeb != null">
                PER_WEB,
            </if>
            <if test="notes != null">
                NOTES,
            </if>
            <if test="shareUser != null">
                SHARE_USER,
            </if>
            <if test="manageUser != null">
                MANAGE_USER,
            </if>
            <if test="attachmentId != null">
                ATTACHMENT_ID,
            </if>
            <if test="attachmentName != null">
                ATTACHMENT_NAME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="addId != null">
                #{addId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=INTEGER},
            </if>
            <if test="psnName != null">
                #{psnName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="ministration != null">
                #{ministration,jdbcType=VARCHAR},
            </if>
            <if test="mate != null">
                #{mate,jdbcType=VARCHAR},
            </if>
            <if test="child != null">
                #{child,jdbcType=VARCHAR},
            </if>
            <if test="deptName != null">
                #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="addDept != null">
                #{addDept,jdbcType=VARCHAR},
            </if>
            <if test="postNoDept != null">
                #{postNoDept,jdbcType=VARCHAR},
            </if>
            <if test="telNoDept != null">
                #{telNoDept,jdbcType=VARCHAR},
            </if>
            <if test="faxNoDept != null">
                #{faxNoDept,jdbcType=VARCHAR},
            </if>
            <if test="addHome != null">
                #{addHome,jdbcType=VARCHAR},
            </if>
            <if test="postNoHome != null">
                #{postNoHome,jdbcType=VARCHAR},
            </if>
            <if test="telNoHome != null">
                #{telNoHome,jdbcType=VARCHAR},
            </if>
            <if test="mobilNo != null">
                #{mobilNo,jdbcType=VARCHAR},
            </if>
            <if test="bpNo != null">
                #{bpNo,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="oicqNo != null">
                #{oicqNo,jdbcType=VARCHAR},
            </if>
            <if test="icqNo != null">
                #{icqNo,jdbcType=VARCHAR},
            </if>
            <if test="psnNo != null">
                #{psnNo,jdbcType=INTEGER},
            </if>
            <if test="smsFlag != null">
                #{smsFlag,jdbcType=CHAR},
            </if>
            <if test="addShareName != null">
                #{addShareName,jdbcType=VARCHAR},
            </if>
            <if test="addStart != null">
                #{addStart,jdbcType=TIMESTAMP},
            </if>
            <if test="addEnd != null">
                #{addEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="perWeb != null">
                #{perWeb,jdbcType=VARCHAR},
            </if>
            <if test="notes != null">
                #{notes,jdbcType=LONGVARCHAR},
            </if>
            <if test="shareUser != null">
                #{shareUser,jdbcType=LONGVARCHAR},
            </if>
            <if test="manageUser != null">
                #{manageUser,jdbcType=LONGVARCHAR},
            </if>
            <if test="attachmentId != null">
                #{attachmentId,jdbcType=LONGVARCHAR},
            </if>
            <if test="attachmentName != null">
                #{attachmentName,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xoa.model.address.AddressExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from address
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update address
        <set>
            <if test="record.addId != null">
                ADD_ID = #{record.addId,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                USER_ID = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.groupId != null">
                GROUP_ID = #{record.groupId,jdbcType=INTEGER},
            </if>
            <if test="record.psnName != null">
                PSN_NAME = #{record.psnName,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                SEX = #{record.sex,jdbcType=CHAR},
            </if>
            <if test="record.nickName != null">
                NICK_NAME = #{record.nickName,jdbcType=VARCHAR},
            </if>
            <if test="record.birthday != null">
                BIRTHDAY = #{record.birthday,jdbcType=DATE},
            </if>
            <if test="record.ministration != null">
                MINISTRATION = #{record.ministration,jdbcType=VARCHAR},
            </if>
            <if test="record.mate != null">
                MATE = #{record.mate,jdbcType=VARCHAR},
            </if>
            <if test="record.child != null">
                CHILD = #{record.child,jdbcType=VARCHAR},
            </if>
            <if test="record.deptName != null">
                DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
            </if>
            <if test="record.addDept != null">
                ADD_DEPT = #{record.addDept,jdbcType=VARCHAR},
            </if>
            <if test="record.postNoDept != null">
                POST_NO_DEPT = #{record.postNoDept,jdbcType=VARCHAR},
            </if>
            <if test="record.telNoDept != null">
                TEL_NO_DEPT = #{record.telNoDept,jdbcType=VARCHAR},
            </if>
            <if test="record.faxNoDept != null">
                FAX_NO_DEPT = #{record.faxNoDept,jdbcType=VARCHAR},
            </if>
            <if test="record.addHome != null">
                ADD_HOME = #{record.addHome,jdbcType=VARCHAR},
            </if>
            <if test="record.postNoHome != null">
                POST_NO_HOME = #{record.postNoHome,jdbcType=VARCHAR},
            </if>
            <if test="record.telNoHome != null">
                TEL_NO_HOME = #{record.telNoHome,jdbcType=VARCHAR},
            </if>
            <if test="record.mobilNo != null">
                MOBIL_NO = #{record.mobilNo,jdbcType=VARCHAR},
            </if>
            <if test="record.bpNo != null">
                BP_NO = #{record.bpNo,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                EMAIL = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.oicqNo != null">
                OICQ_NO = #{record.oicqNo,jdbcType=VARCHAR},
            </if>
            <if test="record.icqNo != null">
                ICQ_NO = #{record.icqNo,jdbcType=VARCHAR},
            </if>
            <if test="record.psnNo != null">
                PSN_NO = #{record.psnNo,jdbcType=INTEGER},
            </if>
            <if test="record.smsFlag != null">
                SMS_FLAG = #{record.smsFlag,jdbcType=CHAR},
            </if>
            <if test="record.addShareName != null">
                ADD_SHARE_NAME = #{record.addShareName,jdbcType=VARCHAR},
            </if>
            <if test="record.addStart != null">
                ADD_START = #{record.addStart,jdbcType=TIMESTAMP},
            </if>
            <if test="record.addEnd != null">
                ADD_END = #{record.addEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="record.perWeb != null">
                PER_WEB = #{record.perWeb,jdbcType=VARCHAR},
            </if>
            <if test="record.notes != null">
                NOTES = #{record.notes,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.shareUser != null">
                SHARE_USER = #{record.shareUser,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.manageUser != null">
                MANAGE_USER = #{record.manageUser,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.attachmentId != null">
                ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.attachmentName != null">
                ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update address
        set ADD_ID = #{record.addId,jdbcType=INTEGER},
        USER_ID = #{record.userId,jdbcType=VARCHAR},
        GROUP_ID = #{record.groupId,jdbcType=INTEGER},
        PSN_NAME = #{record.psnName,jdbcType=VARCHAR},
        SEX = #{record.sex,jdbcType=CHAR},
        NICK_NAME = #{record.nickName,jdbcType=VARCHAR},
        BIRTHDAY = #{record.birthday,jdbcType=DATE},
        MINISTRATION = #{record.ministration,jdbcType=VARCHAR},
        MATE = #{record.mate,jdbcType=VARCHAR},
        CHILD = #{record.child,jdbcType=VARCHAR},
        DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
        ADD_DEPT = #{record.addDept,jdbcType=VARCHAR},
        POST_NO_DEPT = #{record.postNoDept,jdbcType=VARCHAR},
        TEL_NO_DEPT = #{record.telNoDept,jdbcType=VARCHAR},
        FAX_NO_DEPT = #{record.faxNoDept,jdbcType=VARCHAR},
        ADD_HOME = #{record.addHome,jdbcType=VARCHAR},
        POST_NO_HOME = #{record.postNoHome,jdbcType=VARCHAR},
        TEL_NO_HOME = #{record.telNoHome,jdbcType=VARCHAR},
        MOBIL_NO = #{record.mobilNo,jdbcType=VARCHAR},
        BP_NO = #{record.bpNo,jdbcType=VARCHAR},
        EMAIL = #{record.email,jdbcType=VARCHAR},
        OICQ_NO = #{record.oicqNo,jdbcType=VARCHAR},
        ICQ_NO = #{record.icqNo,jdbcType=VARCHAR},
        PSN_NO = #{record.psnNo,jdbcType=INTEGER},
        SMS_FLAG = #{record.smsFlag,jdbcType=CHAR},
        ADD_SHARE_NAME = #{record.addShareName,jdbcType=VARCHAR},
        ADD_START = #{record.addStart,jdbcType=TIMESTAMP},
        ADD_END = #{record.addEnd,jdbcType=TIMESTAMP},
        PER_WEB = #{record.perWeb,jdbcType=VARCHAR},
        NOTES = #{record.notes,jdbcType=LONGVARCHAR},
        SHARE_USER = #{record.shareUser,jdbcType=LONGVARCHAR},
        MANAGE_USER = #{record.manageUser,jdbcType=LONGVARCHAR},
        ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
        ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update address
        set ADD_ID = #{record.addId,jdbcType=INTEGER},
        USER_ID = #{record.userId,jdbcType=VARCHAR},
        GROUP_ID = #{record.groupId,jdbcType=INTEGER},
        PSN_NAME = #{record.psnName,jdbcType=VARCHAR},
        SEX = #{record.sex,jdbcType=CHAR},
        NICK_NAME = #{record.nickName,jdbcType=VARCHAR},
        BIRTHDAY = #{record.birthday,jdbcType=DATE},
        MINISTRATION = #{record.ministration,jdbcType=VARCHAR},
        MATE = #{record.mate,jdbcType=VARCHAR},
        CHILD = #{record.child,jdbcType=VARCHAR},
        DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
        ADD_DEPT = #{record.addDept,jdbcType=VARCHAR},
        POST_NO_DEPT = #{record.postNoDept,jdbcType=VARCHAR},
        TEL_NO_DEPT = #{record.telNoDept,jdbcType=VARCHAR},
        FAX_NO_DEPT = #{record.faxNoDept,jdbcType=VARCHAR},
        ADD_HOME = #{record.addHome,jdbcType=VARCHAR},
        POST_NO_HOME = #{record.postNoHome,jdbcType=VARCHAR},
        TEL_NO_HOME = #{record.telNoHome,jdbcType=VARCHAR},
        MOBIL_NO = #{record.mobilNo,jdbcType=VARCHAR},
        BP_NO = #{record.bpNo,jdbcType=VARCHAR},
        EMAIL = #{record.email,jdbcType=VARCHAR},
        OICQ_NO = #{record.oicqNo,jdbcType=VARCHAR},
        ICQ_NO = #{record.icqNo,jdbcType=VARCHAR},
        PSN_NO = #{record.psnNo,jdbcType=INTEGER},
        SMS_FLAG = #{record.smsFlag,jdbcType=CHAR},
        ADD_SHARE_NAME = #{record.addShareName,jdbcType=VARCHAR},
        ADD_START = #{record.addStart,jdbcType=TIMESTAMP},
        ADD_END = #{record.addEnd,jdbcType=TIMESTAMP},
        PER_WEB = #{record.perWeb,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.address.AddressWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update address
        <set>
            <if test="userId != null">
                USER_ID = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="groupId != null">
                GROUP_ID = #{groupId,jdbcType=INTEGER},
            </if>
            <if test="psnName != null">
                PSN_NAME = #{psnName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                SEX = #{sex,jdbcType=CHAR},
            </if>
            <if test="nickName != null">
                NICK_NAME = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                BIRTHDAY = #{birthday,jdbcType=DATE},
            </if>
            <if test="ministration != null">
                MINISTRATION = #{ministration,jdbcType=VARCHAR},
            </if>
            <if test="mate != null">
                MATE = #{mate,jdbcType=VARCHAR},
            </if>
            <if test="child != null">
                CHILD = #{child,jdbcType=VARCHAR},
            </if>
            <if test="deptName != null">
                DEPT_NAME = #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="addDept != null">
                ADD_DEPT = #{addDept,jdbcType=VARCHAR},
            </if>
            <if test="postNoDept != null">
                POST_NO_DEPT = #{postNoDept,jdbcType=VARCHAR},
            </if>
            <if test="telNoDept != null">
                TEL_NO_DEPT = #{telNoDept,jdbcType=VARCHAR},
            </if>
            <if test="faxNoDept != null">
                FAX_NO_DEPT = #{faxNoDept,jdbcType=VARCHAR},
            </if>
            <if test="addHome != null">
                ADD_HOME = #{addHome,jdbcType=VARCHAR},
            </if>
            <if test="postNoHome != null">
                POST_NO_HOME = #{postNoHome,jdbcType=VARCHAR},
            </if>
            <if test="telNoHome != null">
                TEL_NO_HOME = #{telNoHome,jdbcType=VARCHAR},
            </if>
            <if test="mobilNo != null">
                MOBIL_NO = #{mobilNo,jdbcType=VARCHAR},
            </if>
            <if test="bpNo != null">
                BP_NO = #{bpNo,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                EMAIL = #{email,jdbcType=VARCHAR},
            </if>
            <if test="oicqNo != null">
                OICQ_NO = #{oicqNo,jdbcType=VARCHAR},
            </if>
            <if test="icqNo != null">
                ICQ_NO = #{icqNo,jdbcType=VARCHAR},
            </if>
            <if test="psnNo != null">
                PSN_NO = #{psnNo,jdbcType=INTEGER},
            </if>
            <if test="smsFlag != null">
                SMS_FLAG = #{smsFlag,jdbcType=CHAR},
            </if>
            <if test="addShareName != null">
                ADD_SHARE_NAME = #{addShareName,jdbcType=VARCHAR},
            </if>
            <if test="addStart != null">
                ADD_START = #{addStart,jdbcType=TIMESTAMP},
            </if>
            <if test="addEnd != null">
                ADD_END = #{addEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="perWeb != null">
                PER_WEB = #{perWeb,jdbcType=VARCHAR},
            </if>
            <if test="notes != null">
                NOTES = #{notes,jdbcType=LONGVARCHAR},
            </if>
            <if test="shareUser != null">
                SHARE_USER = #{shareUser,jdbcType=LONGVARCHAR},
            </if>
            <if test="manageUser != null">
                MANAGE_USER = #{manageUser,jdbcType=LONGVARCHAR},
            </if>
            <if test="attachmentId != null">
                ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
            </if>
            <if test="attachmentName != null">
                ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where ADD_ID = #{addId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.address.AddressWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update address
        set USER_ID = #{userId,jdbcType=VARCHAR},
        GROUP_ID = #{groupId,jdbcType=INTEGER},
        PSN_NAME = #{psnName,jdbcType=VARCHAR},
        SEX = #{sex,jdbcType=CHAR},
        NICK_NAME = #{nickName,jdbcType=VARCHAR},
        BIRTHDAY = #{birthday,jdbcType=DATE},
        MINISTRATION = #{ministration,jdbcType=VARCHAR},
        MATE = #{mate,jdbcType=VARCHAR},
        CHILD = #{child,jdbcType=VARCHAR},
        DEPT_NAME = #{deptName,jdbcType=VARCHAR},
        ADD_DEPT = #{addDept,jdbcType=VARCHAR},
        POST_NO_DEPT = #{postNoDept,jdbcType=VARCHAR},
        TEL_NO_DEPT = #{telNoDept,jdbcType=VARCHAR},
        FAX_NO_DEPT = #{faxNoDept,jdbcType=VARCHAR},
        ADD_HOME = #{addHome,jdbcType=VARCHAR},
        POST_NO_HOME = #{postNoHome,jdbcType=VARCHAR},
        TEL_NO_HOME = #{telNoHome,jdbcType=VARCHAR},
        MOBIL_NO = #{mobilNo,jdbcType=VARCHAR},
        BP_NO = #{bpNo,jdbcType=VARCHAR},
        EMAIL = #{email,jdbcType=VARCHAR},
        OICQ_NO = #{oicqNo,jdbcType=VARCHAR},
        ICQ_NO = #{icqNo,jdbcType=VARCHAR},
        PSN_NO = #{psnNo,jdbcType=INTEGER},
        SMS_FLAG = #{smsFlag,jdbcType=CHAR},
        ADD_SHARE_NAME = #{addShareName,jdbcType=VARCHAR},
        ADD_START = #{addStart,jdbcType=TIMESTAMP},
        ADD_END = #{addEnd,jdbcType=TIMESTAMP},
        PER_WEB = #{perWeb,jdbcType=VARCHAR},
        NOTES = #{notes,jdbcType=LONGVARCHAR},
        SHARE_USER = #{shareUser,jdbcType=LONGVARCHAR},
        MANAGE_USER = #{manageUser,jdbcType=LONGVARCHAR},
        ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
        ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR}
        where ADD_ID = #{addId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xoa.model.address.Address">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update address
        set USER_ID = #{userId,jdbcType=VARCHAR},
        GROUP_ID = #{groupId,jdbcType=INTEGER},
        PSN_NAME = #{psnName,jdbcType=VARCHAR},
        SEX = #{sex,jdbcType=CHAR},
        NICK_NAME = #{nickName,jdbcType=VARCHAR},
        BIRTHDAY = #{birthday,jdbcType=DATE},
        MINISTRATION = #{ministration,jdbcType=VARCHAR},
        MATE = #{mate,jdbcType=VARCHAR},
        CHILD = #{child,jdbcType=VARCHAR},
        DEPT_NAME = #{deptName,jdbcType=VARCHAR},
        ADD_DEPT = #{addDept,jdbcType=VARCHAR},
        POST_NO_DEPT = #{postNoDept,jdbcType=VARCHAR},
        TEL_NO_DEPT = #{telNoDept,jdbcType=VARCHAR},
        FAX_NO_DEPT = #{faxNoDept,jdbcType=VARCHAR},
        ADD_HOME = #{addHome,jdbcType=VARCHAR},
        POST_NO_HOME = #{postNoHome,jdbcType=VARCHAR},
        TEL_NO_HOME = #{telNoHome,jdbcType=VARCHAR},
        MOBIL_NO = #{mobilNo,jdbcType=VARCHAR},
        BP_NO = #{bpNo,jdbcType=VARCHAR},
        EMAIL = #{email,jdbcType=VARCHAR},
        OICQ_NO = #{oicqNo,jdbcType=VARCHAR},
        ICQ_NO = #{icqNo,jdbcType=VARCHAR},
        PSN_NO = #{psnNo,jdbcType=INTEGER},
        SMS_FLAG = #{smsFlag,jdbcType=CHAR},
        ADD_SHARE_NAME = #{addShareName,jdbcType=VARCHAR},
        ADD_START = #{addStart,jdbcType=TIMESTAMP},
        ADD_END = #{addEnd,jdbcType=TIMESTAMP},
        PER_WEB = #{perWeb,jdbcType=VARCHAR}
        where ADD_ID = #{addId,jdbcType=INTEGER}
    </update>
    <select id="selectGroups" resultMap="BaseResultMap">
    select * from address
  </select>
    <select id="getUsersById" parameterType="map" resultMap="BaseResultMap">
        select * from address
        where
        ( USER_ID = ''
        <if test="userId!=null">
            OR USER_ID = #{userId}
        </if>
        )
        <if test="groupId!=null">
            AND
            GROUP_ID IN (#{groupId})
        </if>
    </select>
    <select id="getUserInfoById" parameterType="map" resultMap="BaseResultMap">
        select * from address
        where
        ( USER_ID = ''
        <if test="userId!=null">
            OR USER_ID = #{userId}
        </if>
        )
        <if test="groupId!=null">
            AND
            GROUP_ID IN (#{groupId});
        </if>
    </select>
    <!-- 将某个分组下的人员全部迁移到另一个分组 -->
    <update id="updateUserGroup" parameterType="map">
    UPDATE address
    SET GROUP_ID = #{groupId}
    WHERE
     GROUP_ID = #{oldId} AND USER_ID = #{userId}
  </update>

    <!-- 获取不在该分组的人员名单-->
    <select id="getNotUserById" parameterType="map" resultMap="BaseResultMap">
        select * from address
        where
        ( USER_ID = ''
        <if test="userId!=null">
            OR USER_ID = #{userId}
        </if>
        )
        <if test="groupId!=null">
            AND
            GROUP_ID != #{groupId};
        </if>
    </select>
    <update id="putUser" parameterType="map">
    UPDATE address
    SET GROUP_ID = #{groupId}
    WHERE USER_ID = #{userId} AND  ADD_ID in (${fldStr})
  </update>

    <select id="queryAddress" resultMap="BaseResultMap">
        select * from address
        <where>
            <if test="groupId!=null or groupId==0">
                and GROUP_id = #{groupId}
            </if>
            <if test="name!=null and name!='' ">
                and psn_name like CONCAT(CONCAT('%', #{name}), '%')
            </if>
        </where>
    </select>

    <select id="getAllUsers" resultMap="BaseResultMap" parameterType="map" >
        SELECT u.user_name ,u.uid,u.sex,u.BIRTHDAY,u.USER_PRIV_NAME as ministration ,
        d.DEPT_Name ,u.AVATAR,u.OICQ_NO,u.TEL_NO_DEPT,
        u.EMAIL,u.MOBIL_NO from user u , department d
        <where>
            u.dept_Id = d.dept_Id
          <if test="deptId!=null and deptId !=0 ">
             AND u.dept_Id = #{deptId}
          </if>
        </where>
    </select>
    <select id="getUserById" resultMap="UserResultMap" parameterType="java.lang.Integer" >
        SELECT u.user_name,u.USER_ID,u.uid,u.sex,u.BIRTHDAY,u.USER_PRIV_NAME  ,
        d.DEPT_Name ,u.AVATAR,u.OICQ_NO,u.TEL_NO_DEPT,
        u.EMAIL,u.MOBIL_NO from user u , department d
        <where>
            u.dept_Id = d.dept_Id
            <if test="uid!=null and uid !='' ">
                AND u.uid = #{uid}
            </if>
        </where>
    </select>

    <select id="getUserById" resultMap="UserResultMap" parameterType="java.lang.Integer" databaseId="oracle">
        SELECT u.user_name,u.USER_ID,u."UID",u.sex,u.BIRTHDAY,u.USER_PRIV_NAME  ,
        d.DEPT_Name ,u.AVATAR,u.OICQ_NO,u.TEL_NO_DEPT,
        u.EMAIL,u.MOBIL_NO from "USER" u , department d
        <where>
            u.dept_Id = d.dept_Id
            <if test="uid!=null and uid !='' ">
                AND u."UID" = #{uid}
            </if>
        </where>
    </select>

    <select id="getUserById" resultMap="UserResultMap" parameterType="java.lang.Integer" databaseId="dm">
        SELECT u.user_name,u.USER_ID,u."UID",u.sex,u.BIRTHDAY,u.USER_PRIV_NAME  ,
        d.DEPT_Name ,u.AVATAR,u.OICQ_NO,u.TEL_NO_DEPT,
        u.EMAIL,u.MOBIL_NO from "USER" u , department d
        <where>
            u.dept_Id = d.dept_Id
            <if test="uid!=null and uid !='' ">
                AND u."UID" = #{uid}
            </if>
        </where>
    </select>

    <select id="selectAddress" resultMap="BaseResultMap" parameterType="map">
        select * from address
        <where>
            <if test="address.groupId!=null or address.groupId==0">
                and GROUP_ID = #{address.groupId}
            </if>
            <if test="address.psnName!=null and address.psnName!=''">
                and PSN_NAME like CONCAT(CONCAT('%', #{address.psnName}), '%')
            </if>
            <if test="address.deptName!=null and address.deptName!=''">
                and DEPT_NAME =#{address.deptName}
            </if>
            <if test="address.telNoDept!=null and address.telNoDept!=''">
                and TEL_NO_DEPT =#{address.telNoDept}
            </if>
            <if test="address.telNoHome != null and address.telNoHome!=''">
                and TEL_NO_HOME = #{address.telNoHome}
            </if>
            <if test="address.addDept!=null and address.addDept!='' ">
                and ADD_DEPT =#{address.addDept}
            </if>
            <if test="address.addHome!=null and address.addHome!='' ">
                and ADD_HOME =#{address.addHome}
            </if>
            <if test="address.notes!=null and address.notes!='' ">
                and NOTES =#{address.notes}
            </if>
            <if test="address.mobilNo != null and address.mobilNo!=''">
               and MOBIL_NO = #{address.mobilNo}
            </if>
        </where>
    </select>

    <select id="selectUser" resultMap="BaseResultMap" parameterType="map">
        SELECT  u.user_name ,u.uid,u.sex,u.USER_PRIV_NAME as ministration ,
        d.DEPT_Name ,u.AVATAR,u.OICQ_NO,u.TEL_NO_DEPT,
        u.EMAIL,u.MOBIL_NO from user u
        INNER JOIN
        department d ON u.DEPT_ID = d.DEPT_ID
        <where>
              u.dept_Id = d.dept_Id
            <if test="user.deptId!=null and user.deptId!=''">
                and u.DEPT_ID = #{user.deptId}
            </if>
            <if test="user.userName!=null and user.userName!=''">
                and u.USER_NAME like CONCAT(CONCAT('%', #{user.userName}), '%')
            </if>
            <if test="user.userPrivName!=null and user.userPrivName!=''">
                and u.USER_PRIV_NAME =#{user.userPrivName}
            </if>
            <if test="user.deptName!=null and user.deptName!=''">
                and u.DEPT_NAME =#{user.deptName}
            </if>
            <if test="user.telNoDept!=null and user.telNoDept!=''">
                and u.TEL_NO_DEPT =#{user.telNoDept}
            </if>
            <if test="user.telNoHome != null and user.telNoHome!=''">
                and u.TEL_NO_HOME = #{user.telNoHome}
            </if>
            <if test="user.oicqNo!=null and user.oicqNo!='' ">
                and u.OICQ_NO =#{user.oicqNo}
            </if>
            <if test="user.email!=null and user.email!='' ">
                and u.EMAIL =#{user.email}
            </if>

            <if test="user.mobilNo != null and user.mobilNo!=''">
                and u.MOBIL_NO = #{user.mobilNo}
            </if>
        </where>
        OR (u.DEPT_ID_OTHER LIKE CONCAT('%,',#{user.deptId},',%') OR u.DEPT_ID_OTHER LIKE CONCAT(#{user.deptId},',%'))
      ORDER BY UID DESC

    </select>

    <select id="selectUser" resultMap="BaseResultMap" parameterType="map" databaseId="oracle">
        SELECT  u.user_name ,u."UID",u.sex,u.USER_PRIV_NAME as ministration ,
        d.DEPT_Name ,u.AVATAR,u.OICQ_NO,u.TEL_NO_DEPT,
        u.EMAIL,u.MOBIL_NO from "USER" u
        INNER JOIN
        department d ON u.DEPT_ID = d.DEPT_ID
        <where>
            u.dept_Id = d.dept_Id
            <if test="user.deptId!=null and user.deptId!=''">
                and u.DEPT_ID = #{user.deptId}
            </if>
            <if test="user.userName!=null and user.userName!=''">
                and u.USER_NAME like CONCAT(CONCAT('%', #{user.userName}),'%')
            </if>
            <if test="user.userPrivName!=null and user.userPrivName!=''">
                and u.USER_PRIV_NAME =#{user.userPrivName}
            </if>
            <if test="user.deptName!=null and user.deptName!=''">
                and u.DEPT_NAME =#{user.deptName}
            </if>
            <if test="user.telNoDept!=null and user.telNoDept!=''">
                and u.TEL_NO_DEPT =#{user.telNoDept}
            </if>
            <if test="user.telNoHome != null and user.telNoHome!=''">
                and u.TEL_NO_HOME = #{user.telNoHome}
            </if>
            <if test="user.oicqNo!=null and user.oicqNo!='' ">
                and u.OICQ_NO =#{user.oicqNo}
            </if>
            <if test="user.email!=null and user.email!='' ">
                and u.EMAIL =#{user.email}
            </if>

            <if test="user.mobilNo != null and user.mobilNo!=''">
                and u.MOBIL_NO = #{user.mobilNo}
            </if>
        </where>
        OR (u.DEPT_ID_OTHER LIKE CONCAT('%,',concat(#{user.deptId},',%')) OR u.DEPT_ID_OTHER LIKE CONCAT(#{user.deptId},',%'))
        ORDER BY UID DESC

    </select>

    <select id="selectUser" resultMap="BaseResultMap" parameterType="map" databaseId="dm">
        SELECT  u.user_name ,u."UID",u.sex,u.USER_PRIV_NAME as ministration ,
        d.DEPT_Name ,u.AVATAR,u.OICQ_NO,u.TEL_NO_DEPT,
        u.EMAIL,u.MOBIL_NO from "USER" u
        INNER JOIN
        department d ON u.DEPT_ID = d.DEPT_ID
        <where>
            u.dept_Id = d.dept_Id
            <if test="user.deptId!=null and user.deptId!=''">
                and u.DEPT_ID = #{user.deptId}
            </if>
            <if test="user.userName!=null and user.userName!=''">
                and u.USER_NAME like CONCAT(CONCAT('%', #{user.userName}),'%')
            </if>
            <if test="user.userPrivName!=null and user.userPrivName!=''">
                and u.USER_PRIV_NAME =#{user.userPrivName}
            </if>
            <if test="user.deptName!=null and user.deptName!=''">
                and u.DEPT_NAME =#{user.deptName}
            </if>
            <if test="user.telNoDept!=null and user.telNoDept!=''">
                and u.TEL_NO_DEPT =#{user.telNoDept}
            </if>
            <if test="user.telNoHome != null and user.telNoHome!=''">
                and u.TEL_NO_HOME = #{user.telNoHome}
            </if>
            <if test="user.oicqNo!=null and user.oicqNo!='' ">
                and u.OICQ_NO =#{user.oicqNo}
            </if>
            <if test="user.email!=null and user.email!='' ">
                and u.EMAIL =#{user.email}
            </if>

            <if test="user.mobilNo != null and user.mobilNo!=''">
                and u.MOBIL_NO = #{user.mobilNo}
            </if>
        </where>
        OR (u.DEPT_ID_OTHER LIKE CONCAT('%,',concat(#{user.deptId},',%')) OR u.DEPT_ID_OTHER LIKE CONCAT(#{user.deptId},',%'))
        ORDER BY UID DESC

    </select>


</mapper>