<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myoa.dao.event.TimelineEventMapper" >
  <resultMap id="BaseResultMap" type="com.myoa.model.event.TimelineEvent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="UUID" property="uuid" jdbcType="CHAR" />
    <result column="CR_TIME" property="crTime" jdbcType="TIMESTAMP" />
    <result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
    <result column="LAST_EDIT_TIME" property="lastEditTime" jdbcType="TIMESTAMP" />
    <result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
    <result column="TITLE_" property="title" jdbcType="VARCHAR" />
    <result column="CR_USER_ID" property="crUserId" jdbcType="INTEGER" />
    <result column="UPDATE_USER_ID" property="updateUserId" jdbcType="INTEGER" />
    <result column="TIMELINE_UUID" property="timelineUuid" jdbcType="CHAR" />
    <result column="CONTENT_" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.myoa.model.event.TimelineEvent" extends="BaseResultMap" >

  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    UUID, CR_TIME, END_TIME, LAST_EDIT_TIME, START_TIME, TITLE_, CR_USER_ID, UPDATE_USER_ID, 
    TIMELINE_UUID
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CONTENT_
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.myoa.model.event.TimelineEventExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from timeline_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myoa.model.event.TimelineEventExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from timeline_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from timeline_event
    where UUID = #{uuid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from timeline_event
    where UUID = #{uuid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.myoa.model.event.TimelineEventExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from timeline_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myoa.model.event.TimelineEvent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into timeline_event (UUID, CR_TIME, END_TIME, 
      LAST_EDIT_TIME, START_TIME, TITLE_, 
      CR_USER_ID, UPDATE_USER_ID, TIMELINE_UUID, 
      CONTENT_)
    values (#{uuid,jdbcType=CHAR}, #{crTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{lastEditTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR}, 
      #{crUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, #{timelineUuid,jdbcType=CHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myoa.model.event.TimelineEvent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into timeline_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        UUID,
      </if>
      <if test="crTime != null" >
        CR_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="lastEditTime != null" >
        LAST_EDIT_TIME,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="title != null" >
        TITLE_,
      </if>
      <if test="crUserId != null" >
        CR_USER_ID,
      </if>
      <if test="updateUserId != null" >
        UPDATE_USER_ID,
      </if>
      <if test="timelineUuid != null" >
        TIMELINE_UUID,
      </if>
      <if test="content != null" >
        CONTENT_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="crTime != null" >
        #{crTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastEditTime != null" >
        #{lastEditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="crUserId != null" >
        #{crUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="timelineUuid != null" >
        #{timelineUuid,jdbcType=CHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myoa.model.event.TimelineEventExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from timeline_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline_event
    <set >
      <if test="record.uuid != null" >
        UUID = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.crTime != null" >
        CR_TIME = #{record.crTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastEditTime != null" >
        LAST_EDIT_TIME = #{record.lastEditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null" >
        START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.title != null" >
        TITLE_ = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.crUserId != null" >
        CR_USER_ID = #{record.crUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null" >
        UPDATE_USER_ID = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.timelineUuid != null" >
        TIMELINE_UUID = #{record.timelineUuid,jdbcType=CHAR},
      </if>
      <if test="record.content != null" >
        CONTENT_ = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline_event
    set UUID = #{record.uuid,jdbcType=CHAR},
      CR_TIME = #{record.crTime,jdbcType=TIMESTAMP},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      LAST_EDIT_TIME = #{record.lastEditTime,jdbcType=TIMESTAMP},
      START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      TITLE_ = #{record.title,jdbcType=VARCHAR},
      CR_USER_ID = #{record.crUserId,jdbcType=INTEGER},
      UPDATE_USER_ID = #{record.updateUserId,jdbcType=INTEGER},
      TIMELINE_UUID = #{record.timelineUuid,jdbcType=CHAR},
      CONTENT_ = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline_event
    set UUID = #{record.uuid,jdbcType=CHAR},
      CR_TIME = #{record.crTime,jdbcType=TIMESTAMP},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      LAST_EDIT_TIME = #{record.lastEditTime,jdbcType=TIMESTAMP},
      START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      TITLE_ = #{record.title,jdbcType=VARCHAR},
      CR_USER_ID = #{record.crUserId,jdbcType=INTEGER},
      UPDATE_USER_ID = #{record.updateUserId,jdbcType=INTEGER},
      TIMELINE_UUID = #{record.timelineUuid,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myoa.model.event.TimelineEvent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline_event
    <set >
      <if test="crTime != null" >
        CR_TIME = #{crTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastEditTime != null" >
        LAST_EDIT_TIME = #{lastEditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        TITLE_ = #{title,jdbcType=VARCHAR},
      </if>
      <if test="crUserId != null" >
        CR_USER_ID = #{crUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        UPDATE_USER_ID = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="timelineUuid != null" >
        TIMELINE_UUID = #{timelineUuid,jdbcType=CHAR},
      </if>
      <if test="content != null" >
        CONTENT_ = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where UUID = #{uuid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myoa.model.event.TimelineEvent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline_event
    set CR_TIME = #{crTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      LAST_EDIT_TIME = #{lastEditTime,jdbcType=TIMESTAMP},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
      TITLE_ = #{title,jdbcType=VARCHAR},
      CR_USER_ID = #{crUserId,jdbcType=INTEGER},
      UPDATE_USER_ID = #{updateUserId,jdbcType=INTEGER},
      TIMELINE_UUID = #{timelineUuid,jdbcType=CHAR},
      CONTENT_ = #{content,jdbcType=LONGVARCHAR}
    where UUID = #{uuid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myoa.model.event.TimelineEvent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update timeline_event
    set CR_TIME = #{crTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      LAST_EDIT_TIME = #{lastEditTime,jdbcType=TIMESTAMP},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
      TITLE_ = #{title,jdbcType=VARCHAR},
      CR_USER_ID = #{crUserId,jdbcType=INTEGER},
      UPDATE_USER_ID = #{updateUserId,jdbcType=INTEGER},
      TIMELINE_UUID = #{timelineUuid,jdbcType=CHAR}
    where UUID = #{uuid,jdbcType=CHAR}
  </update>

  <select id="getEventList" parameterType="com.myoa.model.event.TimelineEvent" resultMap="BaseResultMap">
    /*SELECT UUID,TITLE_,END_TIME,START_TIME,CONTENT_ FROM timeline_event*/
    SELECT
	te.UUID,
	te.TITLE_,
	te.END_TIME,
	te.START_TIME,
	te.CONTENT_

FROM
	timeline_event te,
timeline t
WHERE te.TIMELINE_UUID=t.UUID
AND
t.UUID = #{uuid}
ORDER BY  te.START_TIME DESC
  </select>

  <select id="getEventDetailByUuid" parameterType="String" resultMap="BaseResultMap">
      SELECT TITLE_,END_TIME,START_TIME,CONTENT_ FROM timeline_event WHERE UUID = #{uuid}
  </select>

  <update id="updateInfor" parameterType="com.myoa.model.event.TimelineEvent">
    update timeline_event
    <set>
      <if test="endTime != null" >
        END_TIME = #{endTime},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime},
      </if>
      <if test="title != null" >
        TITLE_ = #{title},
      </if>
      <if test="content != null" >
        CONTENT_ = #{content},
      </if>
    </set>
    where UUID = #{uuid}
  </update>
  <update id="updateInfor" parameterType="com.myoa.model.event.TimelineEvent" databaseId="oracle">
    update TIMELINE_EVENT
    <set>
      <if test="endTime != null" >
        END_TIME = to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="startTime != null" >
        START_TIME = to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="title != null" >
        TITLE_ = #{title},
      </if>
      <if test="content != null" >
        CONTENT_ = #{content},
      </if>
    </set>
    where UUID = #{uuid}
  </update>
  <update id="updateInfor" parameterType="com.myoa.model.event.TimelineEvent" databaseId="dm">
    update TIMELINE_EVENT
    <set>
      <if test="endTime != null" >
        END_TIME = to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="startTime != null" >
        START_TIME = to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="title != null" >
        TITLE_ = #{title},
      </if>
      <if test="content != null" >
        CONTENT_ = #{content},
      </if>
    </set>
    where UUID = #{uuid}
  </update>

  <insert id="addEventInfor" parameterType="com.myoa.model.event.TimelineEvent">
    insert into timeline_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
        UUID,
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="title != null" >
        TITLE_,
      </if>
      <if test="content != null" >
        CONTENT_,
      </if>
      <if test="timelineUuid != null" >
        TIMELINE_UUID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid},
      </if>
      <if test="endTime != null" >
        #{endTime},
      </if>
      <if test="startTime != null" >
        #{startTime},
      </if>
      <if test="title != null" >
        #{title},
      </if>
      <if test="content != null" >
        #{content},
      </if>
      <if test="timelineUuid != null" >
      #{timelineUuid},
      </if>
    </trim>
  </insert>
  <insert id="addEventInfor" parameterType="com.myoa.model.event.TimelineEvent" databaseId="oracle">
    insert into TIMELINE_EVENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      UUID,
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="title != null" >
        TITLE_,
      </if>
      <if test="content != null" >
        CONTENT_,
      </if>
      <if test="timelineUuid != null" >
        TIMELINE_UUID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid},
      </if>
      <if test="endTime != null" >
        to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="startTime != null" >
        to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="title != null" >
        #{title},
      </if>
      <if test="content != null" >
        #{content},
      </if>
      <if test="timelineUuid != null" >
        #{timelineUuid},
      </if>
    </trim>
  </insert>
  <insert id="addEventInfor" parameterType="com.myoa.model.event.TimelineEvent" databaseId="dm">
    insert into TIMELINE_EVENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      UUID,
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="title != null" >
        TITLE_,
      </if>
      <if test="content != null" >
        CONTENT_,
      </if>
      <if test="timelineUuid != null" >
        TIMELINE_UUID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid},
      </if>
      <if test="endTime != null" >
        to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="startTime != null" >
        to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="title != null" >
        #{title},
      </if>
      <if test="content != null" >
        #{content},
      </if>
      <if test="timelineUuid != null" >
        #{timelineUuid},
      </if>
    </trim>
  </insert>

  <delete id="deleteEventByUuid" parameterType="String">
    DELETE FROM timeline_event WHERE UUID = #{uuid}
  </delete>
</mapper>