/*     */ package com.xoa.service.supervision.impl;
/*     */ 
/*     */ import com.xoa.dao.supervision.SupervisionApplyMapper;
/*     */ import com.xoa.dao.supervision.SupervisionMapper;
/*     */ import com.xoa.model.supervision.Supervision;
/*     */ import com.xoa.model.supervision.SupervisionApply;
/*     */ import com.xoa.service.supervision.SupervisionApplyService;
/*     */ import com.xoa.util.DateFormat;
/*     */ import com.xoa.util.ToJson;
/*     */ import java.util.List;
/*     */ import javax.servlet.http.HttpServletRequest;
/*     */ import javax.servlet.http.HttpSession;
/*     */ import org.springframework.beans.factory.annotation.Autowired;
/*     */ import org.springframework.stereotype.Service;
/*     */ import org.springframework.transaction.annotation.Transactional;
/*     */ 
/*     */ @Service
/*     */ public class SupervisionApplyServiceImpl
/*     */   implements SupervisionApplyService
/*     */ {
/*     */ 
/*     */   @Autowired
/*     */   SupervisionApplyMapper supervisionApplyMapper;
/*     */ 
/*     */   @Autowired
/*     */   SupervisionMapper supervisionMapper;
/*     */ 
/*     */   @Transactional
/*     */   public ToJson<SupervisionApply> insertSupApply(HttpServletRequest request, SupervisionApply supervisionApply)
/*     */   {
/*  43 */     ToJson toJson = new ToJson();
/*     */     try {
/*  45 */       Supervision supervision = new Supervision();
				Supervision sup	=null;
/*  46 */       String userId = (String)request.getSession().getAttribute("userId");
/*  47 */       supervisionApply.setCreaterId(userId);
/*  48 */       String currentTime = DateFormat.getCurrentTime();
/*  49 */       supervisionApply.setCreateTime(currentTime);
/*  50 */       int abc = supervisionApply.getType().intValue();
/*  51 */       switch (abc) {
/*     */       case 1:
/*  53 */         if (supervisionApply.getStatus().intValue() != 0) break;
/*  54 */         sup = new Supervision();
/*  55 */         sup.setSid(supervisionApply.getSupId());
/*  56 */         sup.setStatus(Integer.valueOf(2));
/*  57 */         int a = this.supervisionMapper.updateByPrimaryKeySelective(sup);
/*  58 */         if (a < 1) {
/*  59 */           return toJson;
/*     */         }
/*  61 */         break;
/*     */       case 2:
/*  64 */         if (supervisionApply.getStatus().intValue() != 0) break;
/*  65 */         sup = new Supervision();
/*  66 */         sup.setSid(supervisionApply.getSupId());
/*  67 */         sup.setStatus(Integer.valueOf(4));
/*  68 */         int e = this.supervisionMapper.updateByPrimaryKeySelective(sup);
/*  69 */         if (e < 1) {
/*  70 */           return toJson;
/*     */         }
/*  72 */         break;
/*     */       case 3:
/*  75 */         if (supervisionApply.getStatus().intValue() != 0) break;
/*  76 */         sup = new Supervision();
/*  77 */         sup.setSid(supervisionApply.getSupId());
/*  78 */         sup.setStatus(Integer.valueOf(5));
/*  79 */         sup.setRealEndTime(DateFormat.getCurrentTime());
/*  80 */         int b = this.supervisionMapper.updateByPrimaryKeySelective(sup);
/*  81 */         if (b < 1) {
/*  82 */           return toJson;
/*     */         }
/*  84 */         break;
/*     */       }
/*     */ 
/*  91 */       int b = this.supervisionApplyMapper.addSupervisionApply(supervisionApply);
/*  92 */       if (b > 0) {
/*  93 */         toJson.setFlag(0);
/*  94 */         toJson.setMsg("ok");
/*     */       } else {
/*  96 */         toJson.setFlag(1);
/*  97 */         toJson.setMsg("新增失败");
/*     */       }
/*     */     } catch (Exception e) {
/* 100 */       e.printStackTrace();
/* 101 */       toJson.setMsg(e.getMessage());
/*     */     }
/* 103 */     return toJson;
/*     */   }
/*     */ 
/*     */   public ToJson<SupervisionApply> updateStatus(HttpServletRequest request, SupervisionApply supervisionApply)
/*     */   {
/* 108 */     ToJson toJson = new ToJson(1, "error");
/*     */     try
/*     */     {
/* 111 */       int abc = supervisionApply.getType().intValue();
/* 112 */       switch (abc) {
/*     */       case 1:
/* 114 */         if (supervisionApply.getStatus().intValue() == 1) {
/* 115 */           Supervision sup = new Supervision();
/* 116 */           sup.setSid(supervisionApply.getSupId());
/* 117 */           sup.setStatus(Integer.valueOf(3));
/* 118 */           int a = this.supervisionMapper.updateByPrimaryKeySelective(sup);
/* 119 */           if (a < 1)
/* 120 */             return toJson;
/*     */         }
/*     */         else {
/* 123 */           Supervision sup = new Supervision();
/* 124 */           sup.setSid(supervisionApply.getSupId());
/* 125 */           sup.setStatus(Integer.valueOf(1));
/* 126 */           int a = this.supervisionMapper.updateByPrimaryKeySelective(sup);
/* 127 */           if (a < 1) {
/* 128 */             return toJson;
/*     */           }
/*     */         }
/* 131 */         int a = this.supervisionApplyMapper.updateStatus(supervisionApply);
/* 132 */         if (a >= 1) break;
/* 133 */         return toJson;
/*     */       case 2:
/* 137 */         if (supervisionApply.getStatus().intValue() == 1) {
/* 138 */           Supervision sup = new Supervision();
/* 139 */           sup.setSid(supervisionApply.getSupId());
/* 140 */           sup.setStatus(Integer.valueOf(1));
/* 141 */           int e = this.supervisionMapper.updateByPrimaryKeySelective(sup);
/* 142 */           if (e < 1)
/* 143 */             return toJson;
/*     */         }
/*     */         else {
/* 146 */           Supervision sup = new Supervision();
/* 147 */           sup.setSid(supervisionApply.getSupId());
/* 148 */           sup.setStatus(Integer.valueOf(3));
/* 149 */           int e = this.supervisionMapper.updateByPrimaryKeySelective(sup);
/* 150 */           if (e < 1) {
/* 151 */             return toJson;
/*     */           }
/*     */         }
/* 154 */         int e = this.supervisionApplyMapper.updateStatus(supervisionApply);
/* 155 */         if (e >= 1) break;
/* 156 */         return toJson;
/*     */       case 3:
/* 160 */         if (supervisionApply.getStatus().intValue() == 1) {
/* 161 */           Supervision sup = new Supervision();
/* 162 */           sup.setSid(supervisionApply.getSupId());
/* 163 */           sup.setStatus(Integer.valueOf(6));
/* 164 */           sup.setRealEndTime(DateFormat.getCurrentTime());
/* 165 */           int b = this.supervisionMapper.updateByPrimaryKeySelective(sup);
/* 166 */           if (b < 1)
/* 167 */             return toJson;
/*     */         }
/* 169 */         else if (supervisionApply.getStatus().intValue() == 3) {
/* 170 */           Supervision sup = new Supervision();
/* 171 */           sup.setSid(supervisionApply.getSupId());
/* 172 */           sup.setStatus(Integer.valueOf(1));
/* 173 */           int b = this.supervisionMapper.updateByPrimaryKeySelective(sup);
/* 174 */           if (b < 1) {
/* 175 */             return toJson;
/*     */           }
/*     */ 
/*     */         }
/*     */ 
/* 180 */         int b = this.supervisionApplyMapper.updateStatus(supervisionApply);
/* 181 */         if (b >= 1) break;
/* 182 */         return toJson;
/*     */       case 4:
/* 186 */         if (supervisionApply.getStatus().intValue() == 1) {
/* 187 */           Supervision sup = new Supervision();
/* 188 */           sup.setSid(supervisionApply.getSupId());
/* 189 */           sup.setStatus(Integer.valueOf(4));
/* 190 */           int c = this.supervisionMapper.updateByPrimaryKeySelective(sup);
/* 191 */           if (c < 1)
/* 192 */             return toJson;
/*     */         }
/*     */         else {
/* 195 */           Supervision sup = new Supervision();
/* 196 */           sup.setSid(supervisionApply.getSupId());
/* 197 */           sup.setStatus(Integer.valueOf(3));
/* 198 */           int c = this.supervisionMapper.updateByPrimaryKeySelective(sup);
/* 199 */           if (c < 1) {
/* 200 */             return toJson;
/*     */           }
/*     */         }
/* 203 */         int c = this.supervisionApplyMapper.updateStatus(supervisionApply);
/* 204 */         if (c >= 1) break;
/* 205 */         return toJson;
/*     */       }
/*     */ 
/* 212 */       toJson.setFlag(0);
/* 213 */       toJson.setMsg("操作成功");
/*     */     } catch (Exception e) {
/* 215 */       e.printStackTrace();
/* 216 */       toJson.setMsg(e.getMessage());
/*     */     }
/* 218 */     return toJson;
/*     */   }
/*     */ 
/*     */   public ToJson<SupervisionApply> getStatusInfor(HttpServletRequest request, Integer status)
/*     */   {
/* 223 */     ToJson toJson = new ToJson(1, "error");
/*     */     try {
/* 225 */       String createrId = (String)request.getSession().getAttribute("userId");
/* 226 */       SupervisionApply sup = new SupervisionApply();
/* 227 */       sup.setCreaterId(createrId);
/* 228 */       List list = this.supervisionApplyMapper.getStatusInfor(sup);
/* 229 */       if (list.size() > 0) {
/* 230 */         toJson.setObj(list);
/* 231 */         toJson.setFlag(0);
/* 232 */         toJson.setMsg("OK");
/*     */       } else {
/* 234 */         toJson.setMsg("err");
/*     */       }
/* 236 */       toJson.setFlag(0);
/*     */     } catch (Exception e) {
/* 238 */       e.printStackTrace();
/* 239 */       toJson.setMsg(e.getMessage());
/*     */     }
/* 241 */     return toJson;
/*     */   }
/*     */ 
/*     */   public ToJson<SupervisionApply> getSupApplyByStatus(HttpServletRequest request, SupervisionApply supervisionApply)
/*     */   {
/* 248 */     ToJson toJson = new ToJson(1, "error");
/*     */     try {
/* 250 */       supervisionApply.setCreaterId((String)request.getSession().getAttribute("userId"));
/* 251 */       List list = this.supervisionApplyMapper.getStatusInfor(supervisionApply);
/* 252 */       if (list.size() > 0) {
/* 253 */         toJson.setObj(list);
/* 254 */         toJson.setFlag(0);
/* 255 */         toJson.setMsg("OK");
/*     */       } else {
/* 257 */         toJson.setMsg("err");
/*     */       }
/* 259 */       toJson.setFlag(0);
/*     */     } catch (Exception e) {
/* 261 */       e.printStackTrace();
/* 262 */       toJson.setMsg(e.getMessage());
/*     */     }
/* 264 */     return toJson;
/*     */   }
/*     */ }

/* Location:           D:\xoa\webapps\ROOT\WEB-INF\classes\
 * Qualified Name:     com.xoa.service.supervision.impl.SupervisionApplyServiceImpl
 * JD-Core Version:    0.6.0
 */