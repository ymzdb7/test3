<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.workflow.FlowRuleMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.workflow.FlowRule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="RULE_ID" property="ruleId" javaType="int" />
    <result column="FLOW_ID" property="flowId" javaType="int" />
    <result column="USER_ID" property="userId" javaType="string" />
    <result column="TO_ID" property="toId" javaType="string" />
    <result column="BEGIN_DATE" property="beginDate" javaType="string" />
    <result column="END_DATE" property="endDate" javaType="string" />
    <result column="STATUS" property="status" javaType="string" />
    <result column="create_time" property="createTime" javaType="string" />
    <result column="create_user" property="createUser" javaType="string" />
    <result column="update_time" property="updateTime" javaType="string" />
    <result column="update_user" property="updateUser" javaType="string" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    RULE_ID, FLOW_ID, USER_ID, TO_ID, BEGIN_DATE, END_DATE, STATUS, create_time, create_user, 
    update_time, update_user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.workflow.FlowRuleExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flow_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from flow_rule
    where RULE_ID = #{ruleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from flow_rule
    where RULE_ID = #{ruleId}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.workflow.FlowRuleExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from flow_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.workflow.FlowRule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into flow_rule (RULE_ID, FLOW_ID, USER_ID, 
      TO_ID, BEGIN_DATE, END_DATE, 
      STATUS, create_time, create_user, 
      update_time, update_user)
    values (#{ruleId,jdbcType=INTEGER}, #{flowId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{toId,jdbcType=VARCHAR}, #{beginDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.workflow.FlowRule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into flow_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ruleId != null" >
        RULE_ID,
      </if>
      <if test="flowId != null" >
        FLOW_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="toId != null" >
        TO_ID,
      </if>
      <if test="beginDate != null" >
        BEGIN_DATE,
      </if>
      <if test="endDate != null" >
        END_DATE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ruleId != null" >
        #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="flowId != null" >
        #{flowId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="toId != null" >
        #{toId,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null" >
        #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.workflow.FlowRuleExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from flow_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update flow_rule
    <set >
      <if test="record.ruleId != null" >
        RULE_ID = #{record.ruleId,jdbcType=INTEGER},
      </if>
      <if test="record.flowId != null" >
        FLOW_ID = #{record.flowId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.toId != null" >
        TO_ID = #{record.toId,jdbcType=VARCHAR},
      </if>
      <if test="record.beginDate != null" >
        BEGIN_DATE = #{record.beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null" >
        END_DATE = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update flow_rule
    set RULE_ID = #{record.ruleId,jdbcType=INTEGER},
      FLOW_ID = #{record.flowId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      TO_ID = #{record.toId,jdbcType=VARCHAR},
      BEGIN_DATE = #{record.beginDate,jdbcType=TIMESTAMP},
      END_DATE = #{record.endDate,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.workflow.FlowRule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update flow_rule
    <set >
      <if test="flowId != null" >
        FLOW_ID = #{flowId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="toId != null" >
        TO_ID = #{toId,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null" >
        BEGIN_DATE = #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        END_DATE = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where RULE_ID = #{ruleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.workflow.FlowRule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update flow_rule
    set FLOW_ID = #{flowId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=VARCHAR},
      TO_ID = #{toId,jdbcType=VARCHAR},
      BEGIN_DATE = #{beginDate,jdbcType=TIMESTAMP},
      END_DATE = #{endDate,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where RULE_ID = #{ruleId,jdbcType=INTEGER}
  </update>
  <select id="queryFlowRule" resultMap="BaseResultMap">
    SELECT
	f.*,
	ft.FLOW_NAME AS flowName,
	u.user_name AS userIdName,
	u1.user_name AS toIdName
FROM
	flow_rule f,
	flow_type ft,
	USER u,
	USER u1
WHERE
	u.USER_ID = f.USER_ID
AND u1.USER_ID = f.USER_ID AND f.FLOW_ID=ft.FLOW_ID
  </select>
  <insert id="insertFlowRule" parameterType="com.xoa.model.workflow.FlowRule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into flow_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ruleId != null" >
        RULE_ID,
      </if>
      <if test="flowId != null" >
        FLOW_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="toId != null" >
        TO_ID,
      </if>
      <if test="beginDate != null" >
        BEGIN_DATE,
      </if>
      <if test="endDate != null" >
        END_DATE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ruleId != null" >
        #{ruleId},
      </if>
      <if test="flowId != null" >
        #{flowId},
      </if>
      <if test="userId != null" >
        #{userId},
      </if>
      <if test="toId != null" >
        #{toId},
      </if>
      <if test="beginDate != null" >
        #{beginDate},
      </if>
      <if test="endDate != null" >
        #{endDate},
      </if>
      <if test="status != null" >
        #{status},
      </if>
      <if test="createTime != null" >
        #{createTime},
      </if>
      <if test="createUser != null" >
        #{createUser},
      </if>
      <if test="updateTime != null" >
        #{updateTime},
      </if>
      <if test="updateUser != null" >
        #{updateUser},
      </if>
    </trim>
  </insert>
  <update id="updateStatusToStart" parameterType="com.xoa.model.workflow.FlowRule">
       UPDATE  flow_rule
       SET STATUS = '1'
       <if test="ruleId!=null and ruleId!=''">
         WHERE  RULE_ID=#{ruleId}
       </if>

  </update>

  <update id="updateStatusToEnd" parameterType="com.xoa.model.workflow.FlowRule">
    UPDATE  flow_rule
    SET STATUS = '0'
    <if test="ruleId!=null and ruleId!='' ">
      WHERE  RULE_ID=#{ruleId}
    </if>

  </update>
  <delete id="deleteFlowRule" parameterType="com.xoa.model.workflow.FlowRule">
    DELETE  FROM  flow_rule
    <if test="ruleId!=null and ruleId!=''">
      WHERE  RULE_ID=#{ruleId}
    </if>
  </delete>

  <select id="selectFlowRule" resultMap="BaseResultMap" parameterType="com.xoa.model.workflow.FlowRule">
    SELECT * FROM flow_rule where 1=1
    <if test="flowName!=null and flowName!=''">
      and FLOW_ID =( SELECT FLOW_ID FROM flow_type where FLOW_NAME = #{flowName})
    </if>
    <if test="userName!=null and userName!=''">
      and USER_ID = (SELECT USER_ID FROM user where USER_NAME = #{userName})
    </if>
    <if test="toUserName!=null and toUserName!=''">
      AND TO_ID = (SELECT USER_ID FROM user where USER_NAME = #{toUserName})
    </if>
  </select>


</mapper>