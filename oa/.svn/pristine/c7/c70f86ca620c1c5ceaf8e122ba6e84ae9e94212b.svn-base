 package com.xoa.service.hierarchical;
 
 import com.alibaba.fastjson.JSONObject;
 import com.xoa.dao.hierarchical.HierarchicalGlobalMapper;
 import com.xoa.dao.users.UserPrivMapper;
 import com.xoa.model.hierarchical.HierarchicalGlobal;
 import com.xoa.service.department.DepartmentService;
 import com.xoa.service.users.UsersService;
 import com.xoa.util.AjaxJson;
 import com.xoa.util.ToJson;
 import com.xoa.util.common.L;
 import com.xoa.util.common.StringUtils;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
 import org.apache.commons.collections.map.HashedMap;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
 @Service
 public class HierarchicalGlobalService
 {
 
   @Autowired
   private HierarchicalGlobalMapper hierarchicalGlobalMapper;
 
   @Autowired
   private UsersService usersService;
 
   @Autowired
   private DepartmentService departmentService;
 
   @Autowired
   private UserPrivMapper userPrivMapper;
 
   public ToJson<HierarchicalGlobal> setHierarchicalGlobalPerson(String globalJson)
   {
     ToJson json = new ToJson(1, "error");
     try {
       int count = 0;
       List<HierarchicalGlobal> list = new ArrayList();
       list = JSONObject.parseArray(globalJson, HierarchicalGlobal.class);
       for (HierarchicalGlobal hierarchicalGlobal : list) {
         if (this.hierarchicalGlobalMapper.selByModel(hierarchicalGlobal) != null)
           count = this.hierarchicalGlobalMapper.updatePersonByModel(hierarchicalGlobal);
         else {
           count = this.hierarchicalGlobalMapper.insertGlobal(hierarchicalGlobal);
         }
       }
       json.setMsg("ok");
       json.setFlag(0);
     } catch (Exception e) {
       json.setMsg(e.getMessage());
       L.e(new Object[] { "HierarchicalGlobalService setHierarchicalGlobalPerson:" + e });
     }
     return json;
   }
 
   public AjaxJson selGlobalPerson()
   {
     AjaxJson ajaxJson = new AjaxJson();
     ajaxJson.setMsg("error");
     ajaxJson.setFlag(false);
     try {
       ArrayList<HierarchicalGlobal> arrayList = new ArrayList();
       Map map = new HashedMap();
       HierarchicalGlobal hierarchicalGlobal = new HierarchicalGlobal();
       hierarchicalGlobal.setModelId("0132");
       HierarchicalGlobal global = this.hierarchicalGlobalMapper.selByModel(hierarchicalGlobal);
       arrayList.add(global);
       int i = 1;
       for (HierarchicalGlobal temp : arrayList) {
         if (temp != null) {
           temp.setGlobalPersonName(this.usersService.getUserNameById(temp.getGlobalPerson()));
           if (!StringUtils.checkNull(temp.getGlobalDept()).booleanValue()) {
             temp.setGlobalDeptName(this.departmentService.getDeptNameByDeptId(temp.getGlobalDept(), ","));
           }
           if (!StringUtils.checkNull(temp.getGlobalPriv()).booleanValue()) {
             StringBuffer privBuf = new StringBuffer();
             String[] privArr = temp.getGlobalPriv().split(",");
             String str = "";
             for (String priv : privArr) {
               if (!StringUtils.checkNull(priv).booleanValue()) {
                 str = this.userPrivMapper.getPrivNameById(Integer.valueOf(priv));
               }
               if (!StringUtils.checkNull(str).booleanValue()) {
                 privBuf.append(str + ",");
               }
             }
             temp.setGlobalPrivName(privBuf.toString());
           }
         }
         map.put("model" + i, temp);
         i++;
       }
       ajaxJson.setAttributes(map);
       ajaxJson.setMsg("ok");
       ajaxJson.setFlag(true);
     } catch (Exception e) {
       ajaxJson.setMsg(e.getMessage());
       L.e(new Object[] { "HierarchicalGlobalService selGlobalPerson:" + e });
     }
     return ajaxJson;
   }
 }
