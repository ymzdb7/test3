<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.sys.SealMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.sys.Seal" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="SEAL_ID" property="sealId" jdbcType="VARCHAR" />
    <result column="DEPT_ID" property="deptId" jdbcType="VARCHAR" />
    <result column="SEAL_NAME" property="sealName" jdbcType="VARCHAR" />
    <result column="ATTACHMENT_ID" property="attachmentId" jdbcType="VARCHAR" />
    <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.sys.SealWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="CERT_STR" property="certStr" jdbcType="LONGVARCHAR" />
    <result column="USER_STR" property="userStr" jdbcType="LONGVARCHAR" />
    <result column="SEAL_DATA" property="sealData" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, SEAL_ID, DEPT_ID, SEAL_NAME, CREATE_TIME
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CERT_STR, USER_STR, SEAL_DATA
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.sys.SealExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from seal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.sys.SealExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from seal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from seal
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from seal
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.sys.SealExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from seal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.sys.SealWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into seal (ID, SEAL_ID, DEPT_ID, 
      SEAL_NAME, CREATE_TIME, CERT_STR, 
      USER_STR, SEAL_DATA)
    values (#{id,jdbcType=INTEGER}, #{sealId,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, 
      #{sealName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{certStr,jdbcType=LONGVARCHAR}, 
      #{userStr,jdbcType=LONGVARCHAR}, #{sealData,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.sys.SealWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into seal
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sealId != null" >
        SEAL_ID,
      </if>
      <if test="deptId != null" >
        DEPT_ID,
      </if>
      <if test="sealName != null" >
        SEAL_NAME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="certStr != null" >
        CERT_STR,
      </if>
      <if test="userStr != null" >
        USER_STR,
      </if>
      <if test="sealData != null" >
        SEAL_DATA,
      </if>
      <if test="attachmentId != null">
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName !=null">
        ATTACHMENT_NAME
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sealId != null" >
        #{sealId,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="sealName != null" >
        #{sealName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certStr != null" >
        #{certStr,jdbcType=LONGVARCHAR},
      </if>
      <if test="userStr != null" >
        #{userStr,jdbcType=LONGVARCHAR},
      </if>
      <if test="sealData != null" >
        #{sealData,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null">
        #{attachmentId,jdbcType=VARCHAR},
      </if>
      <if test="attachmentName !=null">
        #{attachmentName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.sys.SealExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from seal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sealId != null" >
        SEAL_ID = #{record.sealId,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=VARCHAR},
      </if>
      <if test="record.sealName != null" >
        SEAL_NAME = #{record.sealName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.certStr != null" >
        CERT_STR = #{record.certStr,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.userStr != null" >
        USER_STR = #{record.userStr,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sealData != null" >
        SEAL_DATA = #{record.sealData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal
    set ID = #{record.id,jdbcType=INTEGER},
      SEAL_ID = #{record.sealId,jdbcType=VARCHAR},
      DEPT_ID = #{record.deptId,jdbcType=VARCHAR},
      SEAL_NAME = #{record.sealName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CERT_STR = #{record.certStr,jdbcType=LONGVARCHAR},
      USER_STR = #{record.userStr,jdbcType=LONGVARCHAR},
      SEAL_DATA = #{record.sealData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal
    set ID = #{record.id,jdbcType=INTEGER},
      SEAL_ID = #{record.sealId,jdbcType=VARCHAR},
      DEPT_ID = #{record.deptId,jdbcType=VARCHAR},
      SEAL_NAME = #{record.sealName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.sys.SealWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal
    <set >
      <if test="sealId != null" >
        SEAL_ID = #{sealId,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="sealName != null" >
        SEAL_NAME = #{sealName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certStr != null" >
        CERT_STR = #{certStr,jdbcType=LONGVARCHAR},
      </if>
      <if test="userStr != null" >
        USER_STR = #{userStr,jdbcType=LONGVARCHAR},
      </if>
      <if test="sealData != null" >
        SEAL_DATA = #{sealData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.sys.SealWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal
    set SEAL_ID = #{sealId,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=VARCHAR},
      SEAL_NAME = #{sealName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CERT_STR = #{certStr,jdbcType=LONGVARCHAR},
      USER_STR = #{userStr,jdbcType=LONGVARCHAR},
      SEAL_DATA = #{sealData,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.sys.Seal" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update seal
    set SEAL_ID = #{sealId,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=VARCHAR},
      SEAL_NAME = #{sealName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="getSealByUser" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    SELECT * FROM  seal WHERE USER_STR  like CONCAT('%,',CONCAT(#{userId},',%')) OR USER_STR like CONCAT(#{userId},',%')
  </select>
  
  <select id="getAllSealInfo"  resultMap="ResultMapWithBLOBs">
    SELECT * FROM  seal
    <where>
      <trim prefixOverrides="and">
    <if test="sealWithBLOBs.sealId!=null and sealWithBLOBs.sealId!=''">
    AND  SEAL_ID  like CONCAT('%',#{sealWithBLOBs.sealId},'%')
    </if>
     <if test="sealWithBLOBs.sealName!=null and sealWithBLOBs.sealName!=''">
     AND SEAL_NAME   like CONCAT('%',#{sealWithBLOBs.sealName},'%')
     </if>
        <if test="startTime!=null and startTime!=''">
          AND #{startTime} &lt; CREATE_TIME
        </if>
        <if test="endTime!=null and endTime!=''">
          AND #{endTime} >= CREATE_TIME
        </if>
      </trim>
    </where>
  </select>
  
  <select id="getSealById" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    SELECT  * from seal WHERE ID =#{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteSeal">
    delete from seal where id in
    <foreach item="id" collection="array" open="(" close=")" separator="," >
      #{id}
    </foreach>
  </delete>
  
  <select id="getSealByName" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
     SELECT * FROM  seal WHERE SEAL_NAME  like CONCAT('%',#{sealName},'%')
  </select>
  
  <select id="getSealLogBySealId" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    SELECT * FROM  seal WHERE SEAL_ID =#{sealId}
  </select>
  
  <select id="getSealLogBySealIdLastOne" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
     SELECT * FROM  seal WHERE SEAL_ID like CONCAT('%',#{id},'%') ORDER BY ID DESC limit 0,1
  </select>

</mapper>