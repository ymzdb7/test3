package com.xoa.util.encrypt;

 import java.util.Random;

 public class EncryptSalt
{
   static final String B64T = "./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

  static void b64from24bit(byte b2, byte b1, byte b0, int outLen, StringBuilder buffer)
   {
    int w = b2 << 16 & 0xFFFFFF | b1 << 8 & 0xFFFF | b0 & 0xFF;
 
    for (int var6 = outLen; var6-- > 0; w >>= 6)
       buffer.append("./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".charAt(w & 0x3F));
   }

  public static String getRandomSalt(int num)
  {
   StringBuilder saltString = new StringBuilder();

    for (int i = 1; i <= num; i++) {
       saltString.append("./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".charAt(new Random().nextInt("./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".length())));
     }

   return saltString.toString();
  }

  public static void b64from24bit(int b2, int b1, byte b0, int outLen, StringBuilder passwd)
  {
  }
 }

