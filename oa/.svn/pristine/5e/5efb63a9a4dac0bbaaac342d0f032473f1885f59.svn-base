<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.edu.eduTrainingPlanRecord.EduTrainingRecordMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="RECORD_ID" property="recordId" jdbcType="INTEGER" />
    <result column="CREATE_USER_ID" property="createUserId" jdbcType="VARCHAR" />
    <result column="CREATE_DEPT_ID" property="createDeptId" jdbcType="INTEGER" />
    <result column="STAFF_USER_ID" property="staffUserId" jdbcType="VARCHAR" />
    <result column="T_PLAN_NO" property="tPlanNo" jdbcType="VARCHAR" />
    <result column="T_PLAN_NAME" property="tPlanName" jdbcType="VARCHAR" />
    <result column="T_INSTITUTION_NAME" property="tInstitutionName" jdbcType="VARCHAR" />
    <result column="TRAINNING_COST" property="trainningCost" jdbcType="DECIMAL" />
    <result column="T_EXAM_RESULTS" property="tExamResults" jdbcType="VARCHAR" />
    <result column="T_EXAM_LEVEL" property="tExamLevel" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecordWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="DUTY_SITUATION" property="dutySituation" jdbcType="LONGVARCHAR" />
    <result column="TRAINNING_SITUATION" property="trainningSituation" jdbcType="LONGVARCHAR" />
    <result column="T_COMMENT" property="tComment" jdbcType="LONGVARCHAR" />
    <result column="REMARK" property="remark" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_ID" property="attachmentId" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    RECORD_ID, CREATE_USER_ID, CREATE_DEPT_ID, STAFF_USER_ID, T_PLAN_NO, T_PLAN_NAME, 
    T_INSTITUTION_NAME, TRAINNING_COST, T_EXAM_RESULTS, T_EXAM_LEVEL
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    DUTY_SITUATION, TRAINNING_SITUATION, T_COMMENT, REMARK, ATTACHMENT_ID, ATTACHMENT_NAME
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecordExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from edu_training_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecordExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from edu_training_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from edu_training_record
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from edu_training_record
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecordExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from edu_training_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecordWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into edu_training_record (RECORD_ID, CREATE_USER_ID, CREATE_DEPT_ID, 
      STAFF_USER_ID, T_PLAN_NO, T_PLAN_NAME, 
      T_INSTITUTION_NAME, TRAINNING_COST, T_EXAM_RESULTS, 
      T_EXAM_LEVEL, DUTY_SITUATION, TRAINNING_SITUATION, 
      T_COMMENT, REMARK, ATTACHMENT_ID, 
      ATTACHMENT_NAME)
    values (#{recordId,jdbcType=INTEGER}, #{createUserId,jdbcType=VARCHAR}, #{createDeptId,jdbcType=INTEGER}, 
      #{staffUserId,jdbcType=VARCHAR}, #{tPlanNo,jdbcType=VARCHAR}, #{tPlanName,jdbcType=VARCHAR}, 
      #{tInstitutionName,jdbcType=VARCHAR}, #{trainningCost,jdbcType=DECIMAL}, #{tExamResults,jdbcType=VARCHAR},
      #{tExamLevel,jdbcType=INTEGER}, #{dutySituation,jdbcType=LONGVARCHAR}, #{trainningSituation,jdbcType=LONGVARCHAR}, 
      #{tComment,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}, #{attachmentId,jdbcType=LONGVARCHAR}, 
      #{attachmentName,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecordWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into edu_training_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        RECORD_ID,
      </if>
      <if test="createUserId != null" >
        CREATE_USER_ID,
      </if>
      <if test="createDeptId != null" >
        CREATE_DEPT_ID,
      </if>
      <if test="staffUserId != null" >
        STAFF_USER_ID,
      </if>
      <if test="tPlanNo != null" >
        T_PLAN_NO,
      </if>
      <if test="tPlanName != null" >
        T_PLAN_NAME,
      </if>
      <if test="tInstitutionName != null" >
        T_INSTITUTION_NAME,
      </if>
      <if test="trainningCost != null" >
        TRAINNING_COST,
      </if>
      <if test="tExamResults != null" >
        T_EXAM_RESULTS,
      </if>
      <if test="tExamLevel != null" >
        T_EXAM_LEVEL,
      </if>
      <if test="dutySituation != null" >
        DUTY_SITUATION,
      </if>
      <if test="trainningSituation != null" >
        TRAINNING_SITUATION,
      </if>
      <if test="tComment != null" >
        T_COMMENT,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createDeptId != null" >
        #{createDeptId,jdbcType=INTEGER},
      </if>
      <if test="staffUserId != null" >
        #{staffUserId,jdbcType=VARCHAR},
      </if>
      <if test="tPlanNo != null" >
        #{tPlanNo,jdbcType=VARCHAR},
      </if>
      <if test="tPlanName != null" >
        #{tPlanName,jdbcType=VARCHAR},
      </if>
      <if test="tInstitutionName != null" >
        #{tInstitutionName,jdbcType=VARCHAR},
      </if>
      <if test="trainningCost != null" >
        #{trainningCost,jdbcType=DECIMAL},
      </if>
      <if test="tExamResults != null" >
        #{tExamResults,jdbcType=VARCHAR},
      </if>
      <if test="tExamLevel != null" >
        #{tExamLevel,jdbcType=INTEGER},
      </if>
      <if test="dutySituation != null" >
        #{dutySituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="trainningSituation != null" >
        #{trainningSituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="tComment != null" >
        #{tComment,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="insertSelective" parameterType="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecordWithBLOBs" useGeneratedKeys="true" keyProperty="recordId" databaseId="oracle">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey order="BEFORE" keyProperty="recordId" resultType="int">
      SELECT EDU_TRAINING_RECORD_ID_SEQ.nextval as recordId from dual
    </selectKey>
    insert into EDU_TRAINING_RECORD
    <trim prefix="(" suffix=")" suffixOverrides="," >
        RECORD_ID,
      <if test="createUserId != null" >
        CREATE_USER_ID,
      </if>
      <if test="createDeptId != null" >
        CREATE_DEPT_ID,
      </if>
      <if test="staffUserId != null" >
        STAFF_USER_ID,
      </if>
      <if test="tPlanNo != null" >
        T_PLAN_NO,
      </if>
      <if test="tPlanName != null" >
        T_PLAN_NAME,
      </if>
      <if test="tInstitutionName != null" >
        T_INSTITUTION_NAME,
      </if>
      <if test="trainningCost != null" >
        TRAINNING_COST,
      </if>
      <if test="tExamResults != null" >
        T_EXAM_RESULTS,
      </if>
      <if test="tExamLevel != null" >
        T_EXAM_LEVEL,
      </if>
      <if test="dutySituation != null" >
        DUTY_SITUATION,
      </if>
      <if test="trainningSituation != null" >
        TRAINNING_SITUATION,
      </if>
      <if test="tComment != null" >
        T_COMMENT,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{recordId,jdbcType=INTEGER},
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createDeptId != null" >
        #{createDeptId,jdbcType=INTEGER},
      </if>
      <if test="staffUserId != null" >
        #{staffUserId,jdbcType=VARCHAR},
      </if>
      <if test="tPlanNo != null" >
        #{tPlanNo,jdbcType=VARCHAR},
      </if>
      <if test="tPlanName != null" >
        #{tPlanName,jdbcType=VARCHAR},
      </if>
      <if test="tInstitutionName != null" >
        #{tInstitutionName,jdbcType=VARCHAR},
      </if>
      <if test="trainningCost != null" >
        #{trainningCost,jdbcType=DECIMAL},
      </if>
      <if test="tExamResults != null" >
        #{tExamResults,jdbcType=VARCHAR},
      </if>
      <if test="tExamLevel != null" >
        #{tExamLevel,jdbcType=INTEGER},
      </if>
      <if test="dutySituation != null" >
        #{dutySituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="trainningSituation != null" >
        #{trainningSituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="tComment != null" >
        #{tComment,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecordWithBLOBs" useGeneratedKeys="true" keyProperty="recordId" databaseId="dm">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey order="BEFORE" keyProperty="recordId" resultType="int">
      SELECT EDU_TRAINING_RECORD_ID_SEQ.nextval as recordId from dual
    </selectKey>
    insert into EDU_TRAINING_RECORD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      RECORD_ID,
      <if test="createUserId != null" >
        CREATE_USER_ID,
      </if>
      <if test="createDeptId != null" >
        CREATE_DEPT_ID,
      </if>
      <if test="staffUserId != null" >
        STAFF_USER_ID,
      </if>
      <if test="tPlanNo != null" >
        T_PLAN_NO,
      </if>
      <if test="tPlanName != null" >
        T_PLAN_NAME,
      </if>
      <if test="tInstitutionName != null" >
        T_INSTITUTION_NAME,
      </if>
      <if test="trainningCost != null" >
        TRAINNING_COST,
      </if>
      <if test="tExamResults != null" >
        T_EXAM_RESULTS,
      </if>
      <if test="tExamLevel != null" >
        T_EXAM_LEVEL,
      </if>
      <if test="dutySituation != null" >
        DUTY_SITUATION,
      </if>
      <if test="trainningSituation != null" >
        TRAINNING_SITUATION,
      </if>
      <if test="tComment != null" >
        T_COMMENT,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{recordId,jdbcType=INTEGER},
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createDeptId != null" >
        #{createDeptId,jdbcType=INTEGER},
      </if>
      <if test="staffUserId != null" >
        #{staffUserId,jdbcType=VARCHAR},
      </if>
      <if test="tPlanNo != null" >
        #{tPlanNo,jdbcType=VARCHAR},
      </if>
      <if test="tPlanName != null" >
        #{tPlanName,jdbcType=VARCHAR},
      </if>
      <if test="tInstitutionName != null" >
        #{tInstitutionName,jdbcType=VARCHAR},
      </if>
      <if test="trainningCost != null" >
        #{trainningCost,jdbcType=DECIMAL},
      </if>
      <if test="tExamResults != null" >
        #{tExamResults,jdbcType=VARCHAR},
      </if>
      <if test="tExamLevel != null" >
        #{tExamLevel,jdbcType=INTEGER},
      </if>
      <if test="dutySituation != null" >
        #{dutySituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="trainningSituation != null" >
        #{trainningSituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="tComment != null" >
        #{tComment,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecordExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from edu_training_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_training_record
    <set >
      <if test="record.recordId != null" >
        RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null" >
        CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDeptId != null" >
        CREATE_DEPT_ID = #{record.createDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.staffUserId != null" >
        STAFF_USER_ID = #{record.staffUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.tPlanNo != null" >
        T_PLAN_NO = #{record.tPlanNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tPlanName != null" >
        T_PLAN_NAME = #{record.tPlanName,jdbcType=VARCHAR},
      </if>
      <if test="record.tInstitutionName != null" >
        T_INSTITUTION_NAME = #{record.tInstitutionName,jdbcType=VARCHAR},
      </if>
      <if test="record.trainningCost != null" >
        TRAINNING_COST = #{record.trainningCost,jdbcType=DECIMAL},
      </if>
      <if test="record.tExamResults != null" >
        T_EXAM_RESULTS = #{record.tExamResults,jdbcType=VARCAHR},
      </if>
      <if test="record.tExamLevel != null" >
        T_EXAM_LEVEL = #{record.tExamLevel,jdbcType=INTEGER},
      </if>
      <if test="record.dutySituation != null" >
        DUTY_SITUATION = #{record.dutySituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.trainningSituation != null" >
        TRAINNING_SITUATION = #{record.trainningSituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.tComment != null" >
        T_COMMENT = #{record.tComment,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentId != null" >
        ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentName != null" >
        ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_training_record
    set RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR},
      CREATE_DEPT_ID = #{record.createDeptId,jdbcType=INTEGER},
      STAFF_USER_ID = #{record.staffUserId,jdbcType=VARCHAR},
      T_PLAN_NO = #{record.tPlanNo,jdbcType=VARCHAR},
      T_PLAN_NAME = #{record.tPlanName,jdbcType=VARCHAR},
      T_INSTITUTION_NAME = #{record.tInstitutionName,jdbcType=VARCHAR},
      TRAINNING_COST = #{record.trainningCost,jdbcType=DECIMAL},
      T_EXAM_RESULTS = #{record.tExamResults,jdbcType=VARCHAR},
      T_EXAM_LEVEL = #{record.tExamLevel,jdbcType=INTEGER},
      DUTY_SITUATION = #{record.dutySituation,jdbcType=LONGVARCHAR},
      TRAINNING_SITUATION = #{record.trainningSituation,jdbcType=LONGVARCHAR},
      T_COMMENT = #{record.tComment,jdbcType=LONGVARCHAR},
      REMARK = #{record.remark,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_training_record
    set RECORD_ID = #{record.recordId,jdbcType=INTEGER},
      CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR},
      CREATE_DEPT_ID = #{record.createDeptId,jdbcType=INTEGER},
      STAFF_USER_ID = #{record.staffUserId,jdbcType=VARCHAR},
      T_PLAN_NO = #{record.tPlanNo,jdbcType=VARCHAR},
      T_PLAN_NAME = #{record.tPlanName,jdbcType=VARCHAR},
      T_INSTITUTION_NAME = #{record.tInstitutionName,jdbcType=VARCHAR},
      TRAINNING_COST = #{record.trainningCost,jdbcType=DECIMAL},
      T_EXAM_RESULTS = #{record.tExamResults,jdbcType=VARCHAR},
      T_EXAM_LEVEL = #{record.tExamLevel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecordWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_training_record
    <set >
      <if test="createUserId != null" >
        CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createDeptId != null" >
        CREATE_DEPT_ID = #{createDeptId,jdbcType=INTEGER},
      </if>
      <if test="staffUserId != null" >
        STAFF_USER_ID = #{staffUserId,jdbcType=VARCHAR},
      </if>
      <if test="tPlanNo != null" >
        T_PLAN_NO = #{tPlanNo,jdbcType=VARCHAR},
      </if>
      <if test="tPlanName != null" >
        T_PLAN_NAME = #{tPlanName,jdbcType=VARCHAR},
      </if>
      <if test="tInstitutionName != null" >
        T_INSTITUTION_NAME = #{tInstitutionName,jdbcType=VARCHAR},
      </if>
      <if test="trainningCost != null" >
        TRAINNING_COST = #{trainningCost,jdbcType=DECIMAL},
      </if>
      <if test="tExamResults != null" >
        T_EXAM_RESULTS = #{tExamResults,jdbcType=VARCHAR},
      </if>
      <if test="tExamLevel != null" >
        T_EXAM_LEVEL = #{tExamLevel,jdbcType=INTEGER},
      </if>
      <if test="dutySituation != null" >
        DUTY_SITUATION = #{dutySituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="trainningSituation != null" >
        TRAINNING_SITUATION = #{trainningSituation,jdbcType=LONGVARCHAR},
      </if>
      <if test="tComment != null" >
        T_COMMENT = #{tComment,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecordWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_training_record
    set CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      CREATE_DEPT_ID = #{createDeptId,jdbcType=INTEGER},
      STAFF_USER_ID = #{staffUserId,jdbcType=VARCHAR},
      T_PLAN_NO = #{tPlanNo,jdbcType=VARCHAR},
      T_PLAN_NAME = #{tPlanName,jdbcType=VARCHAR},
      T_INSTITUTION_NAME = #{tInstitutionName,jdbcType=VARCHAR},
      TRAINNING_COST = #{trainningCost,jdbcType=DECIMAL},
      T_EXAM_RESULTS = #{tExamResults,jdbcType=VARCHAR},
      T_EXAM_LEVEL = #{tExamLevel,jdbcType=INTEGER},
      DUTY_SITUATION = #{dutySituation,jdbcType=LONGVARCHAR},
      TRAINNING_SITUATION = #{trainningSituation,jdbcType=LONGVARCHAR},
      T_COMMENT = #{tComment,jdbcType=LONGVARCHAR},
      REMARK = #{remark,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR}
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.edu.eduTrainingPlanRecord.EduTrainingRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update edu_training_record
    set CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      CREATE_DEPT_ID = #{createDeptId,jdbcType=INTEGER},
      STAFF_USER_ID = #{staffUserId,jdbcType=VARCHAR},
      T_PLAN_NO = #{tPlanNo,jdbcType=VARCHAR},
      T_PLAN_NAME = #{tPlanName,jdbcType=VARCHAR},
      T_INSTITUTION_NAME = #{tInstitutionName,jdbcType=VARCHAR},
      TRAINNING_COST = #{trainningCost,jdbcType=DECIMAL},
      T_EXAM_RESULTS = #{tExamResults,jdbcType=VARCHAR},
      T_EXAM_LEVEL = #{tExamLevel,jdbcType=INTEGER}
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </update>
  
  <select id="getAll" resultMap="ResultMapWithBLOBs" parameterType="map">
    SELECT * FROM edu_training_record
  </select>
  
  <select id="queryRecord" resultMap="ResultMapWithBLOBs" parameterType="map">
    SELECT * FROM  edu_training_record
    <where>
      <trim prefixOverrides="and">
        <if test="eduTrainingRecordWithBLOBs.staffUserId!=null and eduTrainingRecordWithBLOBs.staffUserId!=''">
          and STAFF_USER_ID LIKE CONCAT('%',#{eduTrainingRecordWithBLOBs.staffUserId},'%')
        </if>
        <if test="eduTrainingRecordWithBLOBs.tPlanNo!=null and eduTrainingRecordWithBLOBs.tPlanNo!=''">
         and T_PLAN_NO =#{eduTrainingRecordWithBLOBs.tPlanNo}
        </if>
        <if test="eduTrainingRecordWithBLOBs.tInstitutionName!=null and eduTrainingRecordWithBLOBs.tInstitutionName!=''">
          and T_INSTITUTION_NAME LIKE CONCAT('%',#{eduTrainingRecordWithBLOBs.tInstitutionName},'%')
        </if>
        <if test="eduTrainingRecordWithBLOBs.trainningCost!=null and eduTrainingRecordWithBLOBs.trainningCost!=''">
          and TRAINNING_COST LIKE CONCAT('%',#{eduTrainingRecordWithBLOBs.trainningCost},'%')
        </if>
        <if test="eduTrainingRecordWithBLOBs.dutySituation!=null and eduTrainingRecordWithBLOBs.dutySituation!=''">
          and DUTY_SITUATION LIKE CONCAT('%',#{eduTrainingRecordWithBLOBs.dutySituation},'%')
        </if>
      </trim>
    </where>
  </select>
  <select id="queryRecord" resultMap="ResultMapWithBLOBs" parameterType="map" databaseId="oracle">
    SELECT * FROM  EDU_TRAINING_RECORD
    <where>
      <trim prefixOverrides="and">
        <if test="eduTrainingRecordWithBLOBs.staffUserId!=null and eduTrainingRecordWithBLOBs.staffUserId!=''">
          and STAFF_USER_ID LIKE CONCAT(CONCAT('%', #{eduTrainingRecordWithBLOBs.staffUserId}), '%')
        </if>
        <if test="eduTrainingRecordWithBLOBs.tPlanNo!=null and eduTrainingRecordWithBLOBs.tPlanNo!=''">
          and T_PLAN_NO =#{eduTrainingRecordWithBLOBs.tPlanNo}
        </if>
        <if test="eduTrainingRecordWithBLOBs.tInstitutionName!=null and eduTrainingRecordWithBLOBs.tInstitutionName!=''">
          and T_INSTITUTION_NAME LIKE CONCAT(CONCAT('%', #{eduTrainingRecordWithBLOBs.tInstitutionName}), '%')
        </if>
        <if test="eduTrainingRecordWithBLOBs.trainningCost!=null and eduTrainingRecordWithBLOBs.trainningCost!=''">
          and TRAINNING_COST LIKE CONCAT(CONCAT('%', #{eduTrainingRecordWithBLOBs.trainningCost}), '%')
        </if>
        <if test="eduTrainingRecordWithBLOBs.dutySituation!=null and eduTrainingRecordWithBLOBs.dutySituation!=''">
          and DUTY_SITUATION LIKE CONCAT(CONCAT('%', #{eduTrainingRecordWithBLOBs.dutySituation}), '%')
        </if>
      </trim>
    </where>
  </select>
  <select id="queryRecord" resultMap="ResultMapWithBLOBs" parameterType="map" databaseId="dm">
    SELECT * FROM  EDU_TRAINING_RECORD
    <where>
      <trim prefixOverrides="and">
        <if test="eduTrainingRecordWithBLOBs.staffUserId!=null and eduTrainingRecordWithBLOBs.staffUserId!=''">
          and STAFF_USER_ID LIKE CONCAT(CONCAT('%', #{eduTrainingRecordWithBLOBs.staffUserId}), '%')
        </if>
        <if test="eduTrainingRecordWithBLOBs.tPlanNo!=null and eduTrainingRecordWithBLOBs.tPlanNo!=''">
          and T_PLAN_NO =#{eduTrainingRecordWithBLOBs.tPlanNo}
        </if>
        <if test="eduTrainingRecordWithBLOBs.tInstitutionName!=null and eduTrainingRecordWithBLOBs.tInstitutionName!=''">
          and T_INSTITUTION_NAME LIKE CONCAT(CONCAT('%', #{eduTrainingRecordWithBLOBs.tInstitutionName}), '%')
        </if>
        <if test="eduTrainingRecordWithBLOBs.trainningCost!=null and eduTrainingRecordWithBLOBs.trainningCost!=''">
          and TRAINNING_COST LIKE CONCAT(CONCAT('%', #{eduTrainingRecordWithBLOBs.trainningCost}), '%')
        </if>
        <if test="eduTrainingRecordWithBLOBs.dutySituation!=null and eduTrainingRecordWithBLOBs.dutySituation!=''">
          and DUTY_SITUATION LIKE CONCAT(CONCAT('%', #{eduTrainingRecordWithBLOBs.dutySituation}), '%')
        </if>
      </trim>
    </where>
  </select>

  <delete id="deleteByIds">
    DELETE from edu_training_record WHERE RECORD_ID in
    <foreach item="recordId" collection="recordIds" open="(" close=")" separator="," >
      #{recordId}
    </foreach>
  </delete>
  
  <select id="getCount" resultType="java.lang.Integer">
    SELECT count(*) FROM edu_training_record
  </select>
</mapper>