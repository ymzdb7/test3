<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.menu.SysFunctionMapper">
    <resultMap id="menuResultMap" type="com.xoa.model.menu.SysFunction">
        <id column="FUNC_ID" property="fId" javaType="int"/>
        <result column="MENU_ID" property="id" javaType="string"/>
        <result column="FUNC_NAME" property="name" javaType="string"/>
        <result column="FUNC_NAME1" property="name1" javaType="string"/>
        <result column="FUNC_NAME2" property="name2" javaType="string"/>
        <result column="FUNC_NAME3" property="name3" javaType="string"/>
        <result column="FUNC_NAME4" property="name4" javaType="string"/>
        <result column="FUNC_NAME5" property="name5" javaType="string"/>
        <result column="FUNC_CODE" property="url" javaType="string"/>
        <result column="FUNC_EXT" property="ext" javaType="string"/>
        <result column="ISOPEN_NEW" property="isopenNew" jdbcType="VARCHAR" />
    </resultMap>
    <select id="getDatagrid" resultMap="menuResultMap"
            parameterType="string">
		SELECT FUNC_ID,
		FUNC_NAME,FUNC_NAME1,FUNC_NAME2,FUNC_NAME3,FUNC_NAME4,FUNC_NAME5,MENU_ID,FUNC_NAME,FUNC_CODE,FUNC_EXT,ISOPEN_NEW FROM sys_function WHERE
		MENU_ID LIKE #{menuId}
		 ORDER BY MENU_ID ASC
	</select>
    <select id="childMenu" resultMap="menuResultMap" parameterType="string">
		SELECT FUNC_ID,
		FUNC_NAME,FUNC_NAME1,FUNC_NAME2,FUNC_NAME3,FUNC_NAME4,FUNC_NAME5,MENU_ID,FUNC_NAME,FUNC_CODE,FUNC_EXT,ISOPEN_NEW FROM sys_function
		 WHERE
		MENU_ID LIKE #{id}
		 ORDER BY MENU_ID ASC
	</select>
    <select id="getAll" resultMap="menuResultMap">
		SELECT * FROM sys_function
	</select>

    <delete id="deleteFunction" parameterType="java.lang.String">
      DELETE FROM sys_function  WHERE  MENU_ID LIKE #{id}
    </delete>

    <insert id="addFunctionMenu" parameterType="com.xoa.model.menu.SysFunction">
        insert into sys_function
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fId != null">
                FUNC_ID,
            </if>
            <if test="id != null">
                MENU_ID,
            </if>
            <if test="name != null">
                FUNC_NAME,
            </if>
            <if test="name1 != null">
                FUNC_NAME1,
            </if>
            <if test="name2 != null">
                FUNC_NAME2,
            </if>
            <if test="name3 != null">
                FUNC_NAME3,
            </if>
            <if test="name4 != null">
                FUNC_NAME4,
            </if>
            <if test="name5 != null">
                FUNC_NAME5,
            </if>
            <if test="url != null">
                FUNC_CODE,
            </if>
            <if test="ext != null">
                FUNC_EXT,
            </if>
            <if test="isopenNew !=null">
                ISOPEN_NEW,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fId != null">
                #{fId,jdbcType=INTEGER},
            </if>
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="name1 != null">
                #{name1,jdbcType=VARCHAR},
            </if>
            <if test="name2 != null">
                #{name2,jdbcType=VARCHAR},
            </if>
            <if test="name3 != null">
                #{name3,jdbcType=VARCHAR},
            </if>
            <if test="name4 != null">
                #{name4,jdbcType=VARCHAR},
            </if>
            <if test="name5 != null">
                #{name5,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="ext != null">
                #{ext,jdbcType=VARCHAR},
            </if>
            <if test="isopenNew !=null">
                #{isopenNew,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <update id="editSysFunction" parameterType="com.xoa.model.menu.SysFunction">
        update sys_function
        <set>
            <if test="id != null">
                MENU_ID = #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                FUNC_NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="name1 != null">
                FUNC_NAME1 = #{name1,jdbcType=VARCHAR},
            </if>
            <if test="name2 != null">
                FUNC_NAME2 = #{name2,jdbcType=VARCHAR},
            </if>
            <if test="name3 != null">
                FUNC_NAME3 = #{name3,jdbcType=VARCHAR},
            </if>
            <if test="name4 != null">
                FUNC_NAME4 = #{name4,jdbcType=VARCHAR},
            </if>
            <if test="name5 != null">
                FUNC_NAME5 = #{name5,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                FUNC_CODE = #{url,jdbcType=VARCHAR},
            </if>
            <if test="ext != null">
                FUNC_EXT = #{ext,jdbcType=VARCHAR},
            </if>
            <if test="isopenNew !=null">
                ISOPEN_NEW =#{isopenNew,jdbcType=VARCHAR},
            </if>
        </set>
        where FUNC_ID = #{fId,jdbcType=INTEGER}
    </update>

    <select id="getParentFunction" parameterType="String" resultMap="menuResultMap">
    	SELECT FUNC_ID, FUNC_NAME,FUNC_NAME1,FUNC_NAME2,FUNC_NAME3,FUNC_NAME4,FUNC_NAME5,MENU_ID,FUNC_NAME,FUNC_CODE,FUNC_EXT,ISOPEN_NEW FROM sys_function
    	WHERE  MENU_ID=#{pfId}
    </select>
    <select id="checkFunctionExits" parameterType="Integer" resultMap="menuResultMap">
        SELECT FUNC_ID, FUNC_NAME,FUNC_NAME1,FUNC_NAME2,FUNC_NAME3,FUNC_NAME4,FUNC_NAME5,MENU_ID,FUNC_NAME,FUNC_CODE,FUNC_EXT,ISOPEN_NEW FROM sys_function
        WHERE  FUNC_ID=#{pfId}
    </select>
    <select id="checkIdExists" parameterType="String" resultType="Integer">
        SELECT  COUNT(*) FROM sys_function WHERE MENU_ID=#{newId}
    </select>

    <select id="findChildMenu" parameterType="hashMap" resultMap="menuResultMap">
      	SELECT FUNC_ID, FUNC_NAME,FUNC_NAME1,FUNC_NAME2,FUNC_NAME3,FUNC_NAME4,FUNC_NAME5,MENU_ID,FUNC_NAME,FUNC_CODE,FUNC_EXT,ISOPEN_NEW FROM sys_function WHERE
		MENU_ID LIKE #{thirdId} OR MENU_ID = #{id} OR sys_function.MENU_ID LIKE #{secondId}
		 ORDER BY MENU_ID ASC
    </select>

    <select id="getMaxId" resultType="Integer">
       select MAX(FUNC_ID) from sys_function
    </select>

    <select id="getSysFunctionByName" resultMap="menuResultMap">
        select FUNC_ID,MENU_ID,FUNC_NAME,FUNC_CODE,FUNC_EXT,ISOPEN_NEW from sys_function where FUNC_NAME like '%' #{funName} '%'
    </select>

    <select id="getCountSysFunctionByName" resultType="java.lang.Integer">
        select count(*) from sys_function where FUNC_NAME like '%' #{funName} '%'
    </select>

    <select id="getSomeChildMenu" resultMap="menuResultMap">
SELECT FUNC_ID, FUNC_NAME,FUNC_NAME1,FUNC_NAME2,FUNC_NAME3,FUNC_NAME4,FUNC_NAME5,MENU_ID,FUNC_NAME,FUNC_CODE,FUNC_EXT,ISOPEN_NEW FROM sys_function WHERE
		MENU_ID LIKE #{id} '%'
    </select>

    <select id="getSysFunctionByFid" parameterType="java.lang.Integer" resultMap="menuResultMap">
        select * from sys_function s WHERE s.FUNC_ID=#{fid} ;
    </select>
    <select id="getUserFunctionByUserId" resultMap="menuResultMap">
 SELECT
	fun.*
FROM
	sys_function  fun
INNER  JOIN  user_function tion ON FIND_IN_SET(fun.FUNC_ID,tion.user_func_id_str)
INNER JOIN  `user` users ON users.USER_ID=tion.user_id
WHERE users.USER_ID=#{userId}
    </select>
</mapper>