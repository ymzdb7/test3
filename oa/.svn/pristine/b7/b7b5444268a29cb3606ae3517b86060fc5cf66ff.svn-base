<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.common.SecureLogMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.common.SecureLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="LOG_ID" property="logId" jdbcType="INTEGER" />
    <result column="RULE_ID" property="ruleId" jdbcType="SMALLINT" />
    <result column="UID" property="uid" jdbcType="INTEGER" />
    <result column="LOG_TIME" property="logTime" jdbcType="INTEGER" />
    <result column="IP" property="ip" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="FROM_BODY_ID" property="fromBodyId" jdbcType="INTEGER" />
    <result column="TO_BODY_ID" property="toBodyId" jdbcType="INTEGER" />
    <result column="FROM_TABLE_EXTENDS" property="fromTableExtends" jdbcType="VARCHAR" />
    <result column="TO_TABLE_EXTENDS" property="toTableExtends" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    LOG_ID, RULE_ID, UID, LOG_TIME, IP, REMARK, FROM_BODY_ID, TO_BODY_ID, FROM_TABLE_EXTENDS, 
    TO_TABLE_EXTENDS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.common.SecureLogExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from secure_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from secure_log
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from secure_log
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.common.SecureLogExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from secure_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.common.SecureLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into secure_log (LOG_ID, RULE_ID, UID, 
      LOG_TIME, IP, REMARK, 
      FROM_BODY_ID, TO_BODY_ID, FROM_TABLE_EXTENDS, 
      TO_TABLE_EXTENDS)
    values (#{logId,jdbcType=INTEGER}, #{ruleId,jdbcType=SMALLINT}, #{uid,jdbcType=INTEGER}, 
      #{logTime,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{fromBodyId,jdbcType=INTEGER}, #{toBodyId,jdbcType=INTEGER}, #{fromTableExtends,jdbcType=VARCHAR}, 
      #{toTableExtends,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.xoa.model.common.SecureLog"  databaseId="dm">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="LOG_ID"  order="BEFORE" resultType="int">
      select SECURE_LOG_LOG_ID_SEQ.nextval as LOG_ID from  dual
    </selectKey>
    insert into secure_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        LOG_ID,
      </if>
      <if test="ruleId != null" >
        RULE_ID,
      </if>
      <if test="uid != null" >
        "UID",
      </if>
      <if test="logTime != null" >
        LOG_TIME,
      </if>
      <if test="ip != null" >
        IP,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="fromBodyId != null" >
        FROM_BODY_ID,
      </if>
      <if test="toBodyId != null" >
        TO_BODY_ID,
      </if>
      <if test="fromTableExtends != null" >
        FROM_TABLE_EXTENDS,
      </if>
      <if test="toTableExtends != null" >
        TO_TABLE_EXTENDS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="ruleId != null" >
        #{ruleId,jdbcType=SMALLINT},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="logTime != null" >
        #{logTime,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="fromBodyId != null" >
        #{fromBodyId,jdbcType=INTEGER},
      </if>
      <if test="toBodyId != null" >
        #{toBodyId,jdbcType=INTEGER},
      </if>
      <if test="fromTableExtends != null" >
        #{fromTableExtends,jdbcType=VARCHAR},
      </if>
      <if test="toTableExtends != null" >
        #{toTableExtends,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="insertSelective" parameterType="com.xoa.model.common.SecureLog"  databaseId="oracle">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="logId"  order="BEFORE" resultType="int">
      select SECURE_LOG_LOG_ID_SEQ.nextval as logId from  dual
    </selectKey>
    insert into secure_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
        LOG_ID,
      <if test="ruleId != null" >
        RULE_ID,
      </if>
      <if test="uid != null" >
        "UID",
      </if>
      <if test="logTime != null" >
        LOG_TIME,
      </if>
      <if test="ip != null" >
        IP,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="fromBodyId != null" >
        FROM_BODY_ID,
      </if>
      <if test="toBodyId != null" >
        TO_BODY_ID,
      </if>
      <if test="fromTableExtends != null" >
        FROM_TABLE_EXTENDS,
      </if>
      <if test="toTableExtends != null" >
        TO_TABLE_EXTENDS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >

        #{logId},

      <if test="ruleId != null" >
        #{ruleId,jdbcType=SMALLINT},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="logTime != null" >
        #{logTime,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="fromBodyId != null" >
        #{fromBodyId,jdbcType=INTEGER},
      </if>
      <if test="toBodyId != null" >
        #{toBodyId,jdbcType=INTEGER},
      </if>
      <if test="fromTableExtends != null" >
        #{fromTableExtends,jdbcType=VARCHAR},
      </if>
      <if test="toTableExtends != null" >
        #{toTableExtends,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="insertSelective" parameterType="com.xoa.model.common.SecureLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into secure_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        LOG_ID,
      </if>
      <if test="ruleId != null" >
        RULE_ID,
      </if>
      <if test="uid != null" >
        UID,
      </if>
      <if test="logTime != null" >
        LOG_TIME,
      </if>
      <if test="ip != null" >
        IP,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="fromBodyId != null" >
        FROM_BODY_ID,
      </if>
      <if test="toBodyId != null" >
        TO_BODY_ID,
      </if>
      <if test="fromTableExtends != null" >
        FROM_TABLE_EXTENDS,
      </if>
      <if test="toTableExtends != null" >
        TO_TABLE_EXTENDS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="ruleId != null" >
        #{ruleId,jdbcType=SMALLINT},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="logTime != null" >
        #{logTime,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="fromBodyId != null" >
        #{fromBodyId,jdbcType=INTEGER},
      </if>
      <if test="toBodyId != null" >
        #{toBodyId,jdbcType=INTEGER},
      </if>
      <if test="fromTableExtends != null" >
        #{fromTableExtends,jdbcType=VARCHAR},
      </if>
      <if test="toTableExtends != null" >
        #{toTableExtends,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.common.SecureLogExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from secure_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update secure_log
    <set >
      <if test="record.logId != null" >
        LOG_ID = #{record.logId,jdbcType=INTEGER},
      </if>
      <if test="record.ruleId != null" >
        RULE_ID = #{record.ruleId,jdbcType=SMALLINT},
      </if>
      <if test="record.uid != null" >
        UID = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.logTime != null" >
        LOG_TIME = #{record.logTime,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null" >
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.fromBodyId != null" >
        FROM_BODY_ID = #{record.fromBodyId,jdbcType=INTEGER},
      </if>
      <if test="record.toBodyId != null" >
        TO_BODY_ID = #{record.toBodyId,jdbcType=INTEGER},
      </if>
      <if test="record.fromTableExtends != null" >
        FROM_TABLE_EXTENDS = #{record.fromTableExtends,jdbcType=VARCHAR},
      </if>
      <if test="record.toTableExtends != null" >
        TO_TABLE_EXTENDS = #{record.toTableExtends,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update secure_log
    set LOG_ID = #{record.logId,jdbcType=INTEGER},
      RULE_ID = #{record.ruleId,jdbcType=SMALLINT},
      UID = #{record.uid,jdbcType=INTEGER},
      LOG_TIME = #{record.logTime,jdbcType=INTEGER},
      IP = #{record.ip,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      FROM_BODY_ID = #{record.fromBodyId,jdbcType=INTEGER},
      TO_BODY_ID = #{record.toBodyId,jdbcType=INTEGER},
      FROM_TABLE_EXTENDS = #{record.fromTableExtends,jdbcType=VARCHAR},
      TO_TABLE_EXTENDS = #{record.toTableExtends,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.common.SecureLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update secure_log
    <set >
      <if test="ruleId != null" >
        RULE_ID = #{ruleId,jdbcType=SMALLINT},
      </if>
      <if test="uid != null" >
        UID = #{uid,jdbcType=INTEGER},
      </if>
      <if test="logTime != null" >
        LOG_TIME = #{logTime,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="fromBodyId != null" >
        FROM_BODY_ID = #{fromBodyId,jdbcType=INTEGER},
      </if>
      <if test="toBodyId != null" >
        TO_BODY_ID = #{toBodyId,jdbcType=INTEGER},
      </if>
      <if test="fromTableExtends != null" >
        FROM_TABLE_EXTENDS = #{fromTableExtends,jdbcType=VARCHAR},
      </if>
      <if test="toTableExtends != null" >
        TO_TABLE_EXTENDS = #{toTableExtends,jdbcType=VARCHAR},
      </if>
    </set>
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.common.SecureLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update secure_log
    set RULE_ID = #{ruleId,jdbcType=SMALLINT},
      UID = #{uid,jdbcType=INTEGER},
      LOG_TIME = #{logTime,jdbcType=INTEGER},
      IP = #{ip,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      FROM_BODY_ID = #{fromBodyId,jdbcType=INTEGER},
      TO_BODY_ID = #{toBodyId,jdbcType=INTEGER},
      FROM_TABLE_EXTENDS = #{fromTableExtends,jdbcType=VARCHAR},
      TO_TABLE_EXTENDS = #{toTableExtends,jdbcType=VARCHAR}
    where LOG_ID = #{logId,jdbcType=INTEGER}
  </update>
</mapper>