package com.xoa.controller.edu.teacher;

import com.xoa.model.edu.teacher.TeacheringInfo;
import com.xoa.service.edu.teacher.TeachingService;
import com.xoa.util.Constant;
import com.xoa.util.ToJson;
import com.xoa.util.dataSource.ContextHolder;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

@Controller
@RequestMapping({ "teachering" })
public class TeatchingController {

	@Autowired
	private TeachingService teacherService;

	@RequestMapping({ "/index" })
	public String eduDeptManagement(HttpServletRequest request) {
		ContextHolder.setConsumerType(Constant.MYOA
				+ (String) request.getSession().getAttribute("loginDateSouse"));

		return "app/edu/teacherManage/index";
	}

	@RequestMapping({ "/teacherList" })
	public String teacherList(HttpServletRequest request) {
		ContextHolder.setConsumerType(Constant.MYOA
				+ (String) request.getSession().getAttribute("loginDateSouse"));

		return "app/edu/teacherManage/teacherList";
	}

	@RequestMapping({ "/newTeacher" })
	public String newTeacher(HttpServletRequest request) {
		ContextHolder.setConsumerType(Constant.MYOA
				+ (String) request.getSession().getAttribute("loginDateSouse"));

		return "app/edu/teacherManage/newTeacher";
	}

	@RequestMapping({ "/editTeacher" })
	public String editTeacher(HttpServletRequest request) {
		ContextHolder.setConsumerType(Constant.MYOA
				+ (String) request.getSession().getAttribute("loginDateSouse"));

		return "app/edu/teacherManage/editTeacher";
	}

	@RequestMapping({ "/teacherSeting" })
	public String teacherSeting(HttpServletRequest request) {
		ContextHolder.setConsumerType(Constant.MYOA
				+ (String) request.getSession().getAttribute("loginDateSouse"));

		return "app/edu/teacherManage/teacherSeting";
	}

	@RequestMapping({ "/teacherQuery" })
	public String teacherQuery(HttpServletRequest request) {
		ContextHolder.setConsumerType(Constant.MYOA
				+ (String) request.getSession().getAttribute("loginDateSouse"));

		return "app/edu/teacherManage/teacherQuery";
	}

	@RequestMapping({ "/Import" })
	public String Import(HttpServletRequest request) {
		ContextHolder.setConsumerType(Constant.MYOA
				+ (String) request.getSession().getAttribute("loginDateSouse"));

		return "app/edu/teacherManage/import";
	}

	@InitBinder
	public void initBinder(WebDataBinder binder) {
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
		dateFormat.setLenient(false);
		binder.registerCustomEditor(Date.class, new CustomDateEditor(
				dateFormat, true));
	}

	@ResponseBody
	@RequestMapping({ "/insert" })
	public ToJson<Object> insertObject(TeacheringInfo teacherInfo) {
		return this.teacherService.insertObject(teacherInfo);
	}

	@ResponseBody
	@RequestMapping({ "/editinfo" })
	public ToJson<Object> editObject(TeacheringInfo teacherInfo) {
		return this.teacherService.editInfo(teacherInfo);
	}

	@ResponseBody
	@RequestMapping({ "/delete" })
	public ToJson<Object> deleteObject(Integer id) {
		return this.teacherService.deleteInfo(id);
	}

	@ResponseBody
	@RequestMapping({ "/selectObject" })
	public ToJson<TeacheringInfo> selectObject(TeacheringInfo teacheringInfo,
			Integer page, Integer pageSize, boolean useFlag) {
		return this.teacherService.selectObject(teacheringInfo, page, pageSize,
				useFlag);
	}

	@ResponseBody
	@RequestMapping({ "/selectObjectById" })
	public ToJson<TeacheringInfo> selectObjectById(Integer id) {
		return this.teacherService.selectObjectById(id);
	}

	@ResponseBody
	@RequestMapping(value = { "/importTeacherInfo" }, produces = { "application/json;charset=UTF-8" })
	public ToJson<TeacheringInfo> importTeacherInfo(HttpServletRequest request,
			HttpServletResponse response, HttpSession session,
			MultipartFile file) {
		return this.teacherService.importTeacherInfo(request, response, file);
	}

	@ResponseBody
	@RequestMapping({ "/outputTeacherInfo" })
	public ToJson<TeacheringInfo> outputTeacherInfo(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		return this.teacherService.outputTeacherInfo(request, response);
	}
}
