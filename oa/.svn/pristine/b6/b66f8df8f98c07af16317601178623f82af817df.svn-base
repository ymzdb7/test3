<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.book.BookInfoMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.book.BookInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="BOOK_ID" property="bookId" jdbcType="INTEGER" />
    <result column="ISBN" property="isbn" jdbcType="VARCHAR" />
    <result column="TYPE_ID" property="typeId" jdbcType="INTEGER" />
    <result column="DEPT" property="dept" jdbcType="INTEGER" />
    <result column="BOOK_NAME" property="bookName" jdbcType="VARCHAR" />
    <result column="AUTHOR" property="author" jdbcType="VARCHAR" />
    <result column="PUB_DATE" property="pubDate" jdbcType="VARCHAR" />
    <result column="PUB_HOUSE" property="pubHouse" jdbcType="VARCHAR" />
    <result column="AMT" property="amt" jdbcType="INTEGER" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="AREA" property="area" jdbcType="VARCHAR" />
    <result column="LEND" property="lend" jdbcType="CHAR" />
    <result column="BORR_PERSON" property="borrPerson" jdbcType="VARCHAR" />
    <result column="MEMO" property="memo" jdbcType="VARCHAR" />
    <result column="BOOK_NO" property="bookNo" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.book.BookInfoWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="BRIEF" property="brief" jdbcType="LONGVARCHAR" />
    <result column="OPEN" property="open" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_ID" property="attachmentId" jdbcType="LONGVARCHAR" />
    <result column="ATTACHMENT_NAME" property="attachmentName" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    BOOK_ID, ISBN, TYPE_ID, DEPT, BOOK_NAME, AUTHOR, PUB_DATE, PUB_HOUSE, AMT, PRICE, 
    AREA, LEND, BORR_PERSON, MEMO, BOOK_NO
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    BRIEF, OPEN, ATTACHMENT_ID, ATTACHMENT_NAME
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.book.BookInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.book.BookInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_info
    where BOOK_ID = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from book_info
    where BOOK_ID = #{bookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.book.BookInfoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from book_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.book.BookInfoWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into book_info (BOOK_ID, ISBN, TYPE_ID, 
      DEPT, BOOK_NAME, AUTHOR, 
      PUB_DATE, PUB_HOUSE, AMT, 
      PRICE, AREA, LEND, BORR_PERSON, 
      MEMO, BOOK_NO, BRIEF, 
      OPEN, ATTACHMENT_ID, ATTACHMENT_NAME
      )
    values (#{bookId,jdbcType=INTEGER}, #{isbn,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, 
      #{dept,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{pubDate,jdbcType=VARCHAR}, #{pubHouse,jdbcType=VARCHAR}, #{amt,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{area,jdbcType=VARCHAR}, #{lend,jdbcType=CHAR}, #{borrPerson,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR}, #{bookNo,jdbcType=VARCHAR}, #{brief,jdbcType=LONGVARCHAR}, 
      #{open,jdbcType=LONGVARCHAR}, #{attachmentId,jdbcType=LONGVARCHAR}, #{attachmentName,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.book.BookInfoWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into book_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        BOOK_ID,
      </if>
      <if test="isbn != null" >
        ISBN,
      </if>
      <if test="typeId != null" >
        TYPE_ID,
      </if>
      <if test="dept != null" >
        DEPT,
      </if>
      <if test="bookName != null" >
        BOOK_NAME,
      </if>
      <if test="author != null" >
        AUTHOR,
      </if>
      <if test="pubDate != null" >
        PUB_DATE,
      </if>
      <if test="pubHouse != null" >
        PUB_HOUSE,
      </if>
      <if test="amt != null" >
        AMT,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="area != null" >
        AREA,
      </if>
      <if test="lend != null" >
        LEND,
      </if>
      <if test="borrPerson != null" >
        BORR_PERSON,
      </if>
      <if test="memo != null" >
        MEMO,
      </if>
      <if test="bookNo != null" >
        BOOK_NO,
      </if>
      <if test="brief != null" >
        BRIEF,
      </if>
      <if test="open != null" >
        OPEN,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="isbn != null" >
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="dept != null" >
        #{dept,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="pubDate != null" >
        #{pubDate,jdbcType=VARCHAR},
      </if>
      <if test="pubHouse != null" >
        #{pubHouse,jdbcType=VARCHAR},
      </if>
      <if test="amt != null" >
        #{amt,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="area != null" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="lend != null" >
        #{lend,jdbcType=CHAR},
      </if>
      <if test="borrPerson != null" >
        #{borrPerson,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="bookNo != null" >
        #{bookNo,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        #{brief,jdbcType=LONGVARCHAR},
      </if>
      <if test="open != null" >
        #{open,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.book.BookInfoExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from book_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book_info
    <set >
      <if test="record.bookId != null" >
        BOOK_ID = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.isbn != null" >
        ISBN = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null" >
        TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.dept != null" >
        DEPT = #{record.dept,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null" >
        BOOK_NAME = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        AUTHOR = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.pubDate != null" >
        PUB_DATE = #{record.pubDate,jdbcType=VARCHAR},
      </if>
      <if test="record.pubHouse != null" >
        PUB_HOUSE = #{record.pubHouse,jdbcType=VARCHAR},
      </if>
      <if test="record.amt != null" >
        AMT = #{record.amt,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        PRICE = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.area != null" >
        AREA = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.lend != null" >
        LEND = #{record.lend,jdbcType=CHAR},
      </if>
      <if test="record.borrPerson != null" >
        BORR_PERSON = #{record.borrPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        MEMO = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.bookNo != null" >
        BOOK_NO = #{record.bookNo,jdbcType=VARCHAR},
      </if>
      <if test="record.brief != null" >
        BRIEF = #{record.brief,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.open != null" >
        OPEN = #{record.open,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentId != null" >
        ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentName != null" >
        ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book_info
    set BOOK_ID = #{record.bookId,jdbcType=INTEGER},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      DEPT = #{record.dept,jdbcType=INTEGER},
      BOOK_NAME = #{record.bookName,jdbcType=VARCHAR},
      AUTHOR = #{record.author,jdbcType=VARCHAR},
      PUB_DATE = #{record.pubDate,jdbcType=VARCHAR},
      PUB_HOUSE = #{record.pubHouse,jdbcType=VARCHAR},
      AMT = #{record.amt,jdbcType=INTEGER},
      PRICE = #{record.price,jdbcType=DECIMAL},
      AREA = #{record.area,jdbcType=VARCHAR},
      LEND = #{record.lend,jdbcType=CHAR},
      BORR_PERSON = #{record.borrPerson,jdbcType=VARCHAR},
      MEMO = #{record.memo,jdbcType=VARCHAR},
      BOOK_NO = #{record.bookNo,jdbcType=VARCHAR},
      BRIEF = #{record.brief,jdbcType=LONGVARCHAR},
      OPEN = #{record.open,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{record.attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{record.attachmentName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book_info
    set BOOK_ID = #{record.bookId,jdbcType=INTEGER},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      DEPT = #{record.dept,jdbcType=INTEGER},
      BOOK_NAME = #{record.bookName,jdbcType=VARCHAR},
      AUTHOR = #{record.author,jdbcType=VARCHAR},
      PUB_DATE = #{record.pubDate,jdbcType=VARCHAR},
      PUB_HOUSE = #{record.pubHouse,jdbcType=VARCHAR},
      AMT = #{record.amt,jdbcType=INTEGER},
      PRICE = #{record.price,jdbcType=DECIMAL},
      AREA = #{record.area,jdbcType=VARCHAR},
      LEND = #{record.lend,jdbcType=CHAR},
      BORR_PERSON = #{record.borrPerson,jdbcType=VARCHAR},
      MEMO = #{record.memo,jdbcType=VARCHAR},
      BOOK_NO = #{record.bookNo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.book.BookInfoWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book_info
    <set >
      <if test="isbn != null" >
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        TYPE_ID = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="dept != null" >
        DEPT = #{dept,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        BOOK_NAME = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        AUTHOR = #{author,jdbcType=VARCHAR},
      </if>
      <if test="pubDate != null" >
        PUB_DATE = #{pubDate,jdbcType=VARCHAR},
      </if>
      <if test="pubHouse != null" >
        PUB_HOUSE = #{pubHouse,jdbcType=VARCHAR},
      </if>
      <if test="amt != null" >
        AMT = #{amt,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="area != null" >
        AREA = #{area,jdbcType=VARCHAR},
      </if>
      <if test="lend != null" >
        LEND = #{lend,jdbcType=CHAR},
      </if>
      <if test="borrPerson != null" >
        BORR_PERSON = #{borrPerson,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="bookNo != null" >
        BOOK_NO = #{bookNo,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        BRIEF = #{brief,jdbcType=LONGVARCHAR},
      </if>
      <if test="open != null" >
        OPEN = #{open,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where BOOK_ID = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.book.BookInfoWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book_info
    set ISBN = #{isbn,jdbcType=VARCHAR},
      TYPE_ID = #{typeId,jdbcType=INTEGER},
      DEPT = #{dept,jdbcType=INTEGER},
      BOOK_NAME = #{bookName,jdbcType=VARCHAR},
      AUTHOR = #{author,jdbcType=VARCHAR},
      PUB_DATE = #{pubDate,jdbcType=VARCHAR},
      PUB_HOUSE = #{pubHouse,jdbcType=VARCHAR},
      AMT = #{amt,jdbcType=INTEGER},
      PRICE = #{price,jdbcType=DECIMAL},
      AREA = #{area,jdbcType=VARCHAR},
      LEND = #{lend,jdbcType=CHAR},
      BORR_PERSON = #{borrPerson,jdbcType=VARCHAR},
      MEMO = #{memo,jdbcType=VARCHAR},
      BOOK_NO = #{bookNo,jdbcType=VARCHAR},
      BRIEF = #{brief,jdbcType=LONGVARCHAR},
      OPEN = #{open,jdbcType=LONGVARCHAR},
      ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR}
    where BOOK_ID = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.book.BookInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book_info
    set ISBN = #{isbn,jdbcType=VARCHAR},
      TYPE_ID = #{typeId,jdbcType=INTEGER},
      DEPT = #{dept,jdbcType=INTEGER},
      BOOK_NAME = #{bookName,jdbcType=VARCHAR},
      AUTHOR = #{author,jdbcType=VARCHAR},
      PUB_DATE = #{pubDate,jdbcType=VARCHAR},
      PUB_HOUSE = #{pubHouse,jdbcType=VARCHAR},
      AMT = #{amt,jdbcType=INTEGER},
      PRICE = #{price,jdbcType=DECIMAL},
      AREA = #{area,jdbcType=VARCHAR},
      LEND = #{lend,jdbcType=CHAR},
      BORR_PERSON = #{borrPerson,jdbcType=VARCHAR},
      MEMO = #{memo,jdbcType=VARCHAR},
      BOOK_NO = #{bookNo,jdbcType=VARCHAR}
    where BOOK_ID = #{bookId,jdbcType=INTEGER}
  </update>




  <insert id="insertBookInfo" parameterType="com.xoa.model.book.BookInfoWithBLOBs" >
    insert into book_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        BOOK_ID,
      </if>
      <if test="isbn != null" >
        ISBN,
      </if>
      <if test="typeId != null" >
        TYPE_ID,
      </if>
      <if test="dept != null" >
        DEPT,
      </if>
      <if test="bookName != null" >
        BOOK_NAME,
      </if>
      <if test="author != null" >
        AUTHOR,
      </if>
      <if test="pubDate != null" >
        PUB_DATE,
      </if>
      <if test="pubHouse != null" >
        PUB_HOUSE,
      </if>
      <if test="amt != null" >
        AMT,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="area != null" >
        AREA,
      </if>
      <if test="lend != null" >
        LEND,
      </if>
      <if test="borrPerson != null" >
        BORR_PERSON,
      </if>
      <if test="memo != null" >
        MEMO,
      </if>
      <if test="bookNo != null" >
        BOOK_NO,
      </if>
      <if test="brief != null" >
        BRIEF,
      </if>
      <if test="open != null" >
        OPEN,
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID,
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="isbn != null" >
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="dept != null" >
        #{dept,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="pubDate != null" >
        #{pubDate,jdbcType=VARCHAR},
      </if>
      <if test="pubHouse != null" >
        #{pubHouse,jdbcType=VARCHAR},
      </if>
      <if test="amt != null" >
        #{amt,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="area != null" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="lend != null" >
        #{lend,jdbcType=CHAR},
      </if>
      <if test="borrPerson != null" >
        #{borrPerson,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="bookNo != null" >
        #{bookNo,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        #{brief,jdbcType=LONGVARCHAR},
      </if>
      <if test="open != null" >
        #{open,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="upBookInfoById" parameterType="com.xoa.model.book.BookInfoWithBLOBs" >
    update book_info
    <set >
      <if test="isbn != null" >
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        TYPE_ID = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="dept != null" >
        DEPT = #{dept,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        BOOK_NAME = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        AUTHOR = #{author,jdbcType=VARCHAR},
      </if>
      <if test="pubDate != null" >
        PUB_DATE = #{pubDate,jdbcType=VARCHAR},
      </if>
      <if test="pubHouse != null" >
        PUB_HOUSE = #{pubHouse,jdbcType=VARCHAR},
      </if>
      <if test="amt != null" >
        AMT = #{amt,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="area != null" >
        AREA = #{area,jdbcType=VARCHAR},
      </if>
      <if test="lend != null" >
        LEND = #{lend,jdbcType=CHAR},
      </if>
      <if test="borrPerson != null" >
        BORR_PERSON = #{borrPerson,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="bookNo != null" >
        BOOK_NO = #{bookNo,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        BRIEF = #{brief,jdbcType=LONGVARCHAR},
      </if>
      <if test="open != null" >
        OPEN = #{open,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentId != null" >
        ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentName != null" >
        ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where BOOK_ID = #{bookId,jdbcType=INTEGER}
  </update>

  <delete id="delBookInfoById" parameterType="java.lang.Integer" >
    delete from book_info
    where BOOK_ID = #{bookId,jdbcType=INTEGER}
  </delete>

  <select id="selBookInfoById" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select info.*,type.TYPE_NAME as typeName,user.USER_NAME as borrPersonName,d.DEPT_NAME as deptName
    from book_info info
    LEFT JOIN book_type type on info.TYPE_ID=type.TYPE_ID
    LEFT JOIN user on info.BORR_PERSON=user.USER_ID
    LEFT JOIN department d on info.DEPT=d.DEPT_ID
    where info.BOOK_ID = #{bookId,jdbcType=INTEGER}
  </select>

  <select id="selBookInfoByCond" resultMap="ResultMapWithBLOBs" parameterType="map">
    select info.*,type.TYPE_NAME as typeName,user.USER_NAME as borrPersonName,d.DEPT_NAME as deptName
    from book_info info
    LEFT JOIN book_type type on info.TYPE_ID=type.TYPE_ID
    LEFT JOIN user on info.BORR_PERSON=user.USER_ID
    LEFT JOIN department d on info.DEPT=d.DEPT_ID
    <where>
      <if test="bookInfoWithBLOBs.isbn != null and bookInfoWithBLOBs.isbn != ''" >
        and info.ISBN = #{bookInfoWithBLOBs.isbn,jdbcType=VARCHAR}
      </if>
      <if test="bookInfoWithBLOBs.typeId != null and bookInfoWithBLOBs.typeId != ''" >
        and info.TYPE_ID = #{bookInfoWithBLOBs.typeId,jdbcType=INTEGER}
      </if>
      <if test="bookInfoWithBLOBs.dept != null and bookInfoWithBLOBs.dept != ''" >
        and info.DEPT = #{bookInfoWithBLOBs.dept,jdbcType=INTEGER}
      </if>
      <if test="bookInfoWithBLOBs.bookName != null and bookInfoWithBLOBs.bookName != ''" >
        and info.BOOK_NAME like concat('%',#{bookInfoWithBLOBs.bookName,jdbcType=VARCHAR},'%')
      </if>
      <if test="bookInfoWithBLOBs.author != null and bookInfoWithBLOBs.author != ''" >
        and info.AUTHOR = #{bookInfoWithBLOBs.author,jdbcType=VARCHAR}
      </if>
      <if test="bookInfoWithBLOBs.pubDate != null and bookInfoWithBLOBs.pubDate != ''" >
        and info.PUB_DATE = #{bookInfoWithBLOBs.pubDate,jdbcType=VARCHAR}
      </if>
      <if test="bookInfoWithBLOBs.pubHouse != null and bookInfoWithBLOBs.pubHouse != ''" >
        and info.PUB_HOUSE = #{bookInfoWithBLOBs.pubHouse,jdbcType=VARCHAR}
      </if>
      <if test="bookInfoWithBLOBs.amt != null and bookInfoWithBLOBs.amt != ''" >
        and info.AMT = #{bookInfoWithBLOBs.amt,jdbcType=INTEGER}
      </if>
      <if test="bookInfoWithBLOBs.price != null and bookInfoWithBLOBs.price != ''" >
        and info.PRICE = #{bookInfoWithBLOBs.price,jdbcType=DECIMAL}
      </if>
      <if test="bookInfoWithBLOBs.area != null and bookInfoWithBLOBs.area != ''" >
        and info.AREA = #{bookInfoWithBLOBs.area,jdbcType=VARCHAR}
      </if>
      <if test="bookInfoWithBLOBs.lend != null and bookInfoWithBLOBs.lend != ''" >
        and info.LEND = #{bookInfoWithBLOBs.lend,jdbcType=CHAR}
      </if>
      <if test="bookInfoWithBLOBs.borrPerson != null and bookInfoWithBLOBs.borrPerson != ''" >
        and info.BORR_PERSON = #{bookInfoWithBLOBs.borrPerson,jdbcType=VARCHAR}
      </if>
      <if test="bookInfoWithBLOBs.memo != null and bookInfoWithBLOBs.memo != ''" >
        and info.MEMO = #{bookInfoWithBLOBs.memo,jdbcType=VARCHAR}
      </if>
      <if test="bookInfoWithBLOBs.bookNo != null and bookInfoWithBLOBs.bookNo != ''" >
        and info.BOOK_NO like concat('%',#{bookInfoWithBLOBs.bookNo,jdbcType=VARCHAR},'%')
      </if>
      <if test="bookInfoWithBLOBs.brief != null and bookInfoWithBLOBs.brief != ''" >
        and info.BRIEF = #{bookInfoWithBLOBs.brief,jdbcType=LONGVARCHAR}
      </if>
      <if test="bookInfoWithBLOBs.open != null and bookInfoWithBLOBs.open != ''" >
        and info.OPEN = #{bookInfoWithBLOBs.open,jdbcType=LONGVARCHAR}
      </if>
      <if test="bookInfoWithBLOBs.attachmentId != null and bookInfoWithBLOBs.attachmentId != ''" >
        and info.ATTACHMENT_ID = #{bookInfoWithBLOBs.attachmentId,jdbcType=LONGVARCHAR}
      </if>
      <if test="bookInfoWithBLOBs.attachmentName != null and bookInfoWithBLOBs.attachmentName != ''" >
        and info.ATTACHMENT_NAME = #{bookInfoWithBLOBs.attachmentName,jdbcType=LONGVARCHAR}
      </if>
      <if test="bookInfoWithBLOBs.borrowFlag!='' and bookInfoWithBLOBs.borrowFlag==0">
        and info.BOOK_NO NOT IN (SELECT BOOK_NO from book_manage)
      </if>
      <if test="bookInfoWithBLOBs.borrowFlag!='' and bookInfoWithBLOBs.borrowFlag==1">
        and info.BOOK_NO IN (SELECT BOOK_NO from book_manage)
      </if>
    </where>
    <if test="bookInfoWithBLOBs.order!=null and bookInfoWithBLOBs.order!=''">
      ORDER  BY  #{bookInfoWithBLOBs.order}
    </if>
  </select>

  <select id="selBookInfoCountByCond" resultType="java.lang.Integer" parameterType="map">
    select count(*)
    from book_info info
    LEFT JOIN book_type type on info.TYPE_ID=type.TYPE_ID
    LEFT JOIN user on info.BORR_PERSON=user.USER_ID
    LEFT JOIN department d on info.DEPT=d.DEPT_ID
    <where>
      <if test="isbn != null and isbn != ''" >
        and info.ISBN = #{isbn,jdbcType=VARCHAR}
      </if>
      <if test="typeId != null and typeId != ''" >
        and info.TYPE_ID = #{typeId,jdbcType=INTEGER}
      </if>
      <if test="dept != null and dept != ''" >
        and info.DEPT = #{dept,jdbcType=INTEGER}
      </if>
      <if test="bookName != null and bookName != ''" >
        and info.BOOK_NAME like concat('%',#{bookName,jdbcType=VARCHAR},'%')
      </if>
      <if test="author != null and author != ''" >
        and info.AUTHOR = #{author,jdbcType=VARCHAR}
      </if>
      <if test="pubDate != null and pubDate != ''" >
        and info.PUB_DATE = #{pubDate,jdbcType=VARCHAR}
      </if>
      <if test="pubHouse != null and pubHouse != ''" >
        and info.PUB_HOUSE = #{pubHouse,jdbcType=VARCHAR}
      </if>
      <if test="amt != null and amt != ''" >
        and info.AMT = #{amt,jdbcType=INTEGER}
      </if>
      <if test="price != null and price != ''" >
        and info.PRICE = #{price,jdbcType=DECIMAL}
      </if>
      <if test="area != null and area != ''" >
        and info.AREA = #{area,jdbcType=VARCHAR}
      </if>
      <if test="lend != null and lend != ''" >
        and info.LEND = #{lend,jdbcType=CHAR}
      </if>
      <if test="borrPerson != null and borrPerson != ''" >
        and info.BORR_PERSON = #{borrPerson,jdbcType=VARCHAR}
      </if>
      <if test="memo != null and memo != ''" >
        and info.MEMO = #{memo,jdbcType=VARCHAR}
      </if>
      <if test="bookNo != null and bookNo != ''" >
        and info.BOOK_NO like concat('%',#{bookNo,jdbcType=VARCHAR},'%')
      </if>
      <if test="brief != null and brief != ''" >
        and info.BRIEF = #{brief,jdbcType=LONGVARCHAR}
      </if>
      <if test="open != null and open != ''" >
        and info.OPEN = #{open,jdbcType=LONGVARCHAR}
      </if>
      <if test="attachmentId != null and attachmentId != ''" >
        and info.ATTACHMENT_ID = #{attachmentId,jdbcType=LONGVARCHAR}
      </if>
      <if test="attachmentName != null and attachmentName != ''" >
        and info.ATTACHMENT_NAME = #{attachmentName,jdbcType=LONGVARCHAR}
      </if>
      <if test="borrowFlag!='' and borrowFlag==0">
        and info.BOOK_NO NOT IN (SELECT BOOK_NO from book_manage)
      </if>
      <if test="borrowFlag!='' and borrowFlag==1">
        and info.BOOK_NO IN (SELECT BOOK_NO from book_manage)
      </if>
    </where>
  </select>

  <delete id="delBookInfoByIds">
    delete FROM book_info WHERE  BOOK_ID in
    <foreach collection="bookIds" item="bookId" open="(" close=")" separator=",">
      #{bookId}
    </foreach>
  </delete>

  <select id="selInfoByBookNo" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select *
    FROM book_info
    WHERE
    BOOK_NO=#{bookNo}
  </select>

  <select id="selInfoByUser" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.book.BookInfoWithBLOBs" >
    select *
    FROM book_info
    WHERE
    BOOK_NO=#{bookNo}
    AND
    (
      1=2
       <if test="openDept!=null and openDept!=''">
         OR
         #{openDept} like concat((select DEPT_ID from user where USER_ID=#{currentUser}),',%')
         OR
         #{openDept} like concat('%,',(select DEPT_ID from user where USER_ID=#{currentUser}),',%')
       </if>
      <if test="openUser!=null and openUser!=''">
        OR
        #{openUser} like concat(#{currentUser},',%')
        OR
        #{openUser} like concat('%,',#{currentUser},',%')
      </if>
      <if test="openUserPriv!=null and openUserPriv!=''">
        OR
        #{openUserPriv} like concat((select USER_PRIV from user where USER_ID=#{currentUser}),',%')
        OR
        #{openUserPriv} like concat('%,',(select USER_PRIV from user where USER_ID=#{currentUser}),',%')
      </if>
    )
  </select>
</mapper>