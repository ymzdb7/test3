<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myoa.dao.sms.SmsBodyMapper">
    <resultMap id="BaseResultMap" type="com.myoa.model.sms.SmsBody">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="BODY_ID" property="bodyId" jdbcType="INTEGER"/>
        <result column="FROM_ID" property="fromId" jdbcType="VARCHAR"/>
        <result column="SMS_TYPE" property="smsType" jdbcType="VARCHAR"/>
        <result column="SEND_TIME" property="sendTime" jdbcType="INTEGER"/>
        <result column="REMIND_URL" property="remindUrl" jdbcType="VARCHAR"/>
        <result column="REMIND_FLAG" property="remindFlag" jdbcType="CHAR"/>
        <result column="TO_ID" property="toId" jdbcType="VARCHAR"/>
        <result column="DELETE_FLAG" property="deleteFlag" jdbcType="CHAR"/>
        <result column="IS_ATTACH" property="isAttach" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.myoa.model.sms.SmsBody" extends="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="CONTENT" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <resultMap id="SmsBodyExtendWithBLOBs" type="com.myoa.model.sms.SmsBodyExtend" extends="ResultMapWithBLOBs">
        <result column="avater" property="avater" />
        <result column="type" property="type" />
        <result column="time" property="time" />
        <result column="userName" property="userName" />
        <result column="fromUid" property="fromUid" />
        <result column="fromName" property="fromName" />
        <result column="uid" property="uid" />
    </resultMap>
    <sql id="Example_Where_Clause">

       <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        BODY_ID, FROM_ID, SMS_TYPE, SEND_TIME, REMIND_URL
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        CONTENT
    </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="com.myoa.model.sms.SmsBodyExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from sms_body
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myoa.model.sms.SmsBodyExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sms_body
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from sms_body
        where BODY_ID = #{bodyId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from sms_body
        where BODY_ID = #{bodyId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.myoa.model.sms.SmsBodyExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from sms_body
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.myoa.model.sms.SmsBody">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into sms_body ( FROM_ID, SMS_TYPE,
        SEND_TIME, REMIND_URL, CONTENT
        )
        values ( #{fromId,jdbcType=VARCHAR}, #{smsType,jdbcType=VARCHAR},
        #{sendTime,jdbcType=INTEGER}, #{remindUrl,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.myoa.model.sms.SmsBody" useGeneratedKeys="true" keyProperty="bodyId" >
        <selectKey order="AFTER" keyProperty="bodyId" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sms_body
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bodyId != null">
                BODY_ID,
            </if>
            <if test="fromId != null">
                FROM_ID,
            </if>
            <if test="smsType != null">
                SMS_TYPE,
            </if>
            <if test="sendTime != null">
                SEND_TIME,
            </if>
            <if test="remindUrl != null">
                REMIND_URL,
            </if>
            <if test="content != null">
                CONTENT,
            </if>
            <if test="isAttach != null">
                IS_ATTACH,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bodyId != null">
                #{bodyId,jdbcType=INTEGER},
            </if>
            <if test="fromId != null">
                #{fromId,jdbcType=VARCHAR},
            </if>
            <if test="smsType != null">
                #{smsType,jdbcType=VARCHAR},
            </if>
            <if test="sendTime != null">
                #{sendTime,jdbcType=INTEGER},
            </if>
            <if test="remindUrl != null">
                #{remindUrl,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="isAttach != null">
                #{isAttach},
            </if>
        </trim>
    </insert>

    <insert id="insertSelective" parameterType="com.myoa.model.sms.SmsBody" useGeneratedKeys="true" keyProperty="bodyId" databaseId="oracle">
        <selectKey order="BEFORE" keyProperty="bodyId" resultType="int">
            SELECT SMS_BODY_BODY_ID_SEQ.nextval as bodyId from dual
        </selectKey>
        insert into sms_body
        <trim prefix="(" suffix=")" suffixOverrides=",">
                BODY_ID,

            <if test="fromId != null">
                FROM_ID,
            </if>
            <if test="smsType != null">
                SMS_TYPE,
            </if>
            <if test="sendTime != null">
                SEND_TIME,
            </if>
            <if test="remindUrl != null">
                REMIND_URL,
            </if>
            <if test="content != null">
                CONTENT,
            </if>
            <if test="isAttach != null">
                IS_ATTACH,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                #{bodyId,jdbcType=INTEGER},

            <if test="fromId != null">
                #{fromId,jdbcType=VARCHAR},
            </if>
            <if test="smsType != null">
                #{smsType,jdbcType=VARCHAR},
            </if>
            <if test="sendTime != null">
                #{sendTime,jdbcType=INTEGER},
            </if>
            <if test="remindUrl != null">
                #{remindUrl,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="isAttach != null">
                #{isAttach},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.myoa.model.sms.SmsBodyExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from sms_body
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sms_body
        <set>
            <if test="record.bodyId != null">
                BODY_ID = #{record.bodyId,jdbcType=INTEGER},
            </if>
            <if test="record.fromId != null">
                FROM_ID = #{record.fromId,jdbcType=VARCHAR},
            </if>
            <if test="record.smsType != null">
                SMS_TYPE = #{record.smsType,jdbcType=VARCHAR},
            </if>
            <if test="record.sendTime != null">
                SEND_TIME = #{record.sendTime,jdbcType=INTEGER},
            </if>
            <if test="record.remindUrl != null">
                REMIND_URL = #{record.remindUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                CONTENT = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sms_body
        set BODY_ID = #{record.bodyId,jdbcType=INTEGER},
        FROM_ID = #{record.fromId,jdbcType=VARCHAR},
        SMS_TYPE = #{record.smsType,jdbcType=VARCHAR},
        SEND_TIME = #{record.sendTime,jdbcType=INTEGER},
        REMIND_URL = #{record.remindUrl,jdbcType=VARCHAR},
        CONTENT = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sms_body
        set BODY_ID = #{record.bodyId,jdbcType=INTEGER},
        FROM_ID = #{record.fromId,jdbcType=VARCHAR},
        SMS_TYPE = #{record.smsType,jdbcType=VARCHAR},
        SEND_TIME = #{record.sendTime,jdbcType=INTEGER},
        REMIND_URL = #{record.remindUrl,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.myoa.model.sms.SmsBody">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sms_body
        <set>
            <if test="fromId != null">
                FROM_ID = #{fromId,jdbcType=VARCHAR},
            </if>
            <if test="smsType != null">
                SMS_TYPE = #{smsType,jdbcType=VARCHAR},
            </if>
            <if test="sendTime != null">
                SEND_TIME = #{sendTime,jdbcType=INTEGER},
            </if>
            <if test="remindUrl != null">
                REMIND_URL = #{remindUrl,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                CONTENT = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where BODY_ID = #{bodyId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myoa.model.sms.SmsBody">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sms_body
        set FROM_ID = #{fromId,jdbcType=VARCHAR},
        SMS_TYPE = #{smsType,jdbcType=VARCHAR},
        SEND_TIME = #{sendTime,jdbcType=INTEGER},
        REMIND_URL = #{remindUrl,jdbcType=VARCHAR},
        CONTENT = #{content,jdbcType=LONGVARCHAR}
        where BODY_ID = #{bodyId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.myoa.model.sms.SmsBody">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sms_body
        set FROM_ID = #{fromId,jdbcType=VARCHAR},
        SMS_TYPE = #{smsType,jdbcType=VARCHAR},
        SEND_TIME = #{sendTime,jdbcType=INTEGER},
        REMIND_URL = #{remindUrl,jdbcType=VARCHAR}
        where BODY_ID = #{bodyId,jdbcType=INTEGER}
    </update>

    <select id="getSmsBodyByMap" resultMap="BaseResultMap" parameterType="map">
        select s.SMS_ID, s.TO_ID, s.REMIND_FLAG, s.DELETE_FLAG, s.REMIND_TIME,sb.* from sms s, sms_body sb
        WHERE s.body_id=sb.body_id
        <if test=" toId!=null and toId!=''  ">
            and s.TO_ID = #{toId} and s.DELETE_FLAG = '0'
        </if>
        <if test=" fromId!=null and fromId!='' ">
            and sb.from_id = #{fromId} and s.DELETE_FLAG!= '2'
        </if>
        <if test=" remindFlag!=null and remindFlag == &quot;3&quot; ">
            and s.REMIND_FLAG != '0' and s.DELETE_FLAG = '0'
        </if>
        ORDER BY s.sms_id DESC
    </select>

    <select id="getSmsBodyCountByMap" resultType="Integer" parameterType="map">
        select count(sb.body_id) from sms s, sms_body sb WHERE s.body_id=sb.body_id
        <if test=" toId!=null and toId!=''  ">
            and s.TO_ID = #{toId} and s.DELETE_FLAG = '0'
        </if>
        <if test=" fromId!=null and fromId!='' ">
            and sb.from_id = #{fromId} and s.DELETE_FLAG!='2'
        </if>
        <if test=" remindFlag!=null and remindFlag == &quot;3&quot; ">
            and s.REMIND_FLAG != '0' and s.DELETE_FLAG = '0'
        </if>
    </select>

    <select id="querySmsBody" resultMap="BaseResultMap" parameterType="map">
        select s.SMS_ID, s.TO_ID, s.REMIND_FLAG, s.DELETE_FLAG, s.REMIND_TIME,sb.* from sms s, sms_body sb
        WHERE s.body_id=sb.body_id
        <if test=" toIds!=null  ">
            and s.TO_ID in
            <foreach item="toId" collection="toIds" open="(" separator="," close=")">
                #{toId}
            </foreach>
        </if>
        <if test=" fromIds!=null ">
            and sb.from_id in
            <foreach item="fromId" collection="fromIds" open="(" separator="," close=")">
                #{fromId}
            </foreach>
        </if>
        <if test=" content!=null and content != '' ">
            and sb.content like  '%'+#{content}+'%'
        </if>
        <if test="smsType!=null and smsType !='' ">
            and sb.sms_Type = #{smsType}
        </if>
        <if test="beginDate!=null" >
            and send_time > #{beginDate} and send_time &lt; #{endDate}
        </if>
        <if test="deleteFlag!=null and deleteFlag==0 ">
            and s.DELETE_FLAG =0
        </if>
        <if test="deleteFlag!=null and deleteFlag==2 ">
            and s.DELETE_FLAG!=2
        </if>
           order by  ${orderBy}  ${sortType}   LIMIT #{page},#{pageSize}
    </select>


    <select id="querySmsBody" resultMap="BaseResultMap" parameterType="map"  databaseId="oracle">
        SELECT
        *
        FROM
        (
        SELECT
        T .*, ROWNUM rn
        FROM
        (
            select s.SMS_ID, s.TO_ID, s.REMIND_FLAG, s.DELETE_FLAG, s.REMIND_TIME,sb.* from sms s, sms_body sb
            WHERE s.body_id=sb.body_id
            <if test=" toIds!=null  ">
                and s.TO_ID in
                <foreach item="toId" collection="toIds" open="(" separator="," close=")">
                    #{toId}
                </foreach>
            </if>
            <if test=" fromIds!=null ">
                and sb.from_id in
                <foreach item="fromId" collection="fromIds" open="(" separator="," close=")">
                    #{fromId}
                </foreach>
            </if>
            <if test=" content!=null and content != '' ">
                and sb.content like  '%'+#{content}+'%'
            </if>
            <if test="smsType!=null and smsType !='' ">
                and sb.sms_Type = #{smsType}
            </if>
            <if test="beginDate!=null" >
                and send_time > #{beginDate} and send_time &lt; #{endDate}
            </if>
            <if test="deleteFlag!=null and deleteFlag==0 ">
                and s.DELETE_FLAG =0
            </if>
            <if test="deleteFlag!=null and deleteFlag==2 ">
                and s.DELETE_FLAG!=2
            </if>
            order by  ${orderBy}  ${sortType}
        ) T
        WHERE
        ROWNUM &lt;= (#{page}+#{pageSize})
        )
        WHERE
        rn > #{page}
    </select>

    <select id="querySmsBodyCount" resultType="Integer" parameterType="Map">
        select  COUNT(s.SMS_ID) from sms s, sms_body sb
        WHERE s.body_id=sb.body_id
        <if test=" toIds!=null  ">
            and s.TO_ID in
            <foreach item="toId" collection="toIds" open="(" separator="," close=")">
                #{toId}
            </foreach>
        </if>
        <if test=" fromIds!=null ">
            and sb.from_id in
            <foreach item="fromId" collection="fromIds" open="(" separator="," close=")">
                #{fromId}
            </foreach>
        </if>
        <if test=" content!=null and content != '' ">
            and sb.content like  '%'+#{content}+'%'
        </if>
        <if test="smsType!=null and smsType !='' ">
            and sb.sms_Type = #{smsType}
        </if>
        <if test="beginDate!=null" >
            and send_time > #{beginDate} and send_time &lt; #{endDate}
        </if>
        <if test="deleteFlag!=null and deleteFlag==0 ">
            and s.DELETE_FLAG =0
        </if>
        <if test="deleteFlag!=null and deleteFlag==2 ">
            and s.DELETE_FLAG!=2
        </if>
    </select>
    <select id="SmsListByType" resultMap="SmsBodyExtendWithBLOBs"  parameterType="Map" >
     SELECT
	s.SMS_ID,
	s.TO_ID,
	s.REMIND_FLAG,
	s.DELETE_FLAG,
	s.REMIND_TIME,
	sb.*,
    u.USER_NAME as userName,
    u.UID as uid,
    u.AVATAR as avater
FROM
	sms s
INNER JOIN sms_body sb ON s.BODY_ID=sb.BODY_ID
INNER JOIN `user` u ON sb.FROM_ID=u.USER_ID
WHERE s.TO_ID= #{userId} AND s.REMIND_FLAG =#{flag}   AND s.DELETE_FLAG ='0'
ORDER BY sb.SEND_TIME DESC

 </select>

    <select id="SmsListByType" resultMap="SmsBodyExtendWithBLOBs"  parameterType="Map"  databaseId="oracle">
        SELECT
        s.SMS_ID,
        s.TO_ID,
        s.REMIND_FLAG,
        s.DELETE_FLAG,
        s.REMIND_TIME,
        sb.*,
        u.USER_NAME as userName,
        u."UID" as "UID",
        u.AVATAR as avater
        FROM
        sms s
        INNER JOIN sms_body sb ON s.BODY_ID=sb.BODY_ID
        INNER JOIN "USER" u ON sb.FROM_ID=u.USER_ID
        WHERE s.TO_ID= #{userId} AND s.REMIND_FLAG =#{flag}   AND s.DELETE_FLAG ='0'
        ORDER BY sb.SEND_TIME DESC

    </select>

    <select id="SmsListByType" resultMap="SmsBodyExtendWithBLOBs"  parameterType="Map" databaseId="dm">
        SELECT
        s.SMS_ID,
        s.TO_ID,
        s.REMIND_FLAG,
        s.DELETE_FLAG,
        s.REMIND_TIME,
        sb.*,
        u.USER_NAME as userName,
        u."UID" as "UID",
        u.AVATAR as avater
        FROM
        sms s
        INNER JOIN sms_body sb ON s.BODY_ID=sb.BODY_ID
        INNER JOIN "USER" u ON sb.FROM_ID=u.USER_ID
        WHERE s.TO_ID= #{userId} AND s.REMIND_FLAG =#{flag}   AND s.DELETE_FLAG ='0'
        ORDER BY sb.SEND_TIME DESC

    </select>
    <select id="getWillDocSendOrReceive" resultMap="SmsBodyExtendWithBLOBs"  parameterType="Map" >
        SELECT
        s.SMS_ID,
        s.TO_ID,
        s.REMIND_FLAG,
        s.DELETE_FLAG,
        s.REMIND_TIME,
        sb.*,
        u.USER_NAME as userName,
        u.UID as uid,
        u.AVATAR as avater
        FROM
        sms s
        INNER JOIN sms_body sb ON s.BODY_ID=sb.BODY_ID
        INNER JOIN `user` u ON sb.FROM_ID=u.USER_ID
        WHERE s.TO_ID= #{userId} AND s.REMIND_FLAG =#{flag} AND  sb.SMS_TYPE=#{smsType} AND s.DELETE_FLAG ='0'
        ORDER BY sb.SEND_TIME DESC

    </select>

    <select id="getWillDocSendOrReceive" resultMap="SmsBodyExtendWithBLOBs"  parameterType="Map"  databaseId="oracle">
        SELECT
        s.SMS_ID,
        s.TO_ID,
        s.REMIND_FLAG,
        s.DELETE_FLAG,
        s.REMIND_TIME,
        sb.*,
        u.USER_NAME as userName,
        u."UID" as "UID",
        u.AVATAR as avater
        FROM
        sms s
        INNER JOIN sms_body sb ON s.BODY_ID=sb.BODY_ID
        INNER JOIN "USER" u ON sb.FROM_ID=u.USER_ID
        WHERE s.TO_ID= #{userId} AND s.REMIND_FLAG =#{flag} AND  sb.SMS_TYPE=#{smsType}  AND s.DELETE_FLAG ='0'
        ORDER BY sb.SEND_TIME DESC

    </select>

    <select id="getWillDocSendOrReceive" resultMap="SmsBodyExtendWithBLOBs"  parameterType="Map" databaseId="dm">
        SELECT
        s.SMS_ID,
        s.TO_ID,
        s.REMIND_FLAG,
        s.DELETE_FLAG,
        s.REMIND_TIME,
        sb.*,
        u.USER_NAME as userName,
        u."UID" as "UID",
        u.AVATAR as avater
        FROM
        sms s
        INNER JOIN sms_body sb ON s.BODY_ID=sb.BODY_ID
        INNER JOIN "USER" u ON sb.FROM_ID=u.USER_ID
        WHERE s.TO_ID= #{userId} AND s.REMIND_FLAG =#{flag}  AND  sb.SMS_TYPE=#{smsType} AND s.DELETE_FLAG ='0'
        ORDER BY sb.SEND_TIME DESC

    </select>


    <select id="smsListByReadType" resultMap="SmsBodyExtendWithBLOBs"  parameterType="Map" >
        SELECT
        s.SMS_ID,
        s.TO_ID,
        s.REMIND_FLAG,
        s.DELETE_FLAG,
        s.REMIND_TIME,
        sb.*,
        u.USER_NAME as userName,
        u.UID as uid,
        u.AVATAR as avater
        FROM
        sms s
        INNER JOIN sms_body sb ON s.BODY_ID=sb.BODY_ID
        INNER JOIN `user` u ON s.TO_ID=u.USER_ID
        WHERE s.TO_ID= #{userId}

    </select>
    <select id="SmsListMsgByType" resultType="String"  parameterType="Map" >
    SELECT
	s.SMS_ID
FROM
	sms s
INNER JOIN sms_body sb ON s.BODY_ID=sb.BODY_ID AND sb.SMS_TYPE=#{type}
INNER JOIN `user` u ON sb.FROM_ID=u.USER_ID
WHERE s.TO_ID= #{userId} AND s.REMIND_FLAG =#{flag}
    </select>


</mapper>