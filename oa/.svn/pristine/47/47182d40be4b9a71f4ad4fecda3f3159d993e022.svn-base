<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.meet.MeetingAttendConfirmMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.meet.MeetingAttendConfirm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="SID" property="sid" jdbcType="INTEGER" />
    <result column="ATTEND_FLAG" property="attendFlag" jdbcType="INTEGER" />
    <result column="CONFIRM_TIME" property="confirmTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="MEETING_ID" property="meetingId" jdbcType="INTEGER" />
    <result column="READ_FLAG" property="readFlag" jdbcType="INTEGER" />
    <result column="READING_TIME" property="readingTime" jdbcType="TIMESTAMP" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="CREATE_USER" property="createUser" jdbcType="INTEGER" />
    <result column="ATTENDEE_ID" property="attendeeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    SID, ATTEND_FLAG, CONFIRM_TIME, CREATE_TIME, MEETING_ID, READ_FLAG, READING_TIME,
    REMARK, CREATE_USER
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.meet.MeetingAttendConfirmExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from meeting_attend_confirm
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from meeting_attend_confirm
    where SID = #{sid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from meeting_attend_confirm
    where SID = #{sid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.meet.MeetingAttendConfirmExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from meeting_attend_confirm
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.meet.MeetingAttendConfirm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into meeting_attend_confirm (SID, ATTEND_FLAG, CONFIRM_TIME,
    CREATE_TIME, MEETING_ID, READ_FLAG,
    READING_TIME, REMARK, CREATE_USER
    )
    values (#{sid,jdbcType=INTEGER}, #{attendFlag,jdbcType=INTEGER}, #{confirmTime,jdbcType=TIMESTAMP},
    #{createTime,jdbcType=TIMESTAMP}, #{meetingId,jdbcType=INTEGER}, #{readFlag,jdbcType=INTEGER},
    #{readingTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{createUser,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.meet.MeetingAttendConfirm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into meeting_attend_confirm
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        SID,
      </if>
      <if test="attendFlag != null" >
        ATTEND_FLAG,
      </if>
      <if test="confirmTime != null" >
        CONFIRM_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="meetingId != null" >
        MEETING_ID,
      </if>
      <if test="readFlag != null" >
        READ_FLAG,
      </if>
      <if test="readingTime != null" >
        READING_TIME,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="attendFlag != null" >
        #{attendFlag,jdbcType=INTEGER},
      </if>
      <if test="confirmTime != null" >
        #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetingId != null" >
        #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="readFlag != null" >
        #{readFlag,jdbcType=INTEGER},
      </if>
      <if test="readingTime != null" >
        #{readingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.meet.MeetingAttendConfirmExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from meeting_attend_confirm
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update meeting_attend_confirm
    <set >
      <if test="record.sid != null" >
        SID = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.attendFlag != null" >
        ATTEND_FLAG = #{record.attendFlag,jdbcType=INTEGER},
      </if>
      <if test="record.confirmTime != null" >
        CONFIRM_TIME = #{record.confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.meetingId != null" >
        MEETING_ID = #{record.meetingId,jdbcType=INTEGER},
      </if>
      <if test="record.readFlag != null" >
        READ_FLAG = #{record.readFlag,jdbcType=INTEGER},
      </if>
      <if test="record.readingTime != null" >
        READING_TIME = #{record.readingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update meeting_attend_confirm
    set SID = #{record.sid,jdbcType=INTEGER},
    ATTEND_FLAG = #{record.attendFlag,jdbcType=INTEGER},
    CONFIRM_TIME = #{record.confirmTime,jdbcType=TIMESTAMP},
    CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
    MEETING_ID = #{record.meetingId,jdbcType=INTEGER},
    READ_FLAG = #{record.readFlag,jdbcType=INTEGER},
    READING_TIME = #{record.readingTime,jdbcType=TIMESTAMP},
    REMARK = #{record.remark,jdbcType=VARCHAR},
    CREATE_USER = #{record.createUser,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.meet.MeetingAttendConfirm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update meeting_attend_confirm
    <set >
      <if test="attendFlag != null" >
        ATTEND_FLAG = #{attendFlag,jdbcType=INTEGER},
      </if>
      <if test="confirmTime != null" >
        CONFIRM_TIME = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetingId != null" >
        MEETING_ID = #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="readFlag != null" >
        READ_FLAG = #{readFlag,jdbcType=INTEGER},
      </if>
      <if test="readingTime != null" >
        READING_TIME = #{readingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=INTEGER},
      </if>
    </set>
    where SID = #{sid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.meet.MeetingAttendConfirm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update meeting_attend_confirm
    set ATTEND_FLAG = #{attendFlag,jdbcType=INTEGER},
    CONFIRM_TIME = #{confirmTime,jdbcType=TIMESTAMP},
    CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
    MEETING_ID = #{meetingId,jdbcType=INTEGER},
    READ_FLAG = #{readFlag,jdbcType=INTEGER},
    READING_TIME = #{readingTime,jdbcType=TIMESTAMP},
    REMARK = #{remark,jdbcType=VARCHAR},
    CREATE_USER = #{createUser,jdbcType=INTEGER}
    where SID = #{sid,jdbcType=INTEGER}
  </update>





  <select id="queryAttendConfirm" resultMap="BaseResultMap" parameterType="String">
   SELECT * from meeting_attend_confirm as a
  JOIN user as u on a.ATTENDEE_ID=u.UID
  where MEETING_ID=#{meetingId} and u.DEPT_ID!=0
    order BY  SID
  </select>

  <insert id="insertConfirm" parameterType="com.xoa.model.meet.MeetingAttendConfirm" >
    insert into meeting_attend_confirm (ATTEND_FLAG, CREATE_TIME,
    MEETING_ID, READ_FLAG,
    REMARK, CREATE_USER,ATTENDEE_ID
    )
    values ( #{attendFlag}, #{createTime},
    #{meetingId}, #{readFlag},
    #{remark}, #{createUser},
    #{attendeeId}
    )
  </insert>

  <delete id="delConfirmById" parameterType="String" >
    delete from meeting_attend_confirm
    where MEETING_ID=#{meetingId}
  </delete>

  <select id="queryAttendByMeetId" resultMap="BaseResultMap" parameterType="String">
    SELECT * from meeting_attend_confirm where MEETING_ID=#{meetingId} and ATTEND_FLAG=1
  </select>

  <update id="updateStatusBySId" parameterType="com.xoa.model.meet.MeetingAttendConfirm" >
    update meeting_attend_confirm
    <set >
      <if test="attendFlag != null" >
        ATTEND_FLAG = #{attendFlag,jdbcType=INTEGER},
      </if>
      <if test="confirmTime != null and confirmTime != ''" >
        CONFIRM_TIME = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readFlag != null" >
        READ_FLAG = #{readFlag,jdbcType=INTEGER},
      </if>
      <if test="readingTime != null and readingTime != ''" >
        READING_TIME = #{readingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where MEETING_ID=#{meetingId} and ATTENDEE_ID=#{attendeeId}
  </update>

  <select id="queryMyAttend" resultMap="BaseResultMap" parameterType="map">
    SELECT * from meeting_attend_confirm where MEETING_ID=#{meetingId} and ATTENDEE_ID=#{attendeeId}
  </select>
</mapper>