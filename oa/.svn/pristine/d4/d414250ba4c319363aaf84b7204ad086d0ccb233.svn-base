package com.xoa.controller.hr;

import com.xoa.model.hr.HrStaffInfo;
import com.xoa.model.users.Users;
import com.xoa.service.hr.HrSStaffInfoService;
import com.xoa.service.users.UsersService;
import com.xoa.util.ToJson;
import com.xoa.util.common.session.SessionUtils;
import com.xoa.util.common.wrapper.BaseWrapper;
import com.xoa.util.common.wrapper.BaseWrappers;
import java.io.IOException;
import java.text.ParseException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

@RestController
@RequestMapping({ "/hr/api" })
public class HrStaffInfoController {

	@Autowired
	HrSStaffInfoService hrRetireeService;

	@Autowired
	UsersService usersService;

	@RequestMapping({ "/getRetireeInfo" })
	public BaseWrappers getRetireeInfo(String startTime, String endTime) {
		return this.hrRetireeService.selectRetireeInfo(startTime, endTime);
	}

	@ResponseBody
	@RequestMapping({ "/getPersonFilesByDeptId" })
	public ToJson<HrStaffInfo> selectPersonFilesByDeptId(
			HttpServletRequest request, Integer deptId) {
		return this.hrRetireeService.selectPersonFileByDeptId(request, deptId);
	}

	@ResponseBody
	@RequestMapping({ "/getHrStaffInfoNews" })
	public BaseWrappers getHrStaffInfoNews() {
		return this.hrRetireeService.getHrStaffInfoNews();
	}

	@ResponseBody
	@RequestMapping({ "/getHrStaffInfoCount" })
	public BaseWrapper getHrStaffInfoCount(String type) throws ParseException {
		return this.hrRetireeService.getHrStaffInfoCount(type);
	}

	@ResponseBody
	@RequestMapping({ "/getPersonFileByUserId" })
	public HrStaffInfo selectPersonFileByUserId(HttpServletRequest request,
			Integer uid) {
		HrStaffInfo hrStaffInfo = this.hrRetireeService
				.selectPersonFileByUserId(request, uid);

		return hrStaffInfo;
	}

	@ResponseBody
	@RequestMapping({ "/getPersonByUserId" })
	public ToJson<HrStaffInfo> selectPersonByUserId(HttpServletRequest request,
			Integer uid) {
		return this.hrRetireeService.selectPersonByUserId(request, uid);
	}

	@ResponseBody
	@RequestMapping({ "/selectOwnStaffInfo" })
	public ToJson<HrStaffInfo> selectOwnStaffInfo(HttpServletRequest request) {
		Users user = (Users) SessionUtils.getSessionInfo(request.getSession(),
				Users.class, new Users());
		return this.hrRetireeService.selectOwnStaffInfo(request, user);
	}

	@ResponseBody
	@RequestMapping({ "/editPersonFile" })
	public ToJson<HrStaffInfo> updatePersonFile(HrStaffInfo hrStaffInfo,
			HttpServletRequest request) {
		return this.hrRetireeService.updatePersonFile(hrStaffInfo, request);
	}

	@ResponseBody
	@RequestMapping({ "/selectOnLinePerson" })
	public ToJson<HrStaffInfo> selectOnLinePerson(HrStaffInfo hrStaffInfo,
			HttpServletRequest request, HttpServletResponse response,
			String export) {
		return this.hrRetireeService.selectOnLinePerson(hrStaffInfo, response,
				request, export);
	}

	@ResponseBody
	@RequestMapping({ "/selectLeavePerson" })
	public ToJson<HrStaffInfo> selectLeavePerson(HrStaffInfo hrStaffInfo,
			HttpServletRequest request, HttpServletResponse response,
			String export) {
		return this.hrRetireeService.selectLeavePerson(hrStaffInfo, response,
				request, export);
	}

	@ResponseBody
	@RequestMapping({ "/savePersonFile" })
	public ToJson<Users> savePersonFile(HrStaffInfo hrStaffInfo,
			HttpServletRequest request) {
		return this.hrRetireeService.savePersonFile(hrStaffInfo, request);
	}

	@ResponseBody
	@RequestMapping({ "/deletePersonById" })
	public ToJson<HrStaffInfo> deletePersonById(String staffId) {
		return this.hrRetireeService.deletePersonById(staffId);
	}

	@ResponseBody
	@RequestMapping({ "/selectStaffInfoById" })
	public ToJson<Object> selectStaffInfoById(String staffId) {
		return this.hrRetireeService.selectStaffInfoById(staffId);
	}

	@ResponseBody
	@RequestMapping({ "/queryCountNoDocument" })
	public ToJson<HrStaffInfo> queryCountNoDocument(String deptId) {
		return this.hrRetireeService.queryCountNoDocument(deptId);
	}

	@ResponseBody
	@RequestMapping({ "/getUserByDeptId" })
	public ToJson<HrStaffInfo> getUserByDeptId(HttpServletRequest request,
			Integer deptId) {
		return this.hrRetireeService.getUserByDeptId(deptId);
	}

	@ResponseBody
	@RequestMapping({ "/uploadImage" })
	public ToJson<HrStaffInfo> uploadImage(HttpServletRequest request,
			MultipartFile imageFile, HrStaffInfo hrStaffInfo)
			throws IllegalStateException, IOException {
		return this.hrRetireeService.uploadImage(request, imageFile,
				hrStaffInfo);
	}

	@ResponseBody
	@RequestMapping({ "/getAllWorkYearsInfo" })
	public BaseWrapper getAllWorkYearsInfo(Integer space) {
		if (space == null) {
			space = Integer.valueOf(1);
		}
		return this.hrRetireeService.getAllWorkYearsInfo(space.intValue());
	}

	@ResponseBody
	@RequestMapping({ "/getAllRecordInfo" })
	public BaseWrapper getAllInfo() {
		return this.hrRetireeService.getAllRecordInfo();
	}

	@ResponseBody
	@RequestMapping({ "/importStaffInfo" })
	public ToJson<HrStaffInfo> importStaffInfo(MultipartFile file,
			HttpServletRequest request, HttpServletResponse response,
			HttpSession session) {
		return this.hrRetireeService.importStaffInfo(file, request, response,
				session);
	}
}
