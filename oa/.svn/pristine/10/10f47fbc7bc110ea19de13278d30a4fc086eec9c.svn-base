/*     */ package com.xoa.service.enclosure.impl;
/*     */ 
/*     */ import com.xoa.dao.enclosure.AttachmentMapper;
/*     */ import com.xoa.model.enclosure.Attachment;
/*     */ import com.xoa.service.enclosure.EnclosureService;
import com.xoa.util.Constant;
/*     */ import com.xoa.util.Convert;
/*     */ import com.xoa.util.ModuleEnum;
/*     */ import com.xoa.util.ToJson;
/*     */ import com.xoa.util.common.StringUtils;
/*     */ import com.xoa.util.common.session.SessionUtils;
/*     */ import java.io.File;
/*     */ import java.io.UnsupportedEncodingException;
/*     */ import java.text.SimpleDateFormat;
/*     */ import java.util.ArrayList;
/*     */ import java.util.Arrays;
/*     */ import java.util.Date;
/*     */ import java.util.List;
/*     */ import java.util.ResourceBundle;
/*     */ import javax.annotation.Resource;
/*     */ import javax.servlet.http.HttpServletRequest;
/*     */ import javax.servlet.http.HttpServletResponse;
/*     */ import org.springframework.stereotype.Service;
/*     */ import org.springframework.web.bind.annotation.RequestParam;
/*     */ import org.springframework.web.context.request.RequestContextHolder;
/*     */ import org.springframework.web.context.request.ServletRequestAttributes;
import org.springframework.web.multipart.MultipartFile;
/*     */ 
/*     */ @Service
/*     */ public class EnclosureServiceImpl
/*     */   implements EnclosureService
/*     */ {
/*     */ 
/*     */   @Resource
/*     */   AttachmentMapper attachmentMapper;
/*     */ 
/*     */   public void saveAttachment(Attachment attachment)
/*     */   {
/*  38 */     this.attachmentMapper.insertSelective(attachment);
/*     */   }
/*     */ 
/*     */   public Attachment findByAttachId(int attachId)
/*     */   {
/*  44 */     Attachment a = this.attachmentMapper.findByAttachId(attachId);
/*  45 */     return a;
/*     */   }
/*     */ 
/*     */   public Attachment findByLast()
/*     */   {
/*  57 */     Attachment att = this.attachmentMapper.findByLast();
/*  58 */     return att;
/*     */   }
/*     */ 
/*     */   public List<Attachment> uploadReturn(MultipartFile[] files, String company, String module)
/*     */   {
/*  74 */     if (files.length == 0) {
/*  75 */       return null;
/*     */     }
/*  77 */     ResourceBundle rb = ResourceBundle.getBundle("upload");
/*  78 */     String os = System.getProperty("os.name");
/*  79 */     StringBuffer sb = new StringBuffer();
/*  80 */     if (os.toLowerCase().startsWith("win"))
/*  81 */       sb = sb.append(rb.getString("upload.win"));
/*     */     else {
/*  83 */       sb = sb.append(rb.getString("upload.linux"));
/*     */     }
/*  85 */     List list = new ArrayList();
/*     */ 
/*  87 */     String ym = new SimpleDateFormat("yyMM").format(new Date());
/*     */ 
/*  89 */     HttpServletRequest request = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest();
/*  90 */     if (StringUtils.checkNull(sb.toString()).booleanValue()) {
/*  91 */       String a = request.getRealPath("");
/*  92 */       sb.append(a);
/*  93 */       sb.append(System.getProperty("file.separator")).append("attach").append(System.getProperty("file.separator")).append(company).append(System.getProperty("file.separator")).append(module).append(System.getProperty("file.separator")).append(ym);
/*     */     }
/*     */     else
/*     */     {
/*  98 */       sb.append(System.getProperty("file.separator")).append("attach").append(System.getProperty("file.separator")).append(company).append(System.getProperty("file.separator")).append(module).append(System.getProperty("file.separator")).append(ym);
/*     */     }
/*     */ 
/* 103 */     String path = sb.toString();
/* 104 */     Attachment attachment = new Attachment();
/* 105 */     for (int i = 0; i < files.length; i++) {
/* 106 */       MultipartFile file = files[i];
/* 107 */       Long filesize = Long.valueOf(file.getSize());
/* 108 */       if (file.isEmpty())
/*     */         continue;
/* 110 */       String fileName = file.getOriginalFilename().trim();
/*     */ 
/* 113 */       int attachID = Math.abs((int)System.currentTimeMillis());
/* 114 */       StringBuffer s = new StringBuffer();
/* 115 */       if (os.toLowerCase().startsWith("win"))
/* 116 */         s = s.append(fileName);
/*     */       else {
/*     */         try {
/* 119 */           s = s.append(new String(fileName.getBytes(), "UTF-8"));
/*     */         } catch (UnsupportedEncodingException e) {
/* 121 */           e.printStackTrace();
/*     */         }
/*     */       }
/* 124 */       String newFileName = Integer.toString(attachID) + "." + fileName.toString();
/*     */ 
/* 126 */       if (!file.isEmpty()) {
/*     */         try {
/* 128 */           if (!new File(path, newFileName).exists()) {
/* 129 */             new File(path, newFileName).mkdirs();
/*     */           }
/*     */ 
/* 132 */           file.transferTo(new File(path, newFileName));
/*     */         } catch (Exception e) {
/* 134 */           e.printStackTrace();
/*     */         }
/*     */       }
/*     */ 
/* 138 */       File f = new File(path + newFileName);
/* 139 */       f.renameTo(new File(newFileName));
/* 140 */       byte isImg = 3;
/*     */ 
/* 142 */       String type = fileName.substring(fileName.indexOf(".") + 1);
/* 143 */       String[] imagType = { "jpg", "png", "bmp", "gif", "JPG", "PNG", "BMP", "GIF" };
/* 144 */       List imageTyepLists = Arrays.asList(imagType);
/* 145 */       if (imageTyepLists.contains(type))
/* 146 */         isImg = 0;
/*     */       else {
/* 148 */         isImg = 1;
/*     */       }
/* 150 */       byte a = 0;
/* 151 */       byte b = 2;
/*     */ 
/* 153 */       int moduleID = 0;
/* 154 */       for (ModuleEnum em : ModuleEnum.values()) {
/* 155 */         if (em.getName().equals(module.trim())) {
/* 156 */           moduleID = em.getIndex();
/*     */         }
/*     */       }
/*     */ 
/* 160 */       byte mid = (byte)moduleID;
/* 161 */       attachment = new Attachment();
/* 162 */       attachment.setAttachId(Integer.valueOf(attachID));
/* 163 */       attachment.setModule(Byte.valueOf(mid));
/* 164 */       attachment.setAttachFile(fileName);
/* 165 */       attachment.setAttachName(fileName);
/* 166 */       attachment.setYm(ym);
/* 167 */       attachment.setAttachSign(new Long(0L));
/* 168 */       attachment.setDelFlag(Byte.valueOf(a));
/* 169 */       attachment.setPosition(Byte.valueOf(b));
/* 170 */       attachment.setIsImage(Byte.valueOf(isImg));
/*     */ 
/* 173 */       attachment.setFileSize(Convert.convertFileSize(filesize.longValue()));
/* 174 */       attachment.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));
/* 175 */       list.add(attachment);
/*     */       try {
/* 177 */         Thread.sleep(17L);
/*     */       } catch (InterruptedException e) {
/* 179 */         e.printStackTrace();
/*     */       }
/*     */     }
/*     */ 
/* 183 */     return list;
/*     */   }
/*     */ 
/*     */   public String attachmenturl(Attachment att, String company, String module)
/*     */   {
/* 188 */     String attUrl = "AID=" + att.getAid() + "&" + "MODULE=" + module + "&" + "YM=" + att.getYm() + "&" + "ATTACHMENT_ID=" + att.getAttachId() + "&" + "ATTACHMENT_NAME=" + att.getAttachName();
/* 189 */     return attUrl;
/*     */   }
/*     */ 
/*     */   public List<Attachment> upload(MultipartFile[] files, String company, String module) throws UnsupportedEncodingException {
/* 193 */     List<Attachment> list = uploadReturn(files, company, module);
/* 194 */     List attachmentList = new ArrayList();
/* 195 */     for (Attachment attachment : list) {
/* 196 */       attachment.setSize(attachment.getFileSize());
/* 197 */       saveAttachment(attachment);
/* 198 */       String attUrl = "AID=" + attachment.getAid() + "&" + "MODULE=" + module + "&" + "COMPANY=" + company + "&" + "YM=" + attachment.getYm() + "&" + "ATTACHMENT_ID=" + attachment.getAttachId() + "&" + "ATTACHMENT_NAME=" + attachment.getAttachName() + "&" + "FILESIZE=" + attachment.getFileSize();
/*     */ 
/* 200 */       attachment.setAid(attachment.getAid());
/* 201 */       attachment.setAttUrl(attUrl);
/* 202 */       attachmentList.add(attachment);
/*     */     }
/* 204 */     return attachmentList;
/*     */   }
/*     */ 
/*     */   public ToJson delete(@RequestParam("AID") String aid, @RequestParam("MODULE") String module, @RequestParam("YM") String ym, @RequestParam("ATTACHMENT_ID") String attachmentId, @RequestParam("ATTACHMENT_NAME") String attachmentName, @RequestParam("COMPANY") String company, HttpServletResponse response, HttpServletRequest request)
/*     */   {
/* 216 */     ToJson tj = new ToJson();
/* 217 */     ResourceBundle rb = ResourceBundle.getBundle("upload");
/*     */ 
/* 219 */     String osName = System.getProperty("os.name");
/* 220 */     StringBuffer sb = new StringBuffer();
/* 221 */     if (osName.toLowerCase().startsWith("win"))
/* 222 */       sb = sb.append(rb.getString("upload.win"));
/*     */     else {
/* 224 */       sb = sb.append(rb.getString("upload.linux"));
/*     */     }
/*     */ 
/* 228 */     String path = sb.toString() + System.getProperty("file.separator") + "attach" + System.getProperty("file.separator") + company + System.getProperty("file.separator") + module + System.getProperty("file.separator") + ym + System.getProperty("file.separator") + attachmentId + "." + attachmentName;
/*     */ 
/* 230 */     boolean flag = false;
/* 231 */     File file = new File(path);
/* 232 */     if (file.exists()) {
/* 233 */       file.delete();
/* 234 */       flag = true;
/*     */     }
/* 236 */     if (!flag) {
/* 237 */       tj.setFlag(0);
/* 238 */       tj.setMsg("OK");
/*     */     } else {
/* 240 */       tj.setFlag(1);
/* 241 */       tj.setMsg("false");
/*     */     }
/* 243 */     return tj;
/*     */   }
/*     */ 
/*     */   public ToJson<Attachment> selectByPrimaryKey(Integer aid, String module, HttpServletRequest request)
/*     */   {
/* 250 */     ToJson json = new ToJson();
/* 251 */     String company = Constant.MYOA + (String)SessionUtils.getSessionInfo(request.getSession(), "loginDateSouse", String.class);
/*     */     try {
/* 253 */       Attachment attachment = this.attachmentMapper.selectByPrimaryKey(aid);
/* 254 */       String attUrl = "AID=" + attachment.getAid() + "&" + "MODULE=" + module + "&" + "COMPANY=" + company + "&" + "YM=" + attachment.getYm() + "&" + "ATTACHMENT_ID=" + attachment.getAttachId() + "&" + "ATTACHMENT_NAME=" + attachment.getAttachName() + "&" + "FILESIZE=" + attachment.getFileSize();
/*     */ 
/* 256 */       attachment.setAttUrl(attUrl);
/* 257 */       json.setObject(attachment);
/* 258 */       json.setFlag(0);
/* 259 */       json.setMsg("ok");
/*     */     } catch (Exception e) {
/* 261 */       json.setFlag(1);
/* 262 */       json.setMsg("err");
/*     */     }
/* 264 */     return json;
/*     */   }
/*     */ }

/* Location:           D:\xoa\webapps\ROOT\WEB-INF\classes\
 * Qualified Name:     com.xoa.service.enclosure.impl.EnclosureServiceImpl
 * JD-Core Version:    0.6.0
 */